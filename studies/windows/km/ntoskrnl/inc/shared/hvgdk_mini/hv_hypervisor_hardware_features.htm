<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>HV_HYPERVISOR_HARDWARE_FEATURES</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>HV_HYPERVISOR_HARDWARE_FEATURES </h1>
  <p>The <span class="struct">HV_HYPERVISOR_HARDWARE_FEATURES</span> structure (formally
  <span class="struct">_HV_HYPERVISOR_HARDWARE_FEATURES</span>) collects the flags 
  that a Microsoft-compatible hypervisor’s <span class="instruction">cpuid</span> 
  leaf 0x40000006 produces in the <span class="register">eax</span>,
  <span class="register">ebx</span>, <span class="register">ecx</span> and
  <span class="register">edx</span> registers. </p>
  <h2>Availability </h2>
  <p>The <span class="struct">HV_HYPERVISOR_HARDWARE_FEATURES</span> is defined 
  in version 6.3, having developed from the unnamed structure that version 6.2 defines 
  for the <span class="member">MsHvHardwareFeatures</span> member of the
  <span class="union"><a href="hv_cpuid_result.htm">HV_CPUID_RESULT</a></span> union. 
  It is superseded in version 10.0 by the <span class="struct">
  <a href="hv_x64_hypervisor_hardware_features.htm">HV_X64_HYPERVISOR_HARDWARE_FEATURES</a></span>. 
  Version 10.0 also defines an <span class="struct">HV_ARM64_HYPERVISOR_HARDWARE_FEATURES</span>, 
  but what this represents on the applicable processors lies (far) outside the scope 
  of this article. </p>
  <p>It is here thought that <span class="struct">HV_HYPERVISOR_HARDWARE_FEATURES</span> 
  is retained in version 10.0 and higher as a macro for the appropriate processor-specific 
  structure: <span class="struct">HV_X64_HYPERVISOR_HARDWARE_FEATURES</span> iwhen 
  building for the x86 and x64 processors; but <span class="struct">HV_ARM64_HYPERVISOR_HARDWARE_FEATURES</span> 
  for the 32-bit and 64-bit ARM processors. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">HV_HYPERVISOR_HARDWARE_FEATURES</span> is not documented 
  but the structure just repackages material that Microsoft documents in the
  <a href="https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/reference/tlfs">
  Hypervisor Top-Level Functional Specification</a>. It may be just that Microsoft 
  regards the structure as no more than a convenience for Microsoft’s own programming 
  in the loader and kernel, if not in the hypervisor itself. </p>
  <h2>Layout </h2>
  <p>The <span class="struct">HV_HYPERVISOR_HARDWARE_FEATURES</span> is 0x10 bytes 
  in both 32-bit and 64-bit Windows, as was the unnamed structure that it was developed 
  from. Offsets and definitions below are from type information in symbol files 
  for URLMON.DLL in Windows 8 and Windows 8.1. Well might you wonder what URLMON.DLL 
  has to do with the hypervisor such that its symbol files have type information 
  for this structure but the kernel’s don’t! </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">/*  bit fields for EAX, see below  */</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>
        <pre class="source">UINT32 ReservedEbx;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">UINT32 ReservedEcx;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>
        <pre class="source">UINT32 ReservedEdx;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
    </tbody>
  </table>
  <p>Version numbers before 6.3 refer to prior appearance in the
  <span class="member">MsHvHardwareFeatures</span> member of the
  <span class="struct">HV_CPUID_RESULT</span>. </p>
  <h3>Offset 0x00 (<span class="register">EAX</span>) </h3>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>&nbsp;0x00000001 </td>
        <td>
        <pre class="source">UINT32 ApicOverlayAssistInUse : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x00000002 </td>
        <td>
        <pre class="source">UINT32 MsrBitmapsInUse : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x00000004 </td>
        <td>
        <pre class="source">UINT32 ArchitecturalPerformanceCountersInUse : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x00000008 </td>
        <td>
        <pre class="source">UINT32 SecondLevelAddressTranslationInUse : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x00000010 </td>
        <td>
        <pre class="source">UINT32 DmaRemappingInUse : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x00000020 </td>
        <td>
        <pre class="source">UINT32 InterruptRemappingInUse : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>0x00000040 </td>
        <td>
        <pre class="source">UINT32 MemoryPatrolScrubberPresent : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>
        <pre class="source">UINT32 Reserved : 25;</pre>
        </td>
        <td>6.2 to 6.3 </td>
      </tr>
    </tbody>
  </table>
  <p>All seven flags are defined for Windows 8, as shown by symbol files, but they 
  have different documentation histories. Note first that the Windows 8 kernel was 
  built on 25th July 2012. The TLFS version 2.0a, dated May 2012, precedes this 
  but documents the first four flags. These presumably had been in preparation for 
  some time. The next two are documented in the TLFS version 3.0a, dated August 
  2012. As if to assert that similarly good correlation between implementation and 
  documentation would better not be expected as unremarkable,
  <span class="member">MemoryPatrolScrubberPresent</span> was left among the Reserved 
  bits. It is, however, listed in TLFS version 4.0b, dated August 2013, and described 
  (briefly) in subsequent versions. </p>
  <p>All flags that are defined for version 6.3 continue to version 10.0 in the
  <span class="struct">HV_X64_HYPERVISOR_HARDWARE_FEATURES</span>. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 12th
    <a href="../../../../../../../new/16/11.htm">November 2016</a> and was last 
    modified on 10th December 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

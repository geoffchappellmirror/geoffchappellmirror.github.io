<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>MI_MEMORY_EVENT_TYPES</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>MI_MEMORY_EVENT_TYPES </h1>
  <p>The <span class="enum">MI_MEMORY_EVENT_TYPES</span> enumeration (formally
  <span class="enum">_MI_MEMORY_EVENT_TYPES</span>) looks to have been introduced 
  for Windows 10 to help with supporting memory partitions. What had been internal 
  variables for the kernel’s management of physical memory now had to be reproduced 
  for each partition. They were reworked as members of structures that are nested 
  in the <span class="struct"><a href="mi_partition.htm">MI_PARTITION</a></span>. 
  In the particular case of the many separate variables in which the kernel kept 
  pointers to <span class="struct">KEVENT</span> objects to signal on the occurrence 
  of corresponding events in memory management, the variables were collected into 
  an array named <span class="member">MemoryEvents</span> in the
  <span class="struct"><a href="mi_partition_core.htm">MI_PARTITION_CORE</a></span>. 
  The <span class="enum">MI_MEMORY_EVENT_TYPES</span> indexes this array. </p>
  <table class="Enum">
    <colgroup>
      <col class="Value"><col class="Name"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Value (x86) </th>
        <th>Name </th>
        <th>Versions </th>
        <th>Object Name </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0 (10.0 to 1607) </td>
        <td><span class="constant">LowAvailablePagesEvent</span> </td>
        <td>10.0 to 1607 </td>
        <td>\KernelObjects\LowMemoryCondition </td>
      </tr>
      <tr>
        <td>1 (10.0 to 1607) </td>
        <td><span class="constant">HighAvailablePagesEvent</span> </td>
        <td>10.0 to 1607 </td>
        <td>\KernelObjects\HighMemoryCondition </td>
      </tr>
      <tr>
        <td>2 (10.0 to 1607); <br>
        0 </td>
        <td><span class="constant">LowPagedPoolEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\LowPagedPoolCondition </td>
      </tr>
      <tr>
        <td>3 (10.0 to 1607); <br>
        1 </td>
        <td><span class="constant">HighPagedPoolEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\HighPagedPoolCondition </td>
      </tr>
      <tr>
        <td>4 (10.0 to 1607); <br>
        2 </td>
        <td><span class="constant">LowNonPagedPoolEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\LowNonPagedPoolCondition </td>
      </tr>
      <tr>
        <td>5 (10.0 to 1607); <br>
        3 </td>
        <td><span class="constant">HighNonPagedPoolEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\HighNonPagedPoolCondition </td>
      </tr>
      <tr>
        <td>4 </td>
        <td><span class="constant">LowAvailablePagesEvent</span> </td>
        <td>1703 and higher </td>
        <td>\KernelObjects\LowMemoryCondition </td>
      </tr>
      <tr>
        <td>5 </td>
        <td><span class="constant">HighAvailablePagesEvent</span> </td>
        <td>1703 and higher </td>
        <td>\KernelObjects\HighMemoryCondition </td>
      </tr>
      <tr>
        <td>6 </td>
        <td><span class="constant">LowCommitEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\LowCommitCondition </td>
      </tr>
      <tr>
        <td>7 </td>
        <td><span class="constant">HighCommitEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\HighCommitCondition </td>
      </tr>
      <tr>
        <td>8 </td>
        <td><span class="constant">MaximumCommitEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\MaximumCommitCondition </td>
      </tr>
      <tr>
        <td>9 </td>
        <td><span class="constant">BadMemoryDetectedEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\MemoryErrors </td>
      </tr>
      <tr>
        <td>10 </td>
        <td><span class="constant">PhysicalMemoryChangeEvent</span> </td>
        <td>10.0 and higher </td>
        <td>\KernelObjects\PhysicalMemoryChange </td>
      </tr>
      <tr>
        <td>11 </td>
        <td><span class="constant">TotalNumberOfMemoryEvents</span> </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="struct">KEVENT</span> structure for each of these events is 
  not merely a kernel object such as might be referenced by any kernel-mode software 
  that learns the address. Instead, these events are Object Manager objects which 
  can be opened by name (subject to security), including by user-mode software. 
  It’s almost as if much of the point to the memory events is that they are accessible 
  to user-mode software such as may alert the user (or system administrator) at 
  notable moments in the use of memory. Yet Microsoft documents the events only 
  as
  <a href="https://docs.microsoft.com/windows-hardware/drivers/kernel/standard-event-objects">
  Standard Event Objects</a> for drivers to use—and even then does not document 
  the last two. There must be other documentation to find—or more to write about 
  these events! </p>
  <div class="Footer">
    <p class="Dates">This page was created on 15th
    <a href="../../../../../../../new/22/07.htm">August 2022</a> and was last modified 
    on 31st August 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c22.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5890" -->
  </div>
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>LINK.EXE Command Files</title>
<link rel="stylesheet" type="text/css" href="../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../_styles/msvc.css">
<script type="text/javascript" src="../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../_scripts/document.js"></script>
<script type="text/javascript" src="../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="22703" endspan -->
<h1>LINK.EXE Command Files </h1>
<p>Where a directive on the actual command line begins with an @ sign, the remainder 
of the directive names a command file. It is a fatal error (LNK1104) if the command 
file cannot be opened for reading in text mode (with no sharer to have write access). 
The one exception is that the hyphen is interpreted as naming standard input, which 
the linker assumes is already open. </p>
<p>Though <span class="command">@-</span> is supported syntactically and is explicitly 
provided with a non-trivial interpretation in the code, it is essentially useless. 
First, if standard input is a device, such as the console, then since the C Run-Time 
Library explicitly does not interpret Ctrl-Z as terminating input from a device, 
there seems to be no way to stop the linker from wanting to keep reading directives 
from standard input forever. Second, if standard input is redirected from a file, 
then because the linker does not open the file on each pass through its command-line 
sources, the file’s contents are good for only the first pass. </p>
<p>The command file is parsed for directives line by line, for as long as lines 
can be read. It is a fatal error (LNK1170) for a command file to have too long a 
line. The present limit is 128KB. </p>
<p>A command-file directive is in effect a command-line macro, expanding in place 
to whatever command-line arguments are found in the named file. Note however that 
command-file directives are recognised only on the actual command line. In all other 
circumstances, including recursion from a command file, a directive that begins 
with an @ is interpreted as an input-file directive, with the @ as the first character 
in the filename. </p>
<div class="Footer">
  <p class="Dates">This page was created on 24th September 2005 and was last modified 
  on 9th June 2009. </p>
  <!--webbot bot="Include" U-Include="../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62439" endspan -->
</div>

</body>

</html>

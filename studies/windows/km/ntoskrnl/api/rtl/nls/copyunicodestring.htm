<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>RtlCopyUnicodeString</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>RtlCopyUnicodeString </h1>
<p>The <span class="function">RtlCopyUnicodeString</span> function sets one
<span class="struct"><a href="../../../inc/shared/ntdef/unicode_string.htm">UNICODE_STRING</a></span> structure 
from another, copying as much of the described string as fits. </p>
<h2>Declaration </h2>
<pre class="source">VOID 
RtlCopyUnicodeString (
    UNICODE_STRING *DestinationString, 
    UNICODE_STRING const *SourceString);</pre>
<h3>Parameters </h3>
<p>The required <span class="argument">DestinationString</span> argument addresses 
the <span class="struct">UNICODE_STRING</span> structure that the function is to 
change. It is assumed to have a <span class="member">Buffer</span> of
<span class="member">MaximumLength</span> bytes. </p>
<p>The optional <span class="argument">SourceString</span> argument is the address 
of a <span class="struct">UNICODE_STRING</span> whose contents are to be copied. 
It is assumed to have a <span class="member">Buffer</span> that contains
<span class="member">Length</span> bytes. The <span class="argument">DestinationString</span> 
receives a copy of as many of these bytes as fit. This argument can be
<span class="constant">NULL</span> to clear the <span class="argument">DestinationString</span>.
</p>
<h2>Availability </h2>
<p>The <span class="function">RtlCopyUnicodeString</span> function is exported by 
name from the kernel and from NTDLL in all known versions, i.e., 3.10 and higher.
</p>
<h2>Documentation Status </h2>
<p>The <span class="function">RtlCopyUnicodeString</span> function is documented 
in all known editions of the Device Driver Kit (DDK) or Windows Driver Kit (WDK) 
since at least the DDK for Windows NT 3.51. Though this documentation is of the 
kernel-mode function as an export from the kernel, it is mostly applicable to the 
user-mode implementation too, both being plausibly compiled from the same source 
file. </p>
<p>Starting with the WDK for Windows 7, Microsoft documents the availability of
<span class="function">RtlCopyUnicodeString</span> as “Windows 2000 and later versions 
of Windows.” </p>
<h2>Behaviour </h2>
<!--webbot bot="Include" U-Include="_include/unicode_string.htm" TAG="BODY" startspan -->

<p>The intention of the <span class="struct">UNICODE_STRING</span> structure is 
to keep together both the address and size of a Unicode string, presumably to save 
on passing them as separate arguments for subsequent work with the string and to 
save on repeated re-reading of the whole string to rediscover its size. Indeed, 
the structure keeps two sizes. The <span class="member">Length</span> member is 
the size in bytes of the array of Unicode characters at <span class="member">Buffer</span>. 
If this array is null-terminated, which it explicitly need not be, then
<span class="member">Length</span> does not count the null terminator. The
<span class="member">MaximumLength</span> member is the size in bytes of the memory 
from <span class="member">Buffer</span> onwards. </p>

<!--webbot bot="Include" endspan i-checksum="43448" -->
<p>The <span class="function">RtlCopyUnicodeString</span> function copies from the
<span class="member">Buffer</span> of <span class="argument">SourceString</span> 
to the <span class="member">Buffer</span> of <span class="argument">DestinationString</span>. 
It does not find new memory for the <span class="argument">DestinationString</span>. 
It copies to the destination’s existing <span class="member">Buffer</span> however 
much will fit from the source’s <span class="member">Buffer</span>, and it appends 
a null terminator if this too will fit. It updates the destination’s
<span class="member">Length</span> to match the new content. </p>
<p>For the special case with <span class="constant">NULL</span> for the
<span class="argument">SourceString</span>, there is no content to copy and the 
function is trivial except for setting the destination’s <span class="member">Length</span> 
to zero. </p>
<p>In all other cases, the function assumes that: the <span class="argument">SourceString</span> 
has a <span class="member">Buffer</span> that is not <span class="constant">NULL</span> 
and at which there are at least <span class="member">Length</span> bytes to read; 
and the <span class="argument">DestinationString</span> has a
<span class="member">Buffer</span> that is not <span class="constant">NULL</span> 
and which can hold <span class="member">MaximumLength</span> bytes. Versions before 
5.2 also assume that the destination’s <span class="member">MaximumLength</span> 
is even. </p>
<p>Note that the function has no return value. It has no success or failure to 
signify that the copy was whole or truncated. If a caller would regard 
truncation as failure, then the easiest detection of truncation is to test 
whether <span class="member">Length</span> at <span class="argument">
SourceString</span> on output is less than <span class="member">Length</span> at
<span class="argument">DestinationString</span>. </p>
<h3>IRQL </h3>
<p>The kernel-mode implementation is in a non-paged section in all applicable 
versions. Provided that the two <span class="struct">UNICODE_STRING</span> structures and 
the memory they each point to from their <span class="member">Buffer</span> members 
are in non-paged memory, the <span class="function">RtlCopyUnicodeString</span> 
function can safely be called at any IRQL. That it can has been documented by Microsoft 
since at least the DDK for Windows NT 3.51, but with only the one condition that 
“the buffers must be resident”, not also the structures, for use at and above
<span class="constant">DISPATCH_LEVEL</span>. </p>
<div class="Footer">
  <p class="Dates">This page was created on 18th April 2020 but was not published 
  until 28th <a href="../../../../../../../new/20/05.htm">May 2020</a>. It was last 
  modified on 1st June 2020. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5634" -->
</div>

</body>

</html>

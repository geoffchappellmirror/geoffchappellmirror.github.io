<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EtwEventWriteTransfer</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/win32.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/win32.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<!--webbot bot="Include" U-Include="../../../../_include/sketch.htm" TAG="BODY" startspan -->

<div class="Header">
  <p class="alert">SKETCH OF HOW RESEARCH MIGHT CONTINUE AND RESULTS BE PRESENTED
  </p>
</div>

<!--webbot bot="Include" endspan i-checksum="5204" -->
<h1>EtwEventWriteTransfer </h1>
<p>An event provider calls this function to write an event. The additional data 
that can be written through this function instead of <span class="function">
<a href="write.htm">EtwEventWrite</a></span> allows for relating the event to other 
events. </p>
<h2>Declaration </h2>
<pre>ULONG
EtwEventWriteTransfer (
    REGHANDLE RegHandle,
    EVENT_DESCRIPTOR const *EventDescriptor,
    GUID const *ActivityId, 
    GUID const *RelatedActivityId, 
    ULONG UserDataCount,
    EVENT_DATA_DESCRIPTOR *UserData);</pre>
<h3>Parameters </h3>
<p>The required <span class="argument">RegHandle</span> argument identifies which 
registration of an event provider is writing the event. </p>
<p>The required <span class="argument">EventDescriptor</span> argument tells which 
event is to be written. </p>
<p>The optional <span class="argument">ActivityId</span> argument tags the event 
with an identifier that other events may refer to as their related activity. This 
argument can be <span class="constant">NULL</span> to stand for whatever activity 
identifier is current set for the calling thread. </p>
<p>The <span class="argument">RelatedActivityId</span> argument tags the event as 
being related to the activity of some other event. This argument is optional in 
most versions but is required in version 6.0. </p>
<p>The optional <span class="argument">UserDataCount</span> and
<span class="argument">UserData</span> arguments are respectively the element count 
and address of an array of structures that supply event-specific data to record 
with the event. </p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../../_include/winerror.htm" TAG="BODY" startspan -->

<p>The function returns zero for success, else a Win32 error code. </p>

<!--webbot bot="Include" endspan i-checksum="16666" -->
<h2>Availability </h2>
<p>The <span class="function">EtwEventWriteTransfer</span> function is exported 
by name from NTDLL.DLL in version 6.0 and higher. Well-behaved software does not 
call this function but instead calls <span class="function">EventWriteTransfer</span>, 
which is exported by name from ADVAPI32.DLL in version 6.0 and higher as a forward 
to <span class="function">EtwEventWriteTransfer</span>. </p>
<h2>Documentation Status </h2>
<p>As with many NTDLL exports, Microsoft does not document
<span class="function">EtwEventWriteTransfer</span>. The higher-level ADVAPI32 function
<span class="function">EventWriteTransfer</span> is documented. </p>
<p>A C-language declaration of <span class="function">EtwEventWriteTransfer</span> 
is published by Microsoft in a file named NTETW.H in the Enterprise edition of the 
Windows Driver Kit (WDK) for Windows 10 Version 1511. </p>
<h2>Behaviour </h2>
<p>The <span class="argument">RelatedActivityId</span> argument is required in version 
6.0, else the function returns <span class="constant">ERROR_INVALID_PARAMETER</span>.
</p>
<h3>General Event Writing </h3>
<p>If <span class="argument">EventDescriptor</span> is <span class="constant">NULL</span>, 
the function has no event to write: it returns <span class="constant">ERROR_INVALID_PARAMETER</span>.
</p>
<p>If the <span class="argument">RegHandle</span> is not valid, the function has 
no event provider to write an event from: it returns <span class="constant">ERROR_INVALID_HANDLE</span>. 
A valid <span class="type">REGHANDLE</span> is produced by the
<span class="function">EtwEventRegister</span> function and is made invalid by
<span class="function">EtwEventUnregister</span>. </p>
<p>Event providers send events into the ETW mechanism. Tracing sessions receive 
them. Each tracing session chooses which event providers they want events from. 
For each event provider that they so enable, a tracing session may also specify 
a level and keyword to match against events from that provider. In later versions, 
they may also specify properties that affect the matching. If the
<span class="member">Level</span> and <span class="member">Keyword</span> in at
<span class="argument">EventDescriptor</span> match this specification, then the 
event is said to be enabled for the session. </p>
<p>If the event is enabled for any private tracing session, the function writes 
the event to the user-mode tracing buffers of each such session for which the event 
is enabled. Failure to write to any such session is failure for the function.
</p>
<p>If the event is enabled for any tracing session that is managed by the kernel, 
the function sends the event to the kernel for distribution to each tracing session 
for which the event is enabled. Inputs and defaults are packaged as an
<span class="struct">EVENT_HEADER</span> for <span class="function">NtTraceEvent</span> 
with <span class="constant">ETW_NT_FLAGS_TRACE_EVENT</span> as its
<span class="argument">Flags</span> argument. Failure from the kernel is failure 
for the function. </p>
<div class="Footer">
  <p class="Dates">This page was created on 17th May 2020 but was not published 
  until 28th <a href="../../../../../../../new/20/05.htm">May 2020</a>. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5634" -->
</div>

</body>

</html>

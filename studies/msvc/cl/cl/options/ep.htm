<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>CL /EP</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>CL /EP </h1>
<h2>Syntax </h2>
<p>This option has no arguments. It is <span class="switch">/EP</span> only. </p>
<h3>Relations </h3>
<p>The <span class="switch">/EP</span> option </p>
<ul>
  <li>weakly overrides <span class="switch"><a href="g$m.htm">/Gm</a></span>
  </li>
  <li>is a sufficient prerequisite for <span class="switch"><a href="c.htm">/C</a></span>
  </li>
</ul>
<p>It passes to the front-end C and C++ compilers (C1 and C1XX) as both
<span class="switch"><a href="e.htm">-E</a></span> and <span class="switch">-EP</span>.
</p>
<h2>Behaviour (CL) </h2>
<p>The <span class="switch">/EP</span> option leaves only the front-end C and C++ 
compilers as active. It disables all the remaining build stages: namely, Processing, 
Generating Code and Linking (though Processing can later be enabled by following 
with <span class="switch"><a href="b1_5.htm">/B1_5</a></span>). </p>
<h3>Standard Output </h3>
<p>CL understands the primary outcome from the compiler modules is to write text 
to standard output. CL protects this outcome by disabling several mechanisms that 
might otherwise cause either CL itself or the compiler modules to write other text 
to standard output. Specifically, the <span class="switch">/EP</span> option </p>
<ul>
  <li>stops CL from duplicating standard output as standard error </li>
  <li>defeats the reporting of execution times to standard output, if otherwise 
  enabled by <span class="switch"><a href="b$t.htm">/Bt</a></span> </li>
  <li>disables multi-processing </li>
</ul>
<p>Both CL (after its command-line analysis) and the compiler modules write most 
text, particularly error and warning messages and related notes, to standard error. 
By duplicating standard output as standard error before executing compiler modules, 
CL arranges that these messages, though still written to standard error, end up 
with whatever file or device CL was given as standard output. The ordinarily desirable 
effect is that these messages become subject to command-line redirection for easy 
capture to a file. Use of <span class="switch">/EP</span> implies that this effect 
is not wanted. Whatever text the compiler modules are expected to produce because 
of <span class="switch">/EP</span> goes to standard output (and is subject to command-line 
redirection), but error messages, etc, go to the file or device that was given to 
CL as standard error (and are not subject to command-line redirection). </p>
<p>That <span class="switch">/EP</span> disables multi-processing is a natural defence 
since the same standard output would be given to the front-end compilers for each 
C or C++ source file, such that text produced as output for different source files 
may get intermingled. Use of <span class="switch">/EP</span> with the usual conditions 
for multiprocessing (two or more input files and a <span class="switch">
<a href="mp.htm">/MP</a></span> option whose argument is greater than 1) causes 
a warning (<a href="../warnings/d4030.htm">D4030</a>). </p>
<h3>Unrecognised Input Files </h3>
<p>No explanation is attempted here for one more side-effect of the
<span class="switch">/EP</span> option: input files of unrecognised type become 
treated as C source files (instead of object files), with no warning. </p>
<h2>Behaviour (Compiler Modules) </h2>
<p class="alert">TO BE DONE SOMETIME </p>
<div class="Footer">
  <p class="Dates">This page was created on 27th October 2005 and was last modified 
  on 11th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62424" endspan -->
</div>

</body>

</html>

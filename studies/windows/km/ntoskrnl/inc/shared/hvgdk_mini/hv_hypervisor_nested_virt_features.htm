<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>HV_HYPERVISOR_NESTED_VIRT_FEATURES</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>HV_HYPERVISOR_NESTED_VIRT_FEATURES </h1>
  <p>The <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span> structure 
  (formally <span class="struct">_HV_HYPERVISOR_NESTED_VIRT_FEATURES</span> ) collects 
  the flags that a Microsoft-compatible hypervisor’s <span class="instruction">
  <a href="../../../../cpu/cpuid/index.htm">cpuid</a></span> leaf 0x4000000A produces 
  in the <span class="register">eax</span>, <span class="register">ebx</span>,
  <span class="register">ecx</span> and <span class="register">edx</span> registers.
  </p>
  <h2>Availability </h2>
  <p>The <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span> is new for 
  the 1511 release of Windows 10. </p>
  <h3>Access </h3>
  <p>The kernel is not known to expose this structure or any reading of
  <span class="instruction">cpuid</span> leaf 0x4000000A through any interface, 
  documented or not, even in kernel mode. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span> 
  structure is not documented. The hypervisor’s <span class="instruction">cpuid</span> implementation 
  is documented in the
  <a href="https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/reference/tlfs">
  Hypervisor Top-Level Functional Specification</a> (TLFS). What’s offered today, 
  12th November 2016, as the specification’s most recent version is a PDF that is 
  three years old (version 4.0b, dated August 2013). it extends only to leaf 0x40000006. 
  Revelation of <span class="instruction">cpuid</span> leaf 0x4000000A apparently 
  had to wait for version 5.0a, dated February 2017. Better late than never, perhaps, 
  but the reality behind the superficially fine words of the Microsoft Open Specification 
  Promise is that the Hyper-V implementation, and presumably Microsoft’s use of 
  it to Microsoft’s advantage for Microsoft’s purposes, runs ahead of the documentation 
  that Microsoft opens for general use. </p>
  <p>As for the <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span> as Microsoft’s 
  particular expression of the output from <span class="instruction">cpuid</span> 
  leaf 0x4000000A, disclosure by Microsoft is conspicuously thin. The practical 
  equivalent of a C-language definition is published as type information in symbol 
  files, but in the downloadable packages of public symbols for 32-bit and 64-bit 
  Windows 10, type information for <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span>  
  appears <span class="emphasis">only</span> in the symbol files for URLMON.DLL. 
  This is a user-mode DLL that originated as a component of Internet Explorer (and 
  still follows Internet Explorer’s version numbering). Well might you wonder what 
  this DLL has to do with the hypervisor such that its symbol files have type information 
  for this structure but the kernel’s don’t! Symbol files for URLMON.DLL starting 
  with Windows 8, both in packages of Windows symbols and when downloaded from Microsoft’s 
  public symbol server, happen to be private symbols. This surely was an oversight, 
  but however this disclosure came about, Microsoft stopped it for Version 1803. 
  That URLMON.DLL knows of the <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span>  
  is because some URLMON.DLL source code has a <span class="directive">#include</span> 
  for a header named <a href="../../../source/inc/hvgdk_mini.htm">hvgdk_mini.h</a>. 
  Microsoft is known to use his header for its own programming of the Windows kernel 
  but is not known to have ever made it available for use by programmers in general 
  (let alone by the programmers of competing web browsers). </p>
  <p>Type information for the <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span>  
  turns out to have been also disclosed in the relatively plain sight of two statically 
  linked libraries. I say relatively plain because even experts tend to overlook 
  that libraries can hold type information. Beware anyway that type information 
  in statically linked libraries does not always match the operating system that 
  the library is supposedly intended for. One of the libraries, named CLFSMGMT.LIB, 
  is among the many that are supplied with the Software Development Kit (SDK) for 
  user-mode programming. Type information for the <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span>  
  drops out of this library in Version 2004. The other is more obviously related 
  to hypervisors. It is named KDHV.LIB. Microsoft distributes it among the programming 
  samples in the Debugging Tools for Windows. It has type information for the
  <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span> for all versions of Windows 
  10 at least to the 2004 release. </p>
  <h2>Layout </h2>
  <p>The <span class="struct">HV_HYPERVISOR_NESTED_VIRT_FEATURES</span> is 0x10 
  bytes in both 32-bit and 64-bit Windows. Offsets and definitions below are 
  from type information in symbol files for URLMON.DLL before Version 1803 and 
  then in KDHV.LIB. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">/*  bit fields, see below  */</pre>
        </td>
        <td>
        1511 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x04 </td>
        <td>
        <pre class="source">UINT32 ReservedEbx;</pre>
        </td>
        <td>
        1511 to 1903 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">/*  bit fields, see below  */</pre>
        </td>
        <td>
        2004 and higher </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">UINT32 ReservedEcx;</pre>
        </td>
        <td>
        1511 and higher </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>
        <pre class="source">UINT32 ReservedEdx;</pre>
        </td>
        <td>
        1511 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>That <span class="register">ebx</span> is newly meaningful for the first 
  half-yearly release of 2020 is perhaps too early for TLFS version 6.0b, dated 
  February 2020, which is the latest at Microsoft’s website nearly three years 
  later in December 2022. </p>
  <h3>Offset 0x00 (<span class="register">EAX</span>) </h3>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x000000FF </td>
        <td>
        <pre class="source">UINT32 EnlightedVmcsVersionLow : 8;</pre>
        </td>
        <td>1511 and higher </td>
      </tr>
      <tr>
        <td>0x0000FF00 </td>
        <td>
        <pre class="source">UINT32 EnlightedVmcsVesionHigh : 8;</pre>
        </td>
        <td>1511 and higher </td>
      </tr>
      <tr>
        <td>0x00010000 </td>
        <td>
        <pre class="source">UINT32 FlushGuestPhysicalHypercall_Deprecated : 1;</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td>0x00020000 </td>
        <td>
        <pre class="source">UINT32 NestedFlushVirtualHypercall : 1;</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td>0x00040000 </td>
        <td>
        <pre class="source">UINT32 FlushGuestPhysicalHypercall : 1;</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td>0x00080000 </td>
        <td>
        <pre class="source">UINT32 MsrBitmap : 1;</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td>0x00100000 </td>
        <td>
        <pre class="source">UINT32 VirtualizationException : 1;</pre>
        </td>
        <td>1709 and higher </td>
      </tr>
      <tr>
        <td>0x00200000 </td>
        <td>
        <pre class="source">UINT32 DebugCtl : 1;</pre>
        </td>
        <td>2004 and higher </td>
      </tr>
      <tr>
        <td rowspan="4">&nbsp;</td>
        <td>
        <pre class="source">UINT32 Reserved0 : 16;</pre>
        </td>
        <td>1511 and higher </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UINT32 Reserved0 : 12;</pre>
        </td>
        <td>1607 to 1703 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UINT32 Reserved0 : 11;</pre>
        </td>
        <td>1709 to 1903 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UINT32 Reserved0 : 10;</pre>
        </td>
        <td>2004 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>Presumably, there was a <span class="member">FlushGuestPhysicalHypercall</span> 
  flag before it was renamed to make clear its deprecation. Perhaps the functionality 
  it governed has some complicated history during the development of the 1607 
  release such that it needed a new bit. The deprecated bit is marked as Reserved 
  in all the known TLFS versions 5.0a to 6.0b. </p>
  <p>Though the <span class="member">VirtualizationException</span> flag was defined 
  for the second half-yearly release of 2017, according to symbol files, it gets no mention 
  nearly a year later in the TLFS version 5.0c dated July 2018. It is documented in the TLFS 
  version 6.0b dated February 2020. </p>
  <h3>Offset 0x04 (<span class="register">EBX</span>) </h3>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00000001 </td>
        <td>
        <pre class="source">UINT32 PerfGlobalCtrl : 1;</pre>
        </td>
        <td>2004 and higher </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>
        <pre class="source">UINT32 Reserved1 : 31;</pre>
        </td>
        <td>2004 and higher </td>
      </tr>
    </tbody>
  </table>
  <div class="Footer">
    <p class="Dates">This page was created on 17th
    <a href="../../../../../../../new/22/10.htm">November 2022</a> and was last 
    modified on 10th <a href="../../../../../../../new/22/12.htm">December 2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c22.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5890" -->
  </div>
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>DPA_SetPtr</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="14798" endspan -->
<h1>DPA_SetPtr </h1>
<p>This function sets an item into a DPA at a given position. </p>
<h2>Declaration </h2>
<pre class="source">BOOL
DPA_SetPtr (
    HDPA pdpa,
    int index,
    PVOID p);</pre>
<h3>Parameters </h3>
<p>The <span class="argument">pdpa</span> argument provides a handle to the DPA.
</p>
<p>The <span class="argument">index</span> argument provides the 0-based index to 
associate with the item. </p>
<p>The <span class="argument">p</span> argument provides a pointer to the item, 
or is NULL for an empty item. </p>
<h3>Return Value </h3>
<p>The function returns TRUE if successful, else FALSE. </p>
<h2>Behaviour </h2>
<p>The function fails if the DPA handle is NULL or if the 0-based index is negative. 
If the heap allocation that holds the array is not large enough for the desired 
position, the function fails unless it can get a suitable reallocation. The new 
capacity, counted in pointers, is the given index, plus one, rounded up to the next 
multiple of the allocation unit (which may increase as a side-effect). If the given 
index is not less than the number of pointers currently in the array, then all the 
intermediate pointers are set to NULL, as if to append as many empty items as needed 
on the way to setting the given item at the given position. Finally, the function 
sets the item into the given DPA at the position described by the given index, replacing 
any item that is currently stored at this position. </p>
<h3>Variations </h3>
<!--webbot bot="Include" U-Include="_include/null40.htm" TAG="BODY" startspan -->

<p>Defence against a NULL <span class="argument">pdpa</span> argument begins in 
a build of version 4.0. Specifically, there is no defence in the version 4.0 from 
Windows 95, or in any earlier version, but there is in the version 4.0 for Internet 
Explorer 3.00 for Windows NT. (I have no copy of an Internet Explorer 3.00 for Windows 
95. See the list of <a href="../../../history/index.htm">COMCTL32 versions</a> 
found for this survey.) </p>

<!--webbot bot="Include" i-checksum="61182" endspan -->
<p>For the case where the item is to be set beyond the current end of the pointer 
array, only in version 5.81 and higher does the function set the intermediate pointers 
to NULL. This may have been thought unnecessary in earlier versions because the 
allocation and reallocation of the pointer array is always done with zero-initialisation. 
However, deleting the last pointer in the array typically just reduces the count 
of items without clearing the pointer from memory. If a subsequent setting of a 
pointer at a higher index does not cause a reallocation, then the previously deleted 
pointer would be restored. </p>
<h2>Availability </h2>
<p>The <span class="function">DPA_SetPtr </span>function is exported from COMCTL32.DLL 
as ordinal 335 in version 3.50 and higher. The implementation for version 6.10 
and higher is built into a statically linked library and thence is also exported 
from the Internet Explorer module IERTUTIL.DLL as ordinal 90 in version 7.0 and 
higher. </p>
<!--webbot bot="Include" U-Include="../../_include/settlement.htm" TAG="BODY" startspan -->

<p>This function was documented among the
<a target="_top" href="http://msdn.microsoft.com/library/ms807073.aspx">
Settlement Program Interfaces</a> in December 2002, but with Windows 2000 cited 
as the minimum operating system, despite many years of earlier availability. </p>

<!--webbot bot="Include" i-checksum="21400" endspan -->
<div class="Footer">
  <p class="Dates">This page was created on 9th April 2005 (from material first 
  published in 1997) and was last modified 
  on 15th March 2010. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c9710.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 1997-2010. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="5797" endspan -->
</div>

</body>

</html>
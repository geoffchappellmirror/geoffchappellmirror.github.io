<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>QuerySourceCreateFromKey</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="55064" endspan -->
<h1>QuerySourceCreateFromKey </h1>
<p>This function presents a registry key as a query-source object. </p>
<h2>Declaration </h2>
<pre class="source">HRESULT
QuerySourceCreateFromKey (
    HKEY hKey,
    PCWSTR lpSubKey,
    BOOL bCreate,
    REFIID riid,
    PVOID *ppv);</pre>
<h3>Parameters </h3>
<p>The <span class="argument">hKey</span> argument provides either a handle to an 
open key or to a root key. </p>
<p>The <span class="argument">lpSubKey</span> argument provides the address of a 
null-terminated Unicode string that names a subkey that this function is to represent 
as a query-source object. This argument can be NULL to have the query-source object 
represent the key that is already open as <span class="argument">hKey</span>.
</p>
<p>The <span class="argument">bCreate</span> argument is non-zero to permit the 
function to create the given key if it does not exist already (requires
<span class="argument">lpSubKey</span> be not NULL). </p>
<p>The <span class="argument">riid</span> argument provides the IID of a desired 
interface to the query-source object. </p>
<p>The <span class="argument">ppv</span> argument provides the address of a variable 
that is to receive a pointer to the desired interface. </p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../_include/hresult.htm" TAG="BODY" startspan -->

<p>The function returns zero for success, else an error code. </p>

<!--webbot bot="Include" i-checksum="1551" endspan -->
<h2>Behaviour </h2>
<p>If the function cannot get memory to support a registry-based query-source object, 
it fails (returning <span class="constant">E_OUTOFMEMORY</span>). </p>
<p>If the <span class="argument">bCreate</span> argument is zero, the function opens 
the given subkey, or if <span class="argument">lpSubKey</span> is NULL, opens a 
new handle to the key already represented by <span class="argument">hKey</span>. 
If the <span class="argument">bCreate</span> argument is non-zero, the function 
opens or creates the subkey named by <span class="argument">lpSubKey</span>, which 
must be non-NULL. (Specifically, the function obtains the behaviour of passing
<span class="argument">hKey</span> and <span class="argument">lpSubKey</span> to 
the standard API function <span class="function">RegOpenKeyEx</span> if
<span class="argument">bCreate</span> is zero, else <span class="function">RegCreateKeyEx</span>.) 
Whatever is given as <span class="argument">bCreate</span>, the function seeks
<span class="constant">KEY_READ</span> access only. Failure to open or create the 
registry key is failure for the function. </p>
<p>The function queries the newly created query-source object for the interface 
represented by <span class="argument">riid</span>, to store an interface pointer 
at the address given by <span class="argument">ppv</span>. Failure to obtain the 
desired interface is failure for the function. The supported interfaces (in addition 
to <span class="interface">IUnknown</span>) are <span class="interface">
<a href="../../interfaces/iobjectwithregistrykey.htm">IObjectWithRegistryKey</a></span> 
and <span class="interface"><a href="../../interfaces/iquerysource.htm">IQuerySource</a></span>.
</p>
<h3>Implemented Methods </h3>
<p>The <span class="method">QueryValueString</span> method accepts both
<span class="constant">REG_SZ</span> and <span class="constant">REG_EXPAND_SZ</span> 
data (and expands the latter). If asked for a key’s default value, empty string 
data is regarded as an error. </p>
<p>The <span class="method">QueryValueDword</span> method requires
<span class="constant">REG_DWORD</span> data. </p>
<p>The <span class="method">QueryValueGuid</span> method requires
<span class="constant">REG_SZ</span> or <span class="constant">REG_EXPAND_SZ</span> 
data in the standard string representation of a GUID in curly braces. </p>
<p>The <span class="method">QueryValueDirect</span> method is based on
<span class="function">RegQueryValueEx</span> and does not translate
<span class="constant">REG_EXPAND_SZ</span> data. When it succeeds, the
<span class="member">fFlags</span> member of the <span class="struct">FLAGGED_BYTE_BLOB</span> 
holds the data type (e.g., <span class="constant">REG_SZ</span>). </p>
<p>Each of the querying methods takes a subkey and value as its first two arguments. 
If given a subkey, the method opens the subkey, queries for the value and closes 
the subkey. If querying multiple values in the one subkey, first call the
<span class="method">OpenSource</span> method to obtain a new query-source object 
for the subkey and then query the values in the new object. </p>
<h3>Earlier Versions </h3>
<p>The preceding description is for the SHLWAPI build 6.0.6000.16386 from Windows 
Vista. The following variations are known for earlier builds. </p>
<p>The <span class="interface">IQuerySource</span> interface has a method,
<span class="method">SetValueDirect</span>, that can set a value. To support this,
<span class="constant">KEY_READ</span> access does not suffice, and the function 
instead asks for the <span class="constant">MAXIMUM_ALLOWED</span> access rights.
</p>
<p>The <span class="method">QueryValueDword</span> method accepts data of any type, 
up to 4 bytes. If there are not exactly 4 bytes of data, the function succeeds but 
the data is better regarded as undefined. </p>
<h2>Availability </h2>
<p>The <span class="function">QuerySourceCreateFromKey</span> function is exported 
from SHLWAPI.DLL as ordinal 544 in version 6.00 and higher. </p>
<!--webbot bot="Include" U-Include="../_include/undoc600-2007.htm" TAG="BODY" startspan -->

<p>Though this function dates from 2001, it was still not documented by Microsoft 
as late as the January 2007 edition of the Windows Vista Software Development Kit 
(SDK). </p>

<!--webbot bot="Include" i-checksum="3576" endspan -->
<div class="Footer">
  <p class="Dates">This page was created on 5th July 2009 and was last modified 
  on 21st July 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c09.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009. Geoff Chappell. All rights reserved.
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="50766" endspan -->
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<title>NTURTL.H</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43332" -->
<div class="Main">
  <h1>NTURTL.H </h1>
  <p>The public symbol file NTKRPAMP.PDB for the original release of Windows 10 
  tells that the kernel is built with the NTURTL.H header at </p>
  <blockquote>
    d:\th.public.fre\internal\sdk\inc
  </blockquote>
  <p>and draws from it the following type definitions: </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name">
    </colgroup>
    <tbody>
      <tr>
        <th>Line Number </th>
        <th>Type </th>
      </tr>
      <tr>
        <td>60 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION_DEBUG</span> </td>
      </tr>
      <tr>
        <td>90 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION</span> </td>
      </tr>
      <tr>
        <td>432 </td>
        <td>struct <span class="struct">_RTL_SRWLOCK</span> </td>
      </tr>
      <tr>
        <td>3258 </td>
        <td>struct <span class="struct">_RTL_ACTIVATION_CONTEXT_STACK_FRAME</span>
        </td>
      </tr>
    </tbody>
  </table>
  <p>The header NTURTL.H is not known in any Device Driver Kit (DDK) or Windows 
  Driver Kit (WDK), but most of the (few) types that the kernel is known to pick 
  up from this header are defined in WINNT.H. This, of course, is the standard header 
  for user-mode Windows programming. That types from NTURTL.H as learnt from symbol 
  files for the kernel are also defined in WINNT.H is because NTURTL.H exists for 
  user-mode programming—this being, presumably, the point to the U in the name.
  </p>
  <p>The <span class="struct">_RTL_CRITICAL_SECTION</span> and
  <span class="struct">_RTL_SRWLOCK</span>, for instance, provide user-mode software 
  with synchronisation that hopes to gain by only rarely passing the waiting and 
  waking to a kernel-mode synchronisation object. The kernel, however, knows nothing 
  of these user-mode structures. For instance, it has no code for entering or leaving 
  a critical section as represented by an <span class="struct">_RTL_CRITICAL_SECTION</span>. 
  That <span class="struct">_RTL_CRITICAL_SECTION</span> is in the kernel’s symbol 
  files is only because it is used, as the compiler sees it, in defining structures 
  that are shared with user mode, not because the kernel ever does use it. </p>
  <p>Though the kernel’s source code includes NTURTL.H, which is enough for coverage 
  in this website’s <a href="../../../index.htm">Kernel</a> study, information about 
  this header is better sought elsewhere than public symbols for the kernel. </p>
  <h2>Reconstruction </h2>
  <p>Symbol files other than the kernel’s tell of very many more types that are 
  defined in NTURTL.H. Especially helpful is that Microsoft’s downloadable packages 
  of public symbols have since Windows 8 contained private symbol files for a small 
  selection of user-mode DLLs. Several of these, among them some from surprisingly 
  high-level Windows features, were built with access to NTURTL.H for at least one 
  source file. Private symbols for these then tell of types that the compiler regarded 
  as used by a real-world source file rather than the sort of dummy source file 
  that tends to be used for <a href="../typeinfo.htm">merging type information into 
  public symbol files</a>. </p>
  <p>Very little of this much larger view of Run-Time Library (RTL) functionality 
  is exposed through WINNT.H or any other header that Microsoft has published for 
  programmers in general. Even for user-mode programming, NTURTL.H is evidently 
  intended by Microsoft for Microsoft’s programming only. Hardly anything that is 
  defined in NTURTL.H is documented, nor even has a C-language definition republished 
  in WINNT.H or any other header that Microsoft makes available for the general 
  purpose of writing user-mode software to run on Windows, including to in competition 
  with Microsoft’s user-mode software in a supposedly competitive market. </p>
  <h3>Anti-Trust Settlement Forensics </h3>
  <p>How then does it happen that URLMON.DLL, introduced long ago as a component 
  of Internet Explorer, still with version numbering that follows that of Internet 
  Explorer, is built with access to definitions in this header that Microsoft does 
  not publish for the writers of competing web browsers? </p>
  <p>For the record, here are the many more types that Microsoft’s freely published 
  URLMON.PDB reveals were accessible to the source code for URLMON.DLL from including 
  this same NTURTL.H when building Internet Explorer for the original release of 
  32-bit Windows 10: </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name"><col class="LineNumber">
    </colgroup>
    <tbody>
      <tr>
        <th>Line Number </th>
        <th>Type </th>
        <th>WINNT.H </th>
      </tr>
      <tr>
        <td>60 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION_DEBUG</span> </td>
        <td>18731 </td>
      </tr>
      <tr>
        <td>90 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION</span> </td>
        <td>18761 </td>
      </tr>
      <tr>
        <td>113 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION_DEBUG32</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>123 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION_DEBUG64</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>133 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION32</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>142 </td>
        <td>struct <span class="struct">_RTL_CRITICAL_SECTION64</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>160 </td>
        <td>struct <span class="struct">_RTL_RESOURCE</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>432 </td>
        <td>struct <span class="struct">_RTL_SRWLOCK_INTERNAL</span> (see note after 
        table) </td>
        <td>18778 </td>
      </tr>
      <tr>
        <td>(449) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_RTL_SRWLOCK</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(451) </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_RTL_SRWLOCK</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>559 </td>
        <td>struct <span class="struct">_RTL_CONDITION_VARIABLE_INTERNAL</span> 
        (see note after table) </td>
        <td>18782 </td>
      </tr>
      <tr>
        <td>(566) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_RTL_CONDITION_VARIABLE</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(568) </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_RTL_CONDITION_VARIABLE</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>637 </td>
        <td>struct <span class="struct">_RTL_UNLOAD_EVENT_TRACE</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>647 </td>
        <td>struct <span class="struct">_RTL_UNLOAD_EVENT_TRACE64</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>657 </td>
        <td>struct <span class="struct">_RTL_UNLOAD_EVENT_TRACE32</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>710 </td>
        <td>enum <span class="enum">_RTL_RXACT_OPERATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>718 </td>
        <td>struct <span class="struct">_RTL_RXACT_LOG</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>736 </td>
        <td>struct <span class="struct">_RTL_RXACT_CONTEXT</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>962 </td>
        <td>struct <span class="struct">_RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>969 </td>
        <td>struct <span class="struct">_RTLP_PROCESS_REFLECTION_CONTEXT</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1087 </td>
        <td>struct <span class="struct">_RTL_RELATIVE_NAME</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1093 </td>
        <td>enum <span class="enum">_RTL_PATH_TYPE</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1348 </td>
        <td>struct <span class="struct">RTL_ACE_DATA</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1523 </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/nturtl/rtl_perthread_curdir.htm">_RTL_PERTHREAD_CURDIR</a></span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1605 </td>
        <td>struct <span class="struct">_RTL_HEAP_TAG_INFO</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1699 </td>
        <td>struct <span class="struct">_RTL_HEAP_WALK_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(1705) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_RTL_HEAP_WALK_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1706 </td>
        <td>unnamed struct <span class="member">Block</span> in <br>
        anonymous union in <br>
        struct <span class="struct">_RTL_HEAP_WALK_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1712 </td>
        <td>unnamed struct <span class="member">Segment</span> in <br>
        anonymous union in <br>
        struct <span class="struct">_RTL_HEAP_WALK_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1729 </td>
        <td>struct <span class="struct">_RTL_HEAP_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1733 </td>
        <td>unnamed union <span class="member">u</span> in <br>
        struct <span class="struct">_RTL_HEAP_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1734 </td>
        <td>unnamed struct <span class="member">s1</span> in <br>
        unnamed union <span class="member">u</span> in <br>
        struct <span class="struct">_RTL_HEAP_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1738 </td>
        <td>unnamed struct <span class="member">s2</span> in <br>
        unnamed union <span class="member">u</span> in <br>
        struct <span class="struct">_RTL_HEAP_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1764 </td>
        <td>struct <span class="struct">_RTL_HEAP_TAG</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1773 </td>
        <td>struct <span class="struct">_RTL_HEAP_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1789 </td>
        <td>struct <span class="struct">_RTL_PROCESS_HEAPS</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1800 </td>
        <td>enum <span class="enum">_HEAP_INFORMATION_CLASS</span> </td>
        <td>18796 </td>
      </tr>
      <tr>
        <td>(1941) </td>
        <td>struct <span class="struct">_HEAP_OPTIMIZE_RESOURCES_INFORMATION</span>
        </td>
        <td>18818 </td>
      </tr>
      <tr>
        <td>1859 </td>
        <td>struct <span class="struct">_RTLP_VIRTUALIZED_HEAP</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1865 </td>
        <td>struct <span class="struct">_RTLP_VIRTUALIZED_HEAPS_INFO</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1894 </td>
        <td>struct <span class="struct">_PROCESS_HEAP_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1907 </td>
        <td>struct <span class="struct">_HEAP_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1918 </td>
        <td>struct <span class="struct">_HEAP_REGION_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1931 </td>
        <td>struct <span class="struct">_HEAP_RANGE_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1959 </td>
        <td>struct <span class="struct">_HEAP_BLOCK_EXTRA_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1969 </td>
        <td>struct <span class="struct">_HEAP_BLOCK_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1981 </td>
        <td>struct <span class="struct">_HEAP_BLOCK_SETTABLE_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1989 </td>
        <td>struct <span class="struct">_SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2001 </td>
        <td>struct <span class="struct">_HEAP_PERFORMANCE_COUNTERS_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2030 </td>
        <td>struct <span class="struct">_HEAP_INFORMATION_ITEM</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2035) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_HEAP_INFORMATION_ITEM</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2057 </td>
        <td>struct <span class="struct">_HEAP_EXTENDED_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2065) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_HEAP_EXTENDED_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2126 </td>
        <td>struct <span class="struct">_RTL_DEBUG_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2139) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_RTL_DEBUG_INFORMATION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2155 </td>
        <td>struct <span class="struct">_RTL_DEBUG_INFORMATION32</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2168) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_RTL_DEBUG_INFORMATION32</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2184 </td>
        <td>struct <span class="struct">_RTL_QUERY_DEBUG_INFORMATION_INFO</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2208 </td>
        <td>struct <span class="struct">_RTL_QUERY_DEBUG_VIRTUAL_PROCESS</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2326 </td>
        <td>struct <span class="struct">_RTL_HANDLE_TABLE_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2327) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_RTL_HANDLE_TABLE_ENTRY</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2335 </td>
        <td>struct <span class="struct">_RTL_HANDLE_TABLE</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2561 </td>
        <td>struct <span class="struct">_FLS_DATA</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2715) </td>
        <td>enum <span class="enum">_ACTIVATION_CONTEXT_INFO_CLASS</span> </td>
        <td>18857 </td>
      </tr>
      <tr>
        <td>(2744) </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_QUERY_INDEX</span>
        </td>
        <td>18877 </td>
      </tr>
      <tr>
        <td>(2796) </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_BASIC_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2797) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_ACTIVATION_CONTEXT_BASIC_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2801) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_ACTIVATION_CONTEXT_BASIC_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(2821) </td>
        <td>struct <span class="struct">_ASSEMBLY_FILE_DETAILED_INFORMATION</span>
        </td>
        <td>18890 </td>
      </tr>
      <tr>
        <td>(2840) </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION</span>
        </td>
        <td>18909 </td>
      </tr>
      <tr>
        <td>(2868) </td>
        <td>enum <span class="enum">ACTCTX_REQUESTED_RUN_LEVEL</span> </td>
        <td>19937 </td>
      </tr>
      <tr>
        <td>(2876) </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION</span>
        </td>
        <td>18945 </td>
      </tr>
      <tr>
        <td>(2885) </td>
        <td>enum <span class="enum">ACTCTX_COMPATIBILITY_ELEMENT_TYPE</span>
        </td>
        <td>18954 </td>
      </tr>
      <tr>
        <td>(2891) </td>
        <td>struct <span class="struct">_COMPATIBILITY_CONTEXT_ELEMENT</span>
        </td>
        <td>18960 </td>
      </tr>
      <tr>
        <td>(2905) </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION</span>
        </td>
        <td>18974 </td>
      </tr>
      <tr>
        <td>(2918) </td>
        <td>struct <span class="struct">_SUPPORTED_OS_INFO</span> </td>
        <td>18987 </td>
      </tr>
      <tr>
        <td>(2923) </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_DETAILED_INFORMATION</span>
        </td>
        <td>18992 </td>
      </tr>
      <tr>
        <td>2942 </td>
        <td>struct <span class="struct">_FINDFIRSTACTIVATIONCONTEXTSECTION</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3013 </td>
        <td>struct <span class="struct">_ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3032 </td>
        <td>struct <span class="struct">_ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3040 </td>
        <td>struct <span class="struct">_ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3045 </td>
        <td>struct <span class="struct">_ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3049 </td>
        <td>union <span class="union">_ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3097 </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3112 </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3121 </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_SECTION_KEYED_DATA</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3170 </td>
        <td>struct <span class="struct">_ACTIVATION_CONTEXT_ASSEMBLY_DATA</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3258 </td>
        <td>struct <span class="struct">_RTL_ACTIVATION_CONTEXT_STACK_FRAME</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3268 </td>
        <td>struct <span class="struct">_RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3274 </td>
        <td>struct <span class="struct">_RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3403 </td>
        <td>enum <span class="enum">_WOW64_FUNCTION_CODE64</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(4358) </td>
        <td>struct <span class="struct">_HARDWARE_COUNTER_DATA</span> </td>
        <td>19012 </td>
      </tr>
      <tr>
        <td>(4366) </td>
        <td>struct <span class="struct">_PERFORMANCE_DATA</span> </td>
        <td>19020 </td>
      </tr>
    </tbody>
  </table>
  <p>The names <span class="struct">_RTL_SRWLOCK_INTERNAL</span> and
  <span class="struct">_RTL_CONDITION_VARIALE_INTERNAL</span> look to be created 
  by macros so that URLMON.DLL has both the full definitions of
  <span class="struct">_RTL_SRWLOCK</span> and <span class="struct">_RTL_CONDITION_VARIABLE</span> 
  from NTURTL.H and the reduced definitions from WINNT.H. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 26th
    <a href="../../../../../../new/20/10.htm">October 2020</a> and was last modified 
    on 12th <a href="../../../../../../new/22/12.htm">January 2023</a>. </p>
    <!--webbot bot="Include" U-Include="../../../_include/c2023.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020-2023. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="54423" -->
  </div>
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Visual C++ Compiler Error C3360</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>Visual C++ Compiler Error C3360 </h1>
<h2>Message Text </h2>
<pre class="output">&#39;<span class="placeholder">string</span>&#39;: cannot create <span class="placeholder">name</span></pre>
<h2>Circumstances </h2>
<p>Broadly speaking, this error occurs when an unsuitable UUID is given as the
<span class="argument">async_uuid</span> argument to the <span class="attribute">
async_uuid</span> attribute or as the <span class="argument">uuid</span> argument 
to one of the attributes <span class="attribute">module</span>,
<span class="attribute">provider</span> or <span class="attribute">uuid</span>. 
The product documentation, evidently not even trying for completeness, cites only 
the last (<span class="attribute">uuid</span>). </p>
<p>For the <span class="attribute">async_uuid</span> and <span class="attribute">
uuid</span> attributes, the argument’s only unsuitability is to be invalid as a 
GUID string. The <span class="placeholder">string</span> and
<span class="placeholder">name</span> placeholders reproduce respectively the argument’s 
value and name (the latter happening also to be the name of the attribute). For 
example, </p>
<pre class="source">[
    async_uuid (rubbish)
]
__interface Test
{                               // C3360
};</pre>
<p>and </p>
<pre class="source">[
    uuid (rubbish)
]
class Test;                     // C3360</pre>
<p>produce </p>
<pre class="output">TEST.CPP(5) : error C3360: &#39;rubbish&#39;: cannot create async_uuid</pre>
<p>and </p>
<pre class="output">TEST.CPP(4) : error C3360: &#39;rubbish&#39;: cannot create uuid</pre>
<p>respectively. </p>
<p>For <span class="attribute">module</span>, the <span class="placeholder">name</span> 
placeholder is necessarily “libid”. However, a <span class="argument">uuid</span> 
argument that is invalid as a GUID string does not ordinarily cause error C3360, 
but is instead caught earlier in response to an <span class="attribute">argument_type</span> 
specification in the formal definition of the <span class="attribute">module</span> 
attribute, and is rejected as error C3134. It seems that error C3360 can occur only 
when the argument is left empty. For example, </p>
<pre class="source">[
    module (dll, test, 1.0,,)
];                              // C3360</pre>
<p>produces </p>
<pre class="output">TEST.CPP(3) : error C3360: &#39;null&#39;: cannot create libid</pre>
<p>For the <span class="attribute">provider</span> attribute, what is given as the
<span class="argument">uuid</span> argument, whether valid or not as a GUID, is 
not plausibly the CLSID of an attribute provider. The <span class="argument">uuid</span> 
argument is not reproduced in the error message. Instead, the
<span class="placeholder">string</span> placeholder reproduces the
<span class="attribute">provider</span> attribute’s <span class="argument">name</span> 
argument, and the <span class="placeholder">name</span> placeholder is
<span class="interface">IAttributeHandler</span> else <span class="interface">IAttributeGrammar</span>, 
these being COM interfaces that must both be supported by every attribute provider, 
but which are not found in whatever DLL, if any, is selected by the
<span class="argument">uuid</span>. For example, </p>
<pre class="source">[
    provider (test, rubbish)
];                              // C3360 and C1903</pre>
<p></p>
<p>produces </p>
<pre class="output">TEST.CPP(3) : error C3360: &#39;test&#39;: cannot create IAttributeHandler</pre>
<p>When caused by the <span class="attribute">provider</span> attribute, error C3360 
is unrecoverable and is followed immediately by fatal error
<a href="../fatals/c1903.htm">C1903</a>. </p>
<div class="Footer">
  <p class="Dates">This page was created on 9th July 2006 and was last modified 
  on 10th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0609.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2006-2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62552" endspan -->
</div>
<pre></pre>

</body>

</html>

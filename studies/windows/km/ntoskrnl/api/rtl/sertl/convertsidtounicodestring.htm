<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>RtlConvertSidToUnicodeString</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>RtlConvertSidToUnicodeString </h1>
<p>The <span class="function">RtlConvertSidToUnicodeString</span> function takes 
a SID in binary form as input and creates a string representation as output, optionally 
in new memory. </p>
<h2>Declaration </h2>
<pre class="source">NTSTATUS 
RtlConvertSidToUnicodeString (
    PUNICODE_STRING UnicodeString, 
    PSID Sid, 
    BOOLEAN AllocateDestinationString);</pre>
<h3>Parameters </h3>
<p>The <span class="argument">UnicodeString</span> argument is the address of a 
structure that may on input describe a buffer in which to create the string and 
will on successful output describe the created string. Whether the buffer is provided 
as input or is only produced as output depends on the <span class="argument">AllocateDestinationString</span> 
argument. </p>
<p>The <span class="argument">Sid</span> argument provides the address of the SID 
for which a string form is sought. </p>
<p>The <span class="argument">AllocateDestinationString</span> argument is
<span class="constant">FALSE</span> if memory that is to receive the string is already 
described by <span class="argument">UnicodeString</span>. The
<span class="member">MaximumLength</span> and <span class="member">Buffer</span> 
members are respectively the size in bytes and the address. The function does not 
change them. If <span class="argument">AllocateDestinationString</span> is not
<span class="constant">FALSE</span>, the function obtains memory for the output, 
and sets <span class="member">MaximumLength</span> and <span class="member">Buffer</span> 
to the size and address of this memory. Either way, the <span class="member">Length</span> 
on output is the size of the SID in string form, not including a terminating null.
</p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../../_include/ntstatus.htm" TAG="BODY" startspan -->

<p>The function returns <span class="constant">STATUS_SUCCESS</span> if successful, 
else a negative error code. </p>

<!--webbot bot="Include" endspan i-checksum="8" -->
<h2>Availability </h2>
<p>The <span class="function">RtlConvertSidToUnicodeString</span> function is exported 
by name from both the kernel and NTDLL in all Windows versions, i.e., in 3.10 and 
higher. It provides the low-level support for the documented high-level API function
<span class="function">ConvertSidToStringSid</span>, which ADVAPI32 exports by name 
in both ANSI and Unicode forms in versions 5.0 and higher. </p>
<h2>Documentation Status </h2>
<p>The <span class="function">RtlConvertSidToUnicodeString</span> function is documented 
but has not always been. User-mode documentation came first, apparently in 2002 
for Microsoft’s anti-trust settlement. Perhaps because its functionality was not 
from the start exposed through a higher-level API function, it was used by the Internet 
Explorer programmers. So were many other low-level functions, of course, and not 
all got documented for the settlement. The connection here, however, seems clear: 
to this day the C-language declaration of <span class="function">RtlConvertSidToUnicodeString</span> 
in the Software Development Kit (SDK) is in WINTERNL.H, which came directly from 
the settlement. </p>
<p>Documentation of <span class="function">RtlConvertSidToUnicodeString</span> for 
kernel-mode use is not known before the Windows Driver Kit (WDK) for Windows 7. 
It is then said to be “Available in Windows 2000 and later Windows operating systems.” 
It is declared in NTIFS.H, suggesting strongly that any earlier disclosure will 
have been limited to the Installable File System (IFS) Kit, but it is not in that 
kit’s inclusion with the WDK for Windows Vista. The declaration also requires Windows 
2000 or higher as the target operating system. </p>
<h2>Behaviour </h2>
<p>If whatever’s addressed at <span class="argument">Sid</span> is not valid as 
a SID or if the <span class="member">RevisionNumber</span> is not
<span class="constant">SID_REVISION</span> (1), the function returns
<span class="constant">STATUS_INVALID_SID</span>. </p>
<p>Note that a valid SID has no more than 15 subauthorities. This limits how much 
output the function can generate: in modern versions, the output cannot exceed 184 
characters, including a terminating null. At least to the 1803 release of Windows 
10, the function prepares the string representation in a 256-character buffer on 
the stack. Some kernel-mode programmers would regard this as excessive. A comment 
in NTIFS.H, just in advance of defining <span class="constant">MAX_UNICODE_STACK_BUFFER_LENGTH</span> 
as 256, even suggests that the caller may want that the output also is on the stack—and 
there goes a kilobyte! </p>
<p>This string representation has several pieces to it: </p>
<ol>
  <li>the four characters of “S-1-”; </li>
  <li>a representation of the identifier authority, in either of two forms (see 
  below); </li>
  <li>for each subauthority, a hyphen followed by the subauthority identifier as 
  an unsigned decimal. </li>
</ol>
<p>The authority identifier is formally an array of six bytes, but ending with the 
least significant. If the first two bytes are zero, the least significant four are 
represented as an unsigned decimal. Otherwise, though rare in practice, all six 
bytes are represented in hexadecimal, with a C-language “0x” prefix and no leading 
zeroes. </p>
<p>If <span class="argument">AllocateDestinationString</span> argument is
<span class="constant">FALSE</span>, the function copies its output to the caller-supplied 
memory described by the <span class="argument">UnicodeString</span> argument, i.e.,
<span class="member">MaximumLength</span> bytes at <span class="member">Buffer</span>. 
If the composed string with its terminating null is too large to fit, the function 
returns <span class="constant">STATUS_BUFFER_OVERFLOW</span>. </p>
<p>If instead <span class="argument">AllocateDestinationString</span> is not
<span class="constant">FALSE</span>, the function copies its output to new memory. 
This is done through <span class="function">
<a href="../nls/createunicodestring.htm">RtlCreateUnicodeString</a></span> and 
so the new memory is sought from the paged pool (with tag 'GrtS') or the process 
heap in kernel and user modes respectively. If the functon cannot get this memory, 
it returns <span class="constant">STATUS_NO_MEMORY</span>. </p>
<h3>Variations </h3>
<p>The requirement of 1 for the <span class="member">RevisionNumber</span> dates 
from version 5.0. In earlier versions, the 1 in “S-1-” is the
<span class="member">RevisionNumber</span> as an unsigned decimal. These versions 
prepare the string representation in ANSI but use no less stack, since they have 
two 256-byte buffers, one in which to prepare each component in its turn and another 
to which successive components get appended. This result is then converted to Unicode 
as the function’s output. </p>
<p>A change to <span class="function"><a href="validsid.htm">RtlValidSid</a></span> 
for version 6.1 means that the validity check in kernel mode nowadays includes that
<span class="argument">Sid</span> must not be in user-mode address space. This is 
not even hinted at in the documentation. Any SID from user mode should, of course, 
be captured to kernel-mode address space before trying to form a string representation.
</p>
<h3>IRQL </h3>
<p>The kernel-mode implementation is in paged memory and must not be called at
<span class="constant">DISPATCH_LEVEL</span> or higher. Microsoft’s documentation 
explicitly permits <span class="constant">APC_LEVEL</span>, but beware that it is 
just as explicit that the called function <span class="function">RtlCreateUnicodeString</span> 
is restricted to <span class="constant">PASSIVE_LEVEL</span>. Both cannot be correct!
</p>
<div class="Footer">
  <p class="Dates">This page was created on 30th
  <a href="../../../../../../../new/20/05.htm">May 2020</a> and was last modified 
  on 2nd June 2020. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5634" -->
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>PP_LOOKASIDE_LIST</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>PP_LOOKASIDE_LIST </h1>
  <p>The <span class="struct">PP_LOOKASIDE_LIST</span> structure (formally
  <span class="struct">_PP_LOOKASIDE_LIST</span>) is a container for two
  <a href="../../../api/ex/lookasid/index.htm">lookaside lists</a> treated as one 
  per-processor lookaside list. </p>
  <p>The kernel has long provided <a href="../../../api/ex/lookasid/index.htm">lookaside 
  lists</a> for efficient management of memory for the sort of fixed-size structures 
  that the kernel itself and many kernel-mode drivers find themselves allocating 
  and freeing over and over. Instead of freeing the memory all the way back to where 
  it was first obtained, e.g., non-paged pool, the memory is ideally retained in 
  an immediately accessible list. Some such structures see such heavy use that starting 
  with Windows 2000 the kernel keeps a list for each processor. </p>
  <p>Each <span class="struct">PP_LOOKASIDE_LIST</span> is a pair of pointers, the 
  first to a lookaside list that is specific to that processor, the second to one 
  that is shared among all processors (like any other). For each type of fixed-size 
  structure that is managed through this per-processor lookaisde list, allocations 
  are sought first from the per-processor list, for speed, else from the shared 
  list. Allocations are freed to the per-processor list for easy re-allocation, 
  except that if the list has reached its capacity the allocation is instead freed 
  to the shared list. </p>
  <p>In version 5.0 and higher, the <span class="struct"><a href="../kprcb.htm">
  KPRCB</a></span> for each processor has an array named <span class="member">PPLookasideList</span> 
  of 0x10 <span class="struct">PP_LOOKASIDE_LIST</span> structures. The
  <span class="enum"><a href="../ex/pp_npaged_lookaside_number.htm">PP_NPAGED_LOOKASIDE_NUMBER</a></span> 
  enumeration indexes this array. Each value of the enumeration corresponds to a 
  different fixed-size structure whose memory is managed through the corresponding 
  per-processor lookaside list. </p>
  <p>In versions 5.0 to 5.2, the <span class="struct">KPRCB</span> also has arrays 
  named <span class="member">PPNPagedLookasideList</span> and
  <span class="member">PPPagedLookasideList</span>. These also are arrays of
  <span class="struct">PP_LOOKASIDE_LIST</span> structures, but these per-processor 
  lookaside lists do not each manage memory for a particular fixed-size structure 
  that is frequently allocated and freed. Instead, they are an efficiency for allocating 
  and freeing small pool blocks for general use. The two arrays are for small allocations 
  from non-paged and pages pool, respectively. Successive per-processor lookaside 
  lists in each array are for successively larger pool blocks. Version 5.0 provides 
  for eight lists, with a first list for pool blocks up to and including 0x20 bytes, 
  and a last list for pool blocks up to and including 0x0100 bytes. Versions 5.1 
  and 5.2 cover the same range but with 32 lists. That kernel-mode programmers can 
  reasonably think of small pool allocations as having no significant overhead is 
  mostly due to this management through per-processor lookaside lists. So frequent 
  are small pool allocations that there’s arguably little to gain from ever putting 
  a freed block onto a shared list: it will soon enough be needed for the same processor. 
  Version 6.0 did away with this fallback. Successive sizes of pool block each need 
  only one lookaside list. The <span class="struct">PP_LOOKASIDE_LIST</span> with 
  its pointers to two lists is redundant and the arrays are instead of
  <span class="struct">GENERAL_LOOKASIDE_POOL</span> structures. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">PP_LOOKASIDE_LIST</span> structure is not documented. 
  Microsoft has published a C-language definition in the NTOSP.H from the Windows 
  Driver Kit (WDK) for Windows 10 in the original and Version 1511 editions only.
  </p>
  <h2>Layout </h2>
  <p>The <span class="struct">PP_LOOKASIDE_LIST</span> is 0x08 or 0x10 bytes in 
  32-bit and 64-bit Windows, respectively. Its name and size, and the offsets, names 
  and types of its members are known from public symbol files for the kernel starting 
  with Windows 2000 SP3. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2">0x00 </td>
        <td rowspan="2">0x00 </td>
        <td>
        <pre class="source">NPAGED_LOOKASIDE_LIST *P;</pre>
        </td>
        <td>5.0 only </td>
      </tr>
      <tr>
        <td>
        <pre class="source">GENERAL_LOOKASIDE *P;</pre>
        </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x04 </td>
        <td rowspan="2">0x08 </td>
        <td>
        <pre class="source">NPAGED_LOOKASIDE_LIST *L;</pre>
        </td>
        <td>5.0 only </td>
      </tr>
      <tr>
        <td>
        <pre class="source">GENERAL_LOOKASIDE *L;</pre>
        </td>
        <td>5.1 and higher </td>
      </tr>
    </tbody>
  </table>
  <div class="Footer">
    <p class="Dates">This page was created on 6th September 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c22.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5890" -->
  </div>
</div>

</body>

</html>

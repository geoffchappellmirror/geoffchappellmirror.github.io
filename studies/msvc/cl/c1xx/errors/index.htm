<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>C1XX Errors</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>C1XX Errors </h1>
<p>The table below, which is still in development (for accuracy as well as for completeness), 
lists the errors that the front-end C++ compiler (C1XX) is known to be capable of 
issuing in version 13.00.9466. </p>
<p>Error numbers that the product documentation does not list among the
<span class="citation">C/C++ Build Errors</span> are <span class="undocumented">
highlighted yellow</span>. For some, the code that can raise the error may turn 
out at closer inspection to be unreachable. That some errors are undocumented ought 
be no surprise. The compiler has undocumented features and, assuming that this is 
deliberate, it would be careless of Microsoft to let the documentation reveal an 
undocumented feature by listing the errors that can follow from misuse of that feature. 
For instance, since <span class="keyword">implementation_key</span> is not documented 
as an argument for <span class="directive">#pragma</span> directives or
<span class="keyword">__declspec</span> modifiers, it is no surprise that errors 
C2330, C2366 and C2497 are also not documented. </p>
<p>Text for each error message is reproduced from the corresponding resource string 
in the executable, with placeholders resolved as much as possible in the style of 
the product documentation. It is as well to note that the message text given in 
the product documentation is in some cases different from (and in a handful of cases, 
is nothing like) any text that could possibly be resolved from the corresponding 
resource string. </p>
<p>Error C2338 is shown with four cases. This error, which Microsoft does not document, 
can be triggered externally. The message text in such case is essentially arbitrary, 
being supplied by the external component, and is shown here as its own placeholder. 
For the other cases, the error arises internally. The message text is not from a 
resource string but is hard-coded in the compiler’s data. </p>
<table class="ErrorMessages">
  <colgroup>
    <col class="Number"><col class="Message">
  </colgroup>
  <tr>
    <th>Error </th>
    <th>Message </th>
  </tr>
  <tr>
    <td>C2001 </td>
    <td>newline in constant</td>
  </tr>
  <tr>
    <td>C2002 </td>
    <td>invalid wide-character constant</td>
  </tr>
  <tr>
    <td>C2003 </td>
    <td>expected &#39;defined id&#39;</td>
  </tr>
  <tr>
    <td>C2004 </td>
    <td>expected &#39;defined(id)&#39;</td>
  </tr>
  <tr>
    <td>C2005 </td>
    <td>#line expected a line number, found &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C2006 </td>
    <td>&#39;<span class="placeholder">directive</span>&#39; : expected a filename, found 
    &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C2007 </td>
    <td>#define syntax</td>
  </tr>
  <tr>
    <td>C2008 </td>
    <td>&#39;<span class="placeholder">character</span>&#39; : unexpected in macro definition</td>
  </tr>
  <tr>
    <td>C2009 </td>
    <td>reuse of macro formal &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2010 </td>
    <td>&#39;<span class="placeholder">character</span>&#39; : unexpected in macro formal 
    parameter list</td>
  </tr>
  <tr>
    <td>C2011 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;<span class="placeholder">type</span>&#39; 
    type redefinition</td>
  </tr>
  <tr>
    <td>C2012 </td>
    <td>missing name following &#39;&lt;&#39;</td>
  </tr>
  <tr>
    <td>C2013 </td>
    <td>missing &#39;&gt;&#39;</td>
  </tr>
  <tr>
    <td>C2014 </td>
    <td>preprocessor command must start as first nonwhite space</td>
  </tr>
  <tr>
    <td>C2015 </td>
    <td>too many characters in constant</td>
  </tr>
  <tr>
    <td>C2017 </td>
    <td>illegal escape sequence</td>
  </tr>
  <tr>
    <td>C2018 </td>
    <td>unknown character &#39;0x<span class="placeholder">hexnumber</span>&#39;; unicode 
    identifiers are not supported</td>
  </tr>
  <tr>
    <td>C2019 </td>
    <td>expected preprocessor directive, found &#39;<span class="placeholder">character</span>&#39;</td>
  </tr>
  <tr>
    <td>C2020 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : &#39;<span class="placeholder">class</span>&#39; 
    member redefinition</td>
  </tr>
  <tr>
    <td>C2021 </td>
    <td>expected exponent value, not &#39;<span class="placeholder">character</span>&#39;</td>
  </tr>
  <tr>
    <td>C2022 </td>
    <td>&#39;<span class="placeholder">number</span>&#39; : too big for character</td>
  </tr>
  <tr>
    <td>C2026 </td>
    <td>string too big, trailing characters truncated</td>
  </tr>
  <tr>
    <td>C2027 </td>
    <td>use of undefined type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2028 </td>
    <td>struct/union member must be inside a struct/union</td>
  </tr>
  <tr>
    <td>C2030 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : struct/union member redefinition</td>
  </tr>
  <tr>
    <td>C2033 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : bit field cannot have indirection</td>
  </tr>
  <tr>
    <td>C2034 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : type of bit field too small 
    for number of bits</td>
  </tr>
  <tr>
    <td>C2036 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : unknown size</td>
  </tr>
  <tr>
    <td>C2039 </td>
    <td>&#39;<span class="placeholder">identifier1</span>&#39; : is not a member of &#39;<span class="placeholder">identifier2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2040 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : &#39;<span class="placeholder">identifier1</span>&#39; 
    differs in levels of indirection from &#39;<span class="placeholder">identifier2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2041 </td>
    <td>illegal digit &#39;<span class="placeholder">character</span>&#39; for base &#39;<span class="placeholder">number</span>&#39;</td>
  </tr>
  <tr>
    <td>C2042 </td>
    <td>signed/unsigned keywords mutually exclusive</td>
  </tr>
  <tr>
    <td>C2043 </td>
    <td>illegal break</td>
  </tr>
  <tr>
    <td>C2044 </td>
    <td>illegal continue</td>
  </tr>
  <tr>
    <td>C2045 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : label redefined</td>
  </tr>
  <tr>
    <td>C2046 </td>
    <td>illegal case</td>
  </tr>
  <tr>
    <td>C2047 </td>
    <td>illegal default</td>
  </tr>
  <tr>
    <td>C2048 </td>
    <td>more than one default</td>
  </tr>
  <tr>
    <td>C2050 </td>
    <td>switch expression not integral</td>
  </tr>
  <tr>
    <td>C2051 </td>
    <td>case expression not constant</td>
  </tr>
  <tr>
    <td>C2052 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : illegal type for case expression</td>
  </tr>
  <tr>
    <td>C2053 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : wide string mismatch</td>
  </tr>
  <tr>
    <td><a href="c2054.htm">C2054</a> </td>
    <td>expected &#39;(&#39; to follow &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2055 </td>
    <td>expected formal parameter list, not a type list</td>
  </tr>
  <tr>
    <td>C2056 </td>
    <td>illegal expression</td>
  </tr>
  <tr>
    <td>C2057 </td>
    <td>expected constant expression</td>
  </tr>
  <tr>
    <td>C2058 </td>
    <td>constant expression is not integral</td>
  </tr>
  <tr>
    <td>C2059 </td>
    <td>syntax error : &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C2060 </td>
    <td>syntax error : end of file found</td>
  </tr>
  <tr>
    <td>C2061 </td>
    <td>syntax error : identifier &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2062 </td>
    <td>type &#39;<span class="placeholder">type</span>&#39; unexpected</td>
  </tr>
  <tr>
    <td>C2063 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : not a function</td>
  </tr>
  <tr>
    <td>C2064 </td>
    <td>term does not evaluate to a function</td>
  </tr>
  <tr>
    <td>C2065 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : undeclared identifier</td>
  </tr>
  <tr>
    <td>C2066 </td>
    <td>cast to function type is illegal</td>
  </tr>
  <tr>
    <td>C2067 </td>
    <td>cast to array type is illegal</td>
  </tr>
  <tr>
    <td>C2068 </td>
    <td>illegal cast from &#39;%s&#39; to &#39;%s&#39;</td>
  </tr>
  <tr>
    <td>C2069 </td>
    <td>cast of &#39;void&#39; term to non-&#39;void&#39;</td>
  </tr>
  <tr>
    <td>C2070 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: illegal sizeof operand</td>
  </tr>
  <tr>
    <td>C2071 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal storage class</td>
  </tr>
  <tr>
    <td>C2072 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : initialization of a function</td>
  </tr>
  <tr>
    <td>C2073 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : partially initialized array 
    requires a default constructor</td>
  </tr>
  <tr>
    <td>C2074 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;<span class="placeholder">class-key</span>&#39; 
    initialization needs curly braces</td>
  </tr>
  <tr>
    <td>C2075 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : array initialization needs 
    curly braces</td>
  </tr>
  <tr>
    <td>C2077 </td>
    <td>non-scalar field initializer &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2078 </td>
    <td>too many initializers</td>
  </tr>
  <tr>
    <td>C2079 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; uses undefined
    <span class="placeholder">class-key</span> &#39;<span class="placeholder">name</span>&#39;</td>
  </tr>
  <tr>
    <td>C2081 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : name in formal parameter 
    list illegal</td>
  </tr>
  <tr>
    <td>C2082 </td>
    <td>redefinition of formal parameter &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2083 </td>
    <td><span class="placeholder">class-key</span> comparison illegal</td>
  </tr>
  <tr>
    <td>C2084 </td>
    <td>function &#39;<span class="placeholder">function</span>&#39; already has a body</td>
  </tr>
  <tr>
    <td>C2085 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : not in formal parameter 
    list</td>
  </tr>
  <tr>
    <td>C2086 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition</td>
  </tr>
  <tr>
    <td>C2087 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : missing subscript</td>
  </tr>
  <tr>
    <td>C2088 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : illegal for
    <span class="placeholder">class-key</span></td>
  </tr>
  <tr>
    <td>C2089 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;<span class="placeholder">class-key</span>&#39; 
    too large</td>
  </tr>
  <tr>
    <td>C2090 </td>
    <td>function returns array</td>
  </tr>
  <tr>
    <td>C2091 </td>
    <td>function returns function</td>
  </tr>
  <tr>
    <td>C2092 </td>
    <td>&#39;<span class="placeholder">array name</span>&#39; array element type cannot 
    be function</td>
  </tr>
  <tr>
    <td>C2093 </td>
    <td>&#39;<span class="placeholder">variable1</span>&#39; : cannot be initialized using 
    address of automatic variable &#39;<span class="placeholder">variable2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2094 </td>
    <td>label &#39;<span class="placeholder">identifier</span>&#39; was undefined</td>
  </tr>
  <tr>
    <td>C2095 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : actual parameter has type 
    &#39;void&#39; : parameter <span class="placeholder">number</span></td>
  </tr>
  <tr>
    <td>C2097 </td>
    <td>illegal initialization</td>
  </tr>
  <tr>
    <td>C2100 </td>
    <td>illegal indirection</td>
  </tr>
  <tr>
    <td>C2101 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; on constant</td>
  </tr>
  <tr>
    <td>C2102 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; requires l-value</td>
  </tr>
  <tr>
    <td>C2103 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; on register variable</td>
  </tr>
  <tr>
    <td>C2104 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; on bit field ignored</td>
  </tr>
  <tr>
    <td>C2105 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; needs l-value</td>
  </tr>
  <tr>
    <td>C2106 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : left operand must be l-value</td>
  </tr>
  <tr>
    <td>C2107 </td>
    <td>illegal index, indirection not allowed</td>
  </tr>
  <tr>
    <td>C2108 </td>
    <td>subscript is not of integral type</td>
  </tr>
  <tr>
    <td>C2109 </td>
    <td>subscript requires array or pointer type</td>
  </tr>
  <tr>
    <td>C2110 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : cannot add two pointers</td>
  </tr>
  <tr>
    <td>C2111 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : pointer addition requires 
    integral operand</td>
  </tr>
  <tr>
    <td>C2112 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : pointer subtraction requires 
    integral or pointer operand</td>
  </tr>
  <tr>
    <td>C2113 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : pointer can only be subtracted 
    from another pointer</td>
  </tr>
  <tr>
    <td>C2114 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : pointer on left; needs integral 
    value on right</td>
  </tr>
  <tr>
    <td>C2115 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : incompatible types</td>
  </tr>
  <tr>
    <td>C2116 </td>
    <td>function parameter lists differed</td>
  </tr>
  <tr>
    <td>C2117 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : array bounds overflow</td>
  </tr>
  <tr>
    <td>C2118 </td>
    <td>negative subscript or subscript is too large</td>
  </tr>
  <tr>
    <td>C2120 </td>
    <td>&#39;void&#39; illegal with all types</td>
  </tr>
  <tr>
    <td>C2121 </td>
    <td>&#39;#&#39; : invalid character : possibly the result of a macro expansion</td>
  </tr>
  <tr>
    <td>C2122 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : prototype parameter in name 
    list illegal</td>
  </tr>
  <tr>
    <td>C2124 </td>
    <td>divide or mod by zero</td>
  </tr>
  <tr>
    <td>C2125 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : allocation exceeds 64K</td>
  </tr>
  <tr>
    <td>C2126 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : incorrect operand</td>
  </tr>
  <tr>
    <td>C2127 </td>
    <td>parameter allocation exceeds 32K</td>
  </tr>
  <tr>
    <td>C2128 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : alloc_text/same_seg applicable 
    only to functions with C linkage</td>
  </tr>
  <tr>
    <td>C2129 </td>
    <td>static function &#39;<span class="placeholder">function</span>&#39; declared but 
    not defined</td>
  </tr>
  <tr>
    <td>C2130 </td>
    <td>#line expected a string containing the filename, found &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C2132 </td>
    <td>syntax error : unexpected identifier</td>
  </tr>
  <tr>
    <td>C2133 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : unknown size</td>
  </tr>
  <tr>
    <td>C2134 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : struct/union too large</td>
  </tr>
  <tr>
    <td>C2135 </td>
    <td>&#39;<span class="placeholder">bit operator</span>&#39; : illegal bit field operation</td>
  </tr>
  <tr>
    <td>C2136 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : prototype must have parameter 
    types</td>
  </tr>
  <tr>
    <td><a href="c2137.htm">C2137</a> </td>
    <td>empty character constant</td>
  </tr>
  <tr>
    <td>C2143 </td>
    <td>syntax error : missing &#39;<span class="placeholder">token1</span>&#39; before 
    &#39;<span class="placeholder">token2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2144 </td>
    <td>syntax error : &#39;<span class="placeholder">type</span>&#39; should be preceded 
    by &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C2145 </td>
    <td>syntax error : missing &#39;<span class="placeholder">token</span>&#39; before identifier</td>
  </tr>
  <tr>
    <td>C2146 </td>
    <td>syntax error : missing &#39;<span class="placeholder">token</span>&#39; before identifier 
    &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2147 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : const automatic array must 
    be fully initialized</td>
  </tr>
  <tr>
    <td>C2148 </td>
    <td>array too large</td>
  </tr>
  <tr>
    <td>C2149 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : named bit field cannot have 
    zero width</td>
  </tr>
  <tr>
    <td>C2150 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : bit field must have type 
    &#39;int&#39;, &#39;signed int&#39;, or &#39;unsigned int&#39;</td>
  </tr>
  <tr>
    <td><a href="c2151.htm">C2151</a> </td>
    <td>more than one language attribute</td>
  </tr>
  <tr>
    <td>C2152 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : pointers to functions with 
    different attributes</td>
  </tr>
  <tr>
    <td>C2153 </td>
    <td>hex constants must have at least one hex digit</td>
  </tr>
  <tr>
    <td>C2154 </td>
    <td>&#39;<span class="placeholder">segment</span>&#39; : does not refer to a segment 
    name</td>
  </tr>
  <tr>
    <td>C2155 </td>
    <td>&#39;?&#39; : invalid left operand, expected arithmetic or pointer type</td>
  </tr>
  <tr>
    <td>C2156 </td>
    <td>pragma must be outside function</td>
  </tr>
  <tr>
    <td>C2157 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : must be declared before use 
    in pragma list</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2158</span> </td>
    <td>&#39;%$pS&#39; : is a function</td>
  </tr>
  <tr>
    <td>C2159 </td>
    <td>more than one storage class specified</td>
  </tr>
  <tr>
    <td>C2160 </td>
    <td>&#39;##&#39; cannot occur at the beginning of a macro definition</td>
  </tr>
  <tr>
    <td>C2161 </td>
    <td>&#39;##&#39; cannot occur at the end of a macro definition</td>
  </tr>
  <tr>
    <td>C2162 </td>
    <td>expected macro formal parameter</td>
  </tr>
  <tr>
    <td>C2163 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : not available as an intrinsic 
    function</td>
  </tr>
  <tr>
    <td>C2164 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : intrinsic function not declared</td>
  </tr>
  <tr>
    <td>C2165 </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; : cannot modify pointers to data</td>
  </tr>
  <tr>
    <td>C2166 </td>
    <td>l-value specifies const object</td>
  </tr>
  <tr>
    <td>C2167 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : too many actual parameters 
    for intrinsic function</td>
  </tr>
  <tr>
    <td>C2168 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : too few actual parameters 
    for intrinsic function</td>
  </tr>
  <tr>
    <td>C2169 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : intrinsic function, cannot 
    be defined</td>
  </tr>
  <tr>
    <td>C2170 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : not declared as a function, 
    cannot be intrinsic</td>
  </tr>
  <tr>
    <td>C2171 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : illegal on operands of type 
    &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2172 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : actual parameter is not a 
    pointer : parameter <span class="placeholder">number</span></td>
  </tr>
  <tr>
    <td>C2173 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : actual parameter is not a 
    pointer : parameter <span class="placeholder">number1</span>, parameter list
    <span class="placeholder">number2</span></td>
  </tr>
  <tr>
    <td>C2174 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : actual parameter has type 
    &#39;void&#39; : parameter <span class="placeholder">number1</span>, parameter list
    <span class="placeholder">number2</span></td>
  </tr>
  <tr>
    <td>C2175 </td>
    <td>&#39;<span class="placeholder">locale</span>&#39; : invalid locale</td>
  </tr>
  <tr>
    <td>C2177 </td>
    <td>constant too big</td>
  </tr>
  <tr>
    <td>C2178 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : storage class for same_seg 
    variables must be extern</td>
  </tr>
  <tr>
    <td>C2179 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : was used in same_seg, but 
    storage class is no longer extern</td>
  </tr>
  <tr>
    <td>C2180 </td>
    <td>controlling expression has type &#39;void&#39;</td>
  </tr>
  <tr>
    <td>C2181 </td>
    <td>illegal else without matching if</td>
  </tr>
  <tr>
    <td>C2182 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal use of type &#39;void&#39;</td>
  </tr>
  <tr>
    <td>C2184 </td>
    <td>illegal return of a &#39;void&#39; value</td>
  </tr>
  <tr>
    <td>C2185 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal based allocation</td>
  </tr>
  <tr>
    <td>C2186 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : illegal operand of type &#39;void&#39;</td>
  </tr>
  <tr>
    <td>C2188 </td>
    <td>&#39;<span class="placeholder">number</span>&#39; : too big for wide character</td>
  </tr>
  <tr>
    <td>C2189 </td>
    <td>#error : <span class="placeholder">string</span></td>
  </tr>
  <tr>
    <td>C2190 </td>
    <td>first parameter list longer than second</td>
  </tr>
  <tr>
    <td>C2191 </td>
    <td>second parameter list longer than first</td>
  </tr>
  <tr>
    <td>C2192 </td>
    <td>parameter &#39;<span class="placeholder">number</span>&#39; declaration different</td>
  </tr>
  <tr>
    <td>C2193 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : already in a segment</td>
  </tr>
  <tr>
    <td>C2194 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : is a text segment</td>
  </tr>
  <tr>
    <td>C2195 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : is a data segment</td>
  </tr>
  <tr>
    <td>C2196 </td>
    <td>case value &#39;<span class="placeholder">value</span>&#39; already used</td>
  </tr>
  <tr>
    <td>C2197 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : too many actual parameters</td>
  </tr>
  <tr>
    <td>C2198 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : too few actual parameters</td>
  </tr>
  <tr>
    <td>C2199 </td>
    <td>syntax error : found &#39;<span class="placeholder">identifier</span> (&#39; at 
    global scope (was a declaration intended?)</td>
  </tr>
  <tr>
    <td>C2200 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : function has already been 
    defined</td>
  </tr>
  <tr>
    <td>C2201 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : must have external linkage 
    in order to be exported/imported</td>
  </tr>
  <tr>
    <td>C2203 </td>
    <td>delete operator cannot specify bounds for an array</td>
  </tr>
  <tr>
    <td>C2204 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : type definition found within parentheses</td>
  </tr>
  <tr>
    <td>C2205 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot initialize extern 
    variables with block scope</td>
  </tr>
  <tr>
    <td>C2206 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : typedef cannot be used for 
    function definition</td>
  </tr>
  <tr>
    <td>C2207 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; in struct/union &#39;<span class="placeholder">tag</span>&#39; 
    has a zero-sized array</td>
  </tr>
  <tr>
    <td>C2208 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : no members defined using this 
    type</td>
  </tr>
  <tr>
    <td>C2212 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : __based not available for 
    pointers to functions</td>
  </tr>
  <tr>
    <td>C2213 </td>
    <td>&#39;<span class="placeholder">modifier</span>&#39; : illegal argument to __based</td>
  </tr>
  <tr>
    <td>C2214 </td>
    <td>pointers based on &#39;void&#39; require the use of :&gt;</td>
  </tr>
  <tr>
    <td>C2217 </td>
    <td>&#39;<span class="placeholder">attribute1</span>&#39; must be used with &#39;<span class="placeholder">attribute2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2218 </td>
    <td>type in __based construct must be &#39;void&#39;</td>
  </tr>
  <tr>
    <td>C2219 </td>
    <td>syntax error : type qualifier must be after &#39;*&#39;</td>
  </tr>
  <tr>
    <td>C2220 </td>
    <td>warning treated as error - no object file generated</td>
  </tr>
  <tr>
    <td>C2221 </td>
    <td>&#39;.&#39; : left operand points to struct/union, use &#39;-&gt;&#39;</td>
  </tr>
  <tr>
    <td>C2222 </td>
    <td>&#39;-&gt;&#39; : left operand has struct/union type, use &#39;.&#39;</td>
  </tr>
  <tr>
    <td>C2223 </td>
    <td>left of &#39;-&gt;<span class="placeholder">identifier</span>&#39; must point to struct/union</td>
  </tr>
  <tr>
    <td>C2224 </td>
    <td>left of &#39;.<span class="placeholder">identifier</span>&#39; must have struct/union 
    type</td>
  </tr>
  <tr>
    <td>C2226 </td>
    <td>syntax error : unexpected type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2227 </td>
    <td>left of &#39;-&gt;<span class="placeholder">identifier</span>&#39; must point to class/struct/union</td>
  </tr>
  <tr>
    <td>C2228 </td>
    <td>left of &#39;.<span class="placeholder">identifier</span>&#39; must have class/struct/union 
    type</td>
  </tr>
  <tr>
    <td>C2229 </td>
    <td><span class="placeholder">type</span> &#39;<span class="placeholder">identifier</span>&#39; 
    has an illegal zero-sized array</td>
  </tr>
  <tr>
    <td>C2230 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : a member function of a managed 
    class cannot return a non-managed class or struct &#39;<span class="placeholder">user-defined 
    type</span>&#39; unless it is an aggregate</td>
  </tr>
  <tr>
    <td>C2231 </td>
    <td>&#39;.%$*&#39; : left operand points to &#39;<span class="placeholder">class-key</span>&#39;, 
    use &#39;-&gt;&#39;</td>
  </tr>
  <tr>
    <td>C2232 </td>
    <td>&#39;-&gt;%$*&#39; : left operand has &#39;<span class="placeholder">class-key</span>&#39; 
    type, use &#39;.&#39;</td>
  </tr>
  <tr>
    <td>C2233 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : arrays of objects containing 
    zero-size arrays are illegal</td>
  </tr>
  <tr>
    <td>C2234 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : arrays of references are illegal</td>
  </tr>
  <tr>
    <td>C2236 </td>
    <td>unexpected &#39;<span class="placeholder">class-key</span>&#39; &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2238 </td>
    <td>unexpected token(s) preceding &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C2239 </td>
    <td>unexpected token &#39;<span class="placeholder">token</span>&#39; following declaration 
    of &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2241 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : member access is restricted</td>
  </tr>
  <tr>
    <td>C2242 </td>
    <td>typedef name cannot follow class/struct/union</td>
  </tr>
  <tr>
    <td>C2243 </td>
    <td>&#39;<span class="placeholder">conversion type</span>&#39; : conversion from &#39;<span class="placeholder">type1</span>&#39; 
    to &#39;<span class="placeholder">type2</span>&#39; exists, but is inaccessible</td>
  </tr>
  <tr>
    <td>C2244 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : unable to match function 
    definition to an existing declaration</td>
  </tr>
  <tr>
    <td>C2246 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal static data member 
    in locally defined class</td>
  </tr>
  <tr>
    <td>C2247 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; not accessible because &#39;<span class="placeholder">class</span>&#39; 
    uses &#39;<span class="placeholder">specifier</span>&#39; to inherit from &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2248 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : cannot access
    <span class="placeholder">access</span> <span class="placeholder">member</span> 
    declared in class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2249 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : no accessible path to
    <span class="placeholder">access</span> <span class="placeholder">member</span> 
    declared in virtual base &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2250 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : ambiguous inheritance of 
    &#39;<span class="placeholder">class</span>::<span class="placeholder">member</span>&#39;</td>
  </tr>
  <tr>
    <td>C2252 </td>
    <td>Unable to explicitly instantiate template; try again at nearest namespace 
    scope</td>
  </tr>
  <tr>
    <td>C2253 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : pure specifier only applies 
    to virtual function - specifier ignored</td>
  </tr>
  <tr>
    <td>C2254 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : pure specifier not allowed 
    on friend functions</td>
  </tr>
  <tr>
    <td>C2255 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : a friend function can only 
    be declared in a class</td>
  </tr>
  <tr>
    <td>C2256 </td>
    <td>illegal use of friend specifier on &#39;<span class="placeholder">function</span>&#39;</td>
  </tr>
  <tr>
    <td>C2258 </td>
    <td>illegal pure syntax, must be &#39;= 0&#39;</td>
  </tr>
  <tr>
    <td>C2259 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : cannot instantiate abstract class</td>
  </tr>
  <tr>
    <td>C2262 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot be destroyed</td>
  </tr>
  <tr>
    <td>C2264 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : error in function definition 
    or declaration; function not called</td>
  </tr>
  <tr>
    <td>C2265 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : reference to a zero-sized 
    array is illegal</td>
  </tr>
  <tr>
    <td>C2266 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : reference to a non-constant 
    bounded array is illegal</td>
  </tr>
  <tr>
    <td>C2267 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : static functions with block 
    scope are illegal</td>
  </tr>
  <tr>
    <td>C2270 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : modifiers not allowed on nonmember 
    functions</td>
  </tr>
  <tr>
    <td>C2271 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : new/delete cannot have formal 
    list modifiers</td>
  </tr>
  <tr>
    <td>C2272 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : modifiers not allowed on static 
    member functions</td>
  </tr>
  <tr>
    <td>C2273 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : illegal as right side of &#39;-&gt;&#39; 
    operator</td>
  </tr>
  <tr>
    <td>C2274 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : illegal as right side of &#39;.&#39; operator</td>
  </tr>
  <tr>
    <td>C2275 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal use of this type 
    as an expression</td>
  </tr>
  <tr>
    <td>C2276 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : illegal operation on bound 
    member function expression</td>
  </tr>
  <tr>
    <td>C2277 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot take address of this 
    member function</td>
  </tr>
  <tr>
    <td>C2280 </td>
    <td>missing &#39;{&#39; before identifier &#39;<span class="placeholder">identifier</span>&#39;?</td>
  </tr>
  <tr>
    <td>C2281 </td>
    <td>&#39;<span class="placeholder">identifier1</span>&#39; : is not a function, but 
    contains &lt;function returning&gt;; &#39;<span class="placeholder">identifier2</span>&#39; 
    is unexpected</td>
  </tr>
  <tr>
    <td>C2282 </td>
    <td>&#39;<span class="placeholder">identifier1</span>&#39; is followed by &#39;<span class="placeholder">identifier2</span>&#39; 
    (missing &#39;,&#39;?)</td>
  </tr>
  <tr>
    <td>C2283 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : pure specifier not allowed 
    on unnamed <span class="placeholder">class-key</span></td>
  </tr>
  <tr>
    <td>C2285 </td>
    <td>pointers to members representation has already been determined - pragma 
    ignored</td>
  </tr>
  <tr>
    <td>C2286 </td>
    <td>pointers to members of &#39;<span class="placeholder">identifier</span>&#39; representation 
    is already set to <span class="placeholder">inheritance</span> - declaration 
    ignored</td>
  </tr>
  <tr>
    <td>C2287 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: inheritance representation: &#39;<span class="placeholder">representation1</span>&#39; 
    is less general than the required &#39;<span class="placeholder">representation2</span>&#39;</td>
  </tr>
  <tr>
    <td><a href="c2289.htm">C2289</a> </td>
    <td>same type qualifier used more than once</td>
  </tr>
  <tr>
    <td>C2290 </td>
    <td>C++ &#39;<span class="placeholder">token</span>&#39; syntax ignored. Use __asm.</td>
  </tr>
  <tr>
    <td>C2292 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39;: best case inheritance representation: 
    &#39;<span class="placeholder">representation1</span>&#39; declared but &#39;<span class="placeholder">representation2</span>&#39; 
    required</td>
  </tr>
  <tr>
    <td>C2293 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39;: illegal to have a member 
    variable as a __based specifier</td>
  </tr>
  <tr>
    <td>C2294 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39;: illegal argument to intrinsic 
    function, parameter <span class="placeholder">number</span></td>
  </tr>
  <tr>
    <td>C2295 </td>
    <td>escaped &#39;<span class="placeholder">character</span>&#39; : is illegal in macro 
    definition</td>
  </tr>
  <tr>
    <td>C2296 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : illegal, left operand has 
    type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2297 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : illegal, right operand has 
    type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2298 </td>
    <td>&#39;<span class="placeholder">operation</span>&#39; : illegal operation on pointer 
    to member function expression</td>
  </tr>
  <tr>
    <td>C2300 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : class does not have a destructor 
    called &#39;~<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2301 </td>
    <td>left of &#39;-&gt;~<span class="placeholder">identifier</span>&#39; must point to class/struct/union</td>
  </tr>
  <tr>
    <td>C2302 </td>
    <td>left of &#39;.~<span class="placeholder">identifier</span>&#39; must have class/struct/union 
    type</td>
  </tr>
  <tr>
    <td>C2304 </td>
    <td>&#39;<span class="placeholder">type</span> <span class="placeholder">symbol</span>&#39; 
    : unexpected tokens following type</td>
  </tr>
  <tr>
    <td>C2305 </td>
    <td>&#39;<span class="placeholder">pdbfile</span>&#39; does not contain debugging information 
    for this module</td>
  </tr>
  <tr>
    <td>C2306 </td>
    <td>&#39;<span class="placeholder">pdbfile</span>&#39; does not contain the most recent 
    debugging information for this module</td>
  </tr>
  <tr>
    <td><a href="c2307.htm">C2307</a> </td>
    <td>pragma <span class="placeholder">pragma</span> must be moved outside of 
    the function if incremental compilation is enabled</td>
  </tr>
  <tr>
    <td>C2308 </td>
    <td>concatenating mismatched wide strings</td>
  </tr>
  <tr>
    <td>C2309 </td>
    <td>catch handler expected a parenthesized exception declaration</td>
  </tr>
  <tr>
    <td>C2310 </td>
    <td>catch handlers must specify one type</td>
  </tr>
  <tr>
    <td>C2311 </td>
    <td>&#39;<span class="placeholder">exception</span>&#39; : is caught by &#39;...&#39; on line
    <span class="placeholder">number</span></td>
  </tr>
  <tr>
    <td>C2312 </td>
    <td>&#39;<span class="placeholder">exception1</span>&#39; : is caught by &#39;<span class="placeholder">exception2</span>&#39; 
    on line <span class="placeholder">number</span></td>
  </tr>
  <tr>
    <td>C2313 </td>
    <td>&#39;<span class="placeholder">type1</span>&#39; : is caught by reference (&#39;<span class="placeholder">type2</span>&#39;) 
    on line <span class="placeholder">number</span></td>
  </tr>
  <tr>
    <td>C2315 </td>
    <td>&#39;<span class="placeholder">type1</span>&#39; : reference is caught by &#39;<span class="placeholder">type2</span>&#39; 
    on line <span class="placeholder">number</span></td>
  </tr>
  <tr>
    <td>C2317 </td>
    <td>&#39;try&#39; block starting on line &#39;<span class="placeholder">number</span>&#39; has 
    no catch handlers</td>
  </tr>
  <tr>
    <td>C2318 </td>
    <td>no try block associated with this catch handler</td>
  </tr>
  <tr>
    <td>C2319 </td>
    <td>&#39;<span class="placeholder">try/catch</span>&#39; must be followed by a compound 
    statement. Missing &#39;{&#39;</td>
  </tr>
  <tr>
    <td>C2320 </td>
    <td>expected &#39;:&#39; to follow access specifier &#39;<span class="placeholder">specifier</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2321</span> </td>
    <td>syntax error : unexpected &#39;%$S&#39;</td>
  </tr>
  <tr>
    <td>C2322 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : address of dllimport &#39;<span class="placeholder">dllimport</span>&#39; 
    is not static</td>
  </tr>
  <tr>
    <td>C2323 </td>
    <td>compiler limit: out of local keys compiling function &#39;<span class="placeholder">function</span>&#39;</td>
  </tr>
  <tr>
    <td>C2324 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : unexpected to the right 
    of &#39;<span class="placeholder">name</span>&#39;</td>
  </tr>
  <tr>
    <td>C2325 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : unexpected type to the right of 
    &#39;<span class="placeholder">name</span>&#39;: expected &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2326 </td>
    <td>&#39;<span class="placeholder">declarator</span>&#39; : function cannot access &#39;<span class="placeholder">name</span>&#39;</td>
  </tr>
  <tr>
    <td>C2327 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : member from enclosing class 
    is not a type name, static, or enumerator</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2328</span> </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; : keyword is not yet supported</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2330</span> </td>
    <td>&#39;implementation_key( )&#39; is only valid in a region bounded by #pragma start_map_region/stop_map_region</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2331</span> </td>
    <td>access to &#39;<span class="placeholder">symbol</span>&#39; now defined to be &#39;<span class="placeholder">access1</span>&#39;, 
    previously it was defined to be &#39;<span class="placeholder">access2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2332 </td>
    <td>&#39;<span class="placeholder">typedef</span>&#39; : missing tag name</td>
  </tr>
  <tr>
    <td>C2333 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : error in function declaration; 
    skipping function body</td>
  </tr>
  <tr>
    <td>C2334 </td>
    <td>unexpected token(s) preceding &#39;<span class="placeholder">token</span>&#39;; 
    skipping apparent function body</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2335</span> </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : a type cannot be introduced 
    in a function parameter list</td>
  </tr>
  <tr>
    <td>C2337 </td>
    <td>&#39;<span class="placeholder">attribute name</span>&#39; : attribute not found; 
    it is neither a built-in nor a custom attribute that is accessible in the current 
    namespace</td>
  </tr>
  <tr>
    <td rowspan="4"><span class="undocumented"><a href="c2338.htm">C2338</a></span>
    </td>
    <td><span class="placeholder">text</span></td>
  </tr>
  <tr>
    <td>deprecated use of dynamic_cast: use __box instead to box a value type</td>
  </tr>
  <tr>
    <td>&#39;<span class="placeholder">group</span>&#39;: incorrect format for attribute 
    &#39;group&#39;</td>
  </tr>
  <tr>
    <td>&#39;<span class="placeholder">usage</span>&#39;: incorrect format for attribute 
    &#39;usage&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2339</span> </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : illegal type in embedded-IDL</td>
  </tr>
  <tr>
    <td>C2340 </td>
    <td>&#39;<span class="placeholder">argument</span>&#39; : illegal allocate specifier</td>
  </tr>
  <tr>
    <td>C2341 </td>
    <td>&#39;<span class="placeholder">section name</span>&#39; : segment must be defined 
    using #pragma data_seg, code_seg or section prior to use</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2343</span> </td>
    <td>&#39;<span class="placeholder">section name</span>&#39; : conflicting section attributes</td>
  </tr>
  <tr>
    <td>C2344 </td>
    <td>align(<span class="placeholder">#</span>) : alignment must be power of two</td>
  </tr>
  <tr>
    <td>C2345 </td>
    <td>align(<span class="placeholder">value</span>) : illegal alignment value</td>
  </tr>
  <tr>
    <td>C2347 </td>
    <td>&#39;__w64&#39; : can not be used with type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2348 </td>
    <td>&#39;<span class="placeholder">type name</span>&#39; : is not a C-style aggregate, 
    cannot be exported in embedded-IDL</td>
  </tr>
  <tr>
    <td>C2350 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; is not a static member</td>
  </tr>
  <tr>
    <td>C2351 </td>
    <td>obsolete C++ constructor initialization syntax</td>
  </tr>
  <tr>
    <td>C2352 </td>
    <td>&#39;<span class="placeholder">class::function</span>&#39; : illegal call of non-static 
    member function</td>
  </tr>
  <tr>
    <td>C2354 </td>
    <td>&#39;<span class="placeholder">reference</span>&#39; : initialization of reference 
    member requires a temporary variable</td>
  </tr>
  <tr>
    <td>C2355 </td>
    <td>&#39;this&#39; : can only be referenced inside non-static member functions</td>
  </tr>
  <tr>
    <td>C2356 </td>
    <td>initialization segment must not change during translation unit</td>
  </tr>
  <tr>
    <td>C2357 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : must be a function of type 
    &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2359</span> </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : member of non-class type requires 
    single initializer expression</td>
  </tr>
  <tr>
    <td>C2360 </td>
    <td>initialization of &#39;<span class="placeholder">identifier</span>&#39; is skipped 
    by &#39;case&#39; label</td>
  </tr>
  <tr>
    <td>C2361 </td>
    <td>initialization of &#39;<span class="placeholder">identifier</span>&#39; is skipped 
    by &#39;default&#39; label</td>
  </tr>
  <tr>
    <td>C2362 </td>
    <td>initialization of &#39;<span class="placeholder">identifier</span>&#39; is skipped 
    by &#39;goto <span class="placeholder">label</span>&#39;</td>
  </tr>
  <tr>
    <td>C2363 </td>
    <td>cannot evaluate argument &#39;<span class="placeholder">arg</span>&#39; of custom 
    attribute &#39;<span class="placeholder">custom attribute</span>&#39;</td>
  </tr>
  <tr>
    <td>C2364 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: illegal type for custom attribute</td>
  </tr>
  <tr>
    <td>C2365 </td>
    <td>&#39;<span class="placeholder">class member</span>&#39; : redefinition; previous 
    definition was a &#39;<span class="placeholder">class member</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2366</span> </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; different 
    implementation_key specifiers</td>
  </tr>
  <tr>
    <td>C2368 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; different 
    allocation specifiers</td>
  </tr>
  <tr>
    <td>C2369 </td>
    <td>&#39;<span class="placeholder">array</span>&#39; : redefinition; different subscripts</td>
  </tr>
  <tr>
    <td>C2370 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; different 
    storage class</td>
  </tr>
  <tr>
    <td>C2371 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; different 
    basic types</td>
  </tr>
  <tr>
    <td>C2372 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; different 
    types of indirection</td>
  </tr>
  <tr>
    <td>C2373 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; different 
    type modifiers</td>
  </tr>
  <tr>
    <td>C2374 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; multiple initialization</td>
  </tr>
  <tr>
    <td>C2375 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : redefinition; different linkage</td>
  </tr>
  <tr>
    <td>C2376 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : redefinition; different based 
    allocation</td>
  </tr>
  <tr>
    <td>C2377 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; typedef cannot 
    be overloaded with any other symbol</td>
  </tr>
  <tr>
    <td>C2378 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; symbol cannot 
    be overloaded with a typedef</td>
  </tr>
  <tr>
    <td>C2379 </td>
    <td>formal parameter %d has different type when promoted</td>
  </tr>
  <tr>
    <td>C2380 </td>
    <td>type(s) preceding &#39;<span class="placeholder">identifier</span>&#39; (constructor 
    with return type, or illegal redefinition of current class-name?)</td>
  </tr>
  <tr>
    <td>C2381 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : redefinition; __declspec(noreturn) 
    differs</td>
  </tr>
  <tr>
    <td>C2385 </td>
    <td>ambiguous access of &#39;<span class="placeholder">member</span>&#39; in &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2390 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : incorrect storage class 
    &#39;<span class="placeholder">specifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2391 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;friend&#39; cannot be used 
    during type definition</td>
  </tr>
  <tr>
    <td>C2392 </td>
    <td>&#39;<span class="placeholder">method</span>&#39; : covariant returns types are 
    not supported in managed types</td>
  </tr>
  <tr>
    <td>C2398 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; is not yet implemented</td>
  </tr>
  <tr>
    <td>C2400 </td>
    <td>inline assembler syntax error in &#39;<span class="placeholder">context</span>&#39;; 
    found &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C2401 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : register must be base in 
    &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2402 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : register must be index in 
    &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2403 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : register must be base/index 
    in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2404 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal register in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2405 </td>
    <td>illegal short forward reference with offset</td>
  </tr>
  <tr>
    <td>C2406 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : name undefined in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2407 </td>
    <td>illegal &#39;float&#39; register in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2408 </td>
    <td>illegal type on PTR operator in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2409 </td>
    <td>illegal type used as operator in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2410 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : ambiguous member name in 
    &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2411 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal struct/union member 
    in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2412 </td>
    <td>&#39;<span class="placeholder">label</span>&#39; : case-insensitive label redefined</td>
  </tr>
  <tr>
    <td>C2413 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : illegal align size</td>
  </tr>
  <tr>
    <td>C2414 </td>
    <td>illegal number of operands</td>
  </tr>
  <tr>
    <td>C2415 </td>
    <td>improper operand type</td>
  </tr>
  <tr>
    <td>C2416 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal opcode for processor</td>
  </tr>
  <tr>
    <td>C2417 </td>
    <td>divide by zero in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2418 </td>
    <td>cannot delete browser file: <span class="placeholder">filename</span></td>
  </tr>
  <tr>
    <td>C2419 </td>
    <td>mod by zero in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2420 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal symbol in
    <span class="placeholder">context</span></td>
  </tr>
  <tr>
    <td>C2421 </td>
    <td>PTR operator used with register in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2422 </td>
    <td>illegal segment override in &#39;<span class="placeholder">operand</span>&#39;</td>
  </tr>
  <tr>
    <td>C2423 </td>
    <td>&#39;<span class="placeholder">number</span>&#39; : illegal scale</td>
  </tr>
  <tr>
    <td>C2424 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : improper expression in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2425 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : non-constant expression in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2426 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : illegal operator in &#39;<span class="placeholder">context</span>&#39;</td>
  </tr>
  <tr>
    <td>C2428 </td>
    <td>&#39;<span class="placeholder">operation</span>&#39; : not allowed on operand of 
    type &#39;bool&#39;</td>
  </tr>
  <tr>
    <td>C2429 </td>
    <td>&#39;<span class="placeholder">label</span>&#39; : illegal far label reference</td>
  </tr>
  <tr>
    <td>C2430 </td>
    <td>more than one index register in &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2431 </td>
    <td>illegal index register in &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2432 </td>
    <td>illegal reference to 16-bit data in &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2433 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;<span class="placeholder">modifier</span>&#39; 
    not permitted on data declarations</td>
  </tr>
  <tr>
    <td>C2436 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : member function or nested 
    class in constructor initializer list</td>
  </tr>
  <tr>
    <td>C2437 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : already initialized</td>
  </tr>
  <tr>
    <td>C2438 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot initialize static 
    class data via constructor</td>
  </tr>
  <tr>
    <td>C2439 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : member could not be initialized</td>
  </tr>
  <tr>
    <td>C2440 </td>
    <td>&#39;<span class="placeholder">conversion</span>&#39; : cannot convert from &#39;<span class="placeholder">type1</span>&#39; 
    to &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2443 </td>
    <td>operand size conflict</td>
  </tr>
  <tr>
    <td>C2444 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : used ANSI prototype, found 
    &#39;type&#39;, expected &#39;{&#39; or &#39;;&#39;</td>
  </tr>
  <tr>
    <td>C2446 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : no conversion from &#39;<span class="placeholder">type1</span>&#39; 
    to &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2447 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : missing function header (old-style 
    formal list?)</td>
  </tr>
  <tr>
    <td>C2448 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : function-style initializer 
    appears to be a function definition</td>
  </tr>
  <tr>
    <td>C2449 </td>
    <td>found &#39;{&#39; at file scope (missing function header?)</td>
  </tr>
  <tr>
    <td>C2450 </td>
    <td>switch expression of type &#39;<span class="placeholder">type</span>&#39; is illegal</td>
  </tr>
  <tr>
    <td>C2451 </td>
    <td>conditional expression of type &#39;<span class="placeholder">type</span>&#39; is 
    illegal</td>
  </tr>
  <tr>
    <td>C2454 </td>
    <td>improper operand type for processor</td>
  </tr>
  <tr>
    <td>C2455 </td>
    <td>improper operand type in <span class="placeholder">instruction</span></td>
  </tr>
  <tr>
    <td>C2456 </td>
    <td>illegal opcode for processor</td>
  </tr>
  <tr>
    <td>C2457 </td>
    <td>&#39;<span class="placeholder">macro</span>&#39;: predefined macro cannot appear 
    outside of a function body</td>
  </tr>
  <tr>
    <td>C2458 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition within definition</td>
  </tr>
  <tr>
    <td>C2459 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : is being defined; cannot 
    add as an anonymous member</td>
  </tr>
  <tr>
    <td>C2460 </td>
    <td>&#39;<span class="placeholder">identifier1</span>&#39; : uses &#39;<span class="placeholder">identifier2</span>&#39;, 
    which is being defined</td>
  </tr>
  <tr>
    <td>C2461 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : constructor syntax missing formal 
    parameters</td>
  </tr>
  <tr>
    <td>C2462 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot define a type in 
    a &#39;new-expression&#39;</td>
  </tr>
  <tr>
    <td>C2463 </td>
    <td>cannot define an anonymous type in a &#39;new-expression&#39;</td>
  </tr>
  <tr>
    <td>C2464 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot use &#39;new&#39; to allocate 
    a reference</td>
  </tr>
  <tr>
    <td>C2465 </td>
    <td>cannot define an anonymous type inside parentheses</td>
  </tr>
  <tr>
    <td>C2466 </td>
    <td>cannot allocate an array of constant size 0</td>
  </tr>
  <tr>
    <td>C2467 </td>
    <td>illegal declaration of anonymous &#39;<span class="placeholder">user-defined 
    type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2468 </td>
    <td>&#39;new&#39; : cannot allocate &#39;const&#39;/&#39;volatile&#39; objects (type is &#39;<span class="placeholder">type</span>&#39;)</td>
  </tr>
  <tr>
    <td>C2469 </td>
    <td>&#39;new&#39; : cannot allocate &#39;void&#39; objects</td>
  </tr>
  <tr>
    <td>C2470 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : looks like a function definition, 
    but there is no formal parameter list; skipping apparent body</td>
  </tr>
  <tr>
    <td>C2471 </td>
    <td>cannot update program database &#39;<span class="placeholder">file</span>&#39;</td>
  </tr>
  <tr>
    <td>C2475 </td>
    <td>&#39;<span class="placeholder">member_name</span>&#39; : forming a pointer-to-member 
    requires explicit use of the address-of operator (&#39;&amp;&#39;) and a qualified name</td>
  </tr>
  <tr>
    <td>C2476 </td>
    <td>empty initializer list is not allowed</td>
  </tr>
  <tr>
    <td>C2479 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;allocate( )&#39; is only valid 
    for data items of static extent</td>
  </tr>
  <tr>
    <td>C2480 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;thread&#39; is only valid for 
    data items of static extent</td>
  </tr>
  <tr>
    <td>C2482 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : dynamic initialization of 
    &#39;thread&#39; data not allowed</td>
  </tr>
  <tr>
    <td>C2483 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : object with constructor 
    cannot be declared &#39;thread&#39;</td>
  </tr>
  <tr>
    <td>C2485 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : unrecognized extended attribute</td>
  </tr>
  <tr>
    <td>C2486 </td>
    <td>&#39;__LOCAL_SIZE&#39; only allowed in function with the &#39;naked&#39; attribute</td>
  </tr>
  <tr>
    <td>C2487 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : member of dll interface 
    class may not be declared with dll interface</td>
  </tr>
  <tr>
    <td>C2488 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;naked&#39; can only be applied 
    to non-member function definitions</td>
  </tr>
  <tr>
    <td>C2489 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : initialized auto or register 
    variable not allowed at function scope in &#39;naked&#39; function</td>
  </tr>
  <tr>
    <td>C2490 </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; not allowed in function with 
    &#39;naked&#39; attribute</td>
  </tr>
  <tr>
    <td>C2491 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : definition of dllimport
    <span class="placeholder">function</span> not allowed</td>
  </tr>
  <tr>
    <td>C2492 </td>
    <td>&#39;<span class="placeholder">variable</span>&#39; : &#39;thread&#39; data may not have 
    dll interface</td>
  </tr>
  <tr>
    <td>C2493 </td>
    <td>illegal form of __based</td>
  </tr>
  <tr>
    <td>C2494 </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; cannot be called from within 
    a filter expression or __finally block</td>
  </tr>
  <tr>
    <td>C2495 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;nothrow&#39; can only be applied 
    to function declarations or definitions</td>
  </tr>
  <tr>
    <td>C2496 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;selectany&#39; can only be 
    applied to data items with external linkage</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2497</span> </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;implementation_key&#39; can 
    only be applied to function declarations</td>
  </tr>
  <tr>
    <td>C2498 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : &#39;novtable&#39; can only be applied 
    to class declarations or definitions</td>
  </tr>
  <tr>
    <td>C2499 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a class cannot be its own base 
    class</td>
  </tr>
  <tr>
    <td>C2500 </td>
    <td>&#39;<span class="placeholder">identifier1</span>&#39; : &#39;<span class="placeholder">identifier2</span>&#39; 
    is already a direct base class</td>
  </tr>
  <tr>
    <td>C2501 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : missing storage-class or 
    type specifiers</td>
  </tr>
  <tr>
    <td>C2502 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : too many access modifiers 
    on the base class</td>
  </tr>
  <tr>
    <td>C2503 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : base classes cannot contain zero-sized 
    arrays</td>
  </tr>
  <tr>
    <td>C2504 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : base class undefined</td>
  </tr>
  <tr>
    <td>C2507 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : too many virtual modifiers 
    on the base class</td>
  </tr>
  <tr>
    <td>C2509 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : member function not declared 
    in &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2510 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : left of &#39;::&#39; must be a class/struct/union</td>
  </tr>
  <tr>
    <td>C2511 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : overloaded member function 
    not found in &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2512 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : no appropriate default constructor 
    available</td>
  </tr>
  <tr>
    <td>C2513 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : no variable declared before &#39;=&#39;</td>
  </tr>
  <tr>
    <td>C2514 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : class has no constructors</td>
  </tr>
  <tr>
    <td>C2515 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : not in class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2516 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : is not a legal base class</td>
  </tr>
  <tr>
    <td>C2517 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : right of &#39;::&#39; is undefined</td>
  </tr>
  <tr>
    <td>C2518 </td>
    <td>keyword &#39;<span class="placeholder">keyword</span>&#39; illegal in base class 
    list; ignored</td>
  </tr>
  <tr>
    <td>C2519 </td>
    <td>cannot convert &#39;<span class="placeholder">Type1</span> *&#39; to &#39;<span class="placeholder">Type2</span> 
    *&#39;</td>
  </tr>
  <tr>
    <td>C2520 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : no non-explicit constructor 
    available for implicit conversion</td>
  </tr>
  <tr>
    <td>C2521 </td>
    <td>destructors do not take arguments</td>
  </tr>
  <tr>
    <td>C2522 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : cannot be constructed because 
    it cannot be destroyed in this context</td>
  </tr>
  <tr>
    <td>C2523 </td>
    <td>&#39;<span class="placeholder">class</span>::~<span class="placeholder">identifier</span>&#39; 
    : destructor tag mismatch</td>
  </tr>
  <tr>
    <td>C2524 </td>
    <td>&#39;<span class="placeholder">destructor</span>&#39; : destructors must have a 
    &#39;void&#39; parameter list</td>
  </tr>
  <tr>
    <td>C2526 </td>
    <td>&#39;<span class="placeholder">identifier1</span>&#39; : C linkage function cannot 
    return C++ class &#39;<span class="placeholder">identifier2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2528 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : pointer to reference is illegal</td>
  </tr>
  <tr>
    <td>C2529 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : reference to reference is illegal</td>
  </tr>
  <tr>
    <td>C2530 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : references must be initialized</td>
  </tr>
  <tr>
    <td>C2531 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : reference to a bit field 
    illegal</td>
  </tr>
  <tr>
    <td>C2532 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal modifier for reference</td>
  </tr>
  <tr>
    <td>C2533 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : constructors not allowed 
    a return type</td>
  </tr>
  <tr>
    <td>C2534 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : constructor cannot return 
    a value</td>
  </tr>
  <tr>
    <td>C2535 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : member function already 
    defined or declared</td>
  </tr>
  <tr>
    <td>C2536 </td>
    <td>&#39;<span class="placeholder">class</span>::<span class="placeholder">identifier</span>&#39; 
    : cannot specify explicit initializer for arrays</td>
  </tr>
  <tr>
    <td>C2537 </td>
    <td>&#39;<span class="placeholder">specifier</span>&#39; : illegal linkage specification</td>
  </tr>
  <tr>
    <td>C2538 </td>
    <td>new : cannot specify initializer for arrays</td>
  </tr>
  <tr>
    <td>C2539 </td>
    <td>new : &#39;<span class="placeholder">class</span>&#39; no default constructor to 
    initialize arrays of objects</td>
  </tr>
  <tr>
    <td>C2540 </td>
    <td>non-constant expression as array bound</td>
  </tr>
  <tr>
    <td>C2541 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : cannot delete objects that 
    are not pointers</td>
  </tr>
  <tr>
    <td>C2542 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : class object has no constructor 
    for initialization</td>
  </tr>
  <tr>
    <td>C2543 </td>
    <td>expected &#39;]&#39; for operator &#39;[]&#39;</td>
  </tr>
  <tr>
    <td>C2544 </td>
    <td>expected &#39;)&#39; for operator &#39;()&#39;</td>
  </tr>
  <tr>
    <td>C2545 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : unable to find overloaded 
    operator</td>
  </tr>
  <tr>
    <td>C2548 </td>
    <td>&#39;<span class="placeholder">class::member</span>&#39; : missing default parameter 
    for parameter <span class="placeholder">parameter</span></td>
  </tr>
  <tr>
    <td>C2549 </td>
    <td>user-defined conversion cannot specify a return type</td>
  </tr>
  <tr>
    <td>C2550 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : constructor initializer 
    lists are only allowed on constructor definitions</td>
  </tr>
  <tr>
    <td>C2551 </td>
    <td>&#39;void *&#39; type needs explicit cast</td>
  </tr>
  <tr>
    <td>C2552 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : non-aggregates cannot be 
    initialized with initializer list</td>
  </tr>
  <tr>
    <td>C2553 </td>
    <td>no legal conversion of return value to return type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2554 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : __based is illegal on references 
    to functions</td>
  </tr>
  <tr>
    <td>C2555 </td>
    <td>&#39;<span class="placeholder">class1::function1</span>&#39;: overriding virtual 
    function return type differs and is not covariant from &#39;<span class="placeholder">class2::function2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2556 </td>
    <td>&#39;<span class="placeholder">function1</span>&#39; : overloaded function differs 
    only by return type from &#39;<span class="placeholder">function2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2557 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : private and protected members 
    cannot be initialized without a constructor</td>
  </tr>
  <tr>
    <td>C2558 </td>
    <td><span class="placeholder">class-key</span> &#39;<span class="placeholder">identifier</span>&#39; 
    : no copy constructor available or copy constructor is declared &#39;explicit&#39;</td>
  </tr>
  <tr>
    <td>C2559 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : no match for specified operator</td>
  </tr>
  <tr>
    <td>C2561 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : function must return a value</td>
  </tr>
  <tr>
    <td>C2562 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;void&#39; function returning 
    a value</td>
  </tr>
  <tr>
    <td>C2563 </td>
    <td>mismatch in formal parameter list</td>
  </tr>
  <tr>
    <td>C2564 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : a function-style conversion to 
    a built-in type can only take one argument</td>
  </tr>
  <tr>
    <td>C2566 </td>
    <td>overloaded function in conditional expression</td>
  </tr>
  <tr>
    <td>C2568 </td>
    <td>&#39;<span class="placeholder">identifier1</span>&#39; : unable to resolve function 
    overload</td>
  </tr>
  <tr>
    <td>C2569 </td>
    <td>&#39;<span class="placeholder">EnumOrUnion</span>&#39; : enum/union cannot be used 
    as a base class</td>
  </tr>
  <tr>
    <td>C2570 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : union cannot have base classes</td>
  </tr>
  <tr>
    <td>C2571 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : virtual function cannot be 
    in union &#39;<span class="placeholder">union</span>&#39;</td>
  </tr>
  <tr>
    <td>C2572 </td>
    <td>&#39;<span class="placeholder">class::member</span>&#39; : redefinition of default 
    parameter : parameter <span class="placeholder">param</span></td>
  </tr>
  <tr>
    <td>C2573 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : cannot delete pointers to objects 
    of this type; the class has no non-placement overload for &#39;operator delete&#39;.<br>
    Use ::delete, or add &#39;operator delete(void*)&#39; to the class</td>
  </tr>
  <tr>
    <td>C2574 </td>
    <td>&#39;<span class="placeholder">destructor</span>&#39; : constructors and destructors 
    cannot be declared static</td>
  </tr>
  <tr>
    <td>C2575 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : only member functions and 
    bases can be virtual</td>
  </tr>
  <tr>
    <td>C2576 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : virtual member functions 
    cannot be static</td>
  </tr>
  <tr>
    <td>C2577 </td>
    <td>&#39;<span class="placeholder">destructor</span>&#39; : destructor cannot return 
    a value</td>
  </tr>
  <tr>
    <td>C2578 </td>
    <td>&#39;<span class="placeholder">class</span>::<span class="placeholder">function</span>&#39; 
    : static member function cannot hide interface method</td>
  </tr>
  <tr>
    <td>C2579 </td>
    <td>&#39;<span class="placeholder">class::function(params)</span>&#39; : parameter list 
    not sufficiently different from &#39;<span class="placeholder">class::function(params)</span>&#39;</td>
  </tr>
  <tr>
    <td>C2580 </td>
    <td>redefinition of class name &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2581 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : static &#39;operator =&#39; function 
    is illegal</td>
  </tr>
  <tr>
    <td>C2582 </td>
    <td>&#39;operator <span class="placeholder">token</span>&#39; function is unavailable 
    in &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2583 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;<span class="placeholder">const/volatile</span>&#39; 
    &#39;this&#39; pointer is illegal for constructors/destructors</td>
  </tr>
  <tr>
    <td>C2584 </td>
    <td>&#39;<span class="placeholder">Class</span>&#39; : direct base &#39;<span class="placeholder">Base2</span>&#39; 
    is inaccessible; already a base of &#39;<span class="placeholder">Base1</span>&#39;</td>
  </tr>
  <tr>
    <td>C2585 </td>
    <td>explicit conversion to &#39;<span class="placeholder">type</span>&#39; is ambiguous</td>
  </tr>
  <tr>
    <td>C2586 </td>
    <td>incorrect user-defined conversion syntax : illegal indirections</td>
  </tr>
  <tr>
    <td>C2587 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal use of local variable 
    as default parameter</td>
  </tr>
  <tr>
    <td>C2588 </td>
    <td>&#39;::~<span class="placeholder">identifier</span>&#39; : illegal global destructor</td>
  </tr>
  <tr>
    <td>C2589 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal token on right side 
    of &#39;::&#39;</td>
  </tr>
  <tr>
    <td>C2590 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : ambiguous user-defined conversions 
    in switch expression</td>
  </tr>
  <tr>
    <td>C2591 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : ambiguous user-defined conversions 
    in conditional expression</td>
  </tr>
  <tr>
    <td>C2592 </td>
    <td>no legal conversion of initialization expression to type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2593 </td>
    <td>&#39;operator <span class="placeholder">identifier</span>&#39; is ambiguous</td>
  </tr>
  <tr>
    <td>C2594 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : ambiguous conversions from 
    &#39;<span class="placeholder">type1</span>&#39; to &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2595 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : qualified name already has 
    a constructor</td>
  </tr>
  <tr>
    <td>C2596 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : qualified name already has 
    a destructor</td>
  </tr>
  <tr>
    <td>C2597 </td>
    <td>illegal reference to non-static member &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2598 </td>
    <td>linkage specification must be at global scope</td>
  </tr>
  <tr>
    <td>C2599 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : local class member functions 
    must be defined within the class</td>
  </tr>
  <tr>
    <td>C2600 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : cannot define a compiler-generated 
    special member function (must be declared in the class first)</td>
  </tr>
  <tr>
    <td>C2601 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : local function definitions 
    are illegal</td>
  </tr>
  <tr>
    <td>C2602 </td>
    <td>&#39;<span class="placeholder">class::identifier</span>&#39; is not a member of 
    a base class of &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2603 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : Too many block scope static 
    objects with constructor/destructors in function</td>
  </tr>
  <tr>
    <td>C2610 </td>
    <td><span class="placeholder">class-key</span> &#39;<span class="placeholder">class</span>&#39; 
    can never be instantiated; user-defined constructor is required</td>
  </tr>
  <tr>
    <td>C2611 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : illegal following &#39;~&#39; (expected 
    identifier)</td>
  </tr>
  <tr>
    <td>C2612 </td>
    <td>trailing &#39;<span class="placeholder">char</span>&#39; illegal in base/member 
    initializer list</td>
  </tr>
  <tr>
    <td>C2613 </td>
    <td>trailing &#39;<span class="placeholder">token</span>&#39; illegal in base class 
    list</td>
  </tr>
  <tr>
    <td>C2614 </td>
    <td>&#39;<span class="placeholder">class1</span>&#39; : illegal member initialization: 
    &#39;<span class="placeholder">class2</span>&#39; is not a base or member</td>
  </tr>
  <tr>
    <td>C2616 </td>
    <td>&#39;<span class="placeholder">conversion</span>&#39; : cannot implicitly convert 
    a non-lvalue &#39;<span class="placeholder">type1</span>&#39; to a &#39;<span class="placeholder">type2</span>&#39; 
    that is not const</td>
  </tr>
  <tr>
    <td>C2617 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : inconsistent return statement</td>
  </tr>
  <tr>
    <td>C2619 </td>
    <td>union &#39;<span class="placeholder">union</span>&#39; : cannot have static member 
    variable &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2620 </td>
    <td>member &#39;<span class="placeholder">identifier</span>&#39; of union &#39;<span class="placeholder">union</span>&#39; 
    has user-defined constructor or non-trivial default constructor</td>
  </tr>
  <tr>
    <td>C2621 </td>
    <td>member &#39;<span class="placeholder">identifier</span>&#39; of union &#39;<span class="placeholder">union</span>&#39; 
    has copy constructor</td>
  </tr>
  <tr>
    <td>C2622 </td>
    <td>member &#39;<span class="placeholder">identifier</span>&#39; of union &#39;<span class="placeholder">union</span>&#39; 
    has assignment operator</td>
  </tr>
  <tr>
    <td>C2623 </td>
    <td>member &#39;<span class="placeholder">identifier</span>&#39; of union &#39;<span class="placeholder">union</span>&#39; 
    has destructor</td>
  </tr>
  <tr>
    <td>C2624 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : local classes cannot be used 
    to declare &#39;extern&#39; variables</td>
  </tr>
  <tr>
    <td>C2625 </td>
    <td>anonymous union did not declare any data members</td>
  </tr>
  <tr>
    <td>C2626 </td>
    <td>anonymous union defines <span class="placeholder">protected/private</span> 
    member &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2627 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : member function defined 
    in unnamed class</td>
  </tr>
  <tr>
    <td>C2628 </td>
    <td>&#39;<span class="placeholder">type1</span>&#39; followed by &#39;<span class="placeholder">type2</span>&#39; 
    is illegal (did you forget a &#39;;&#39;?)</td>
  </tr>
  <tr>
    <td>C2629 </td>
    <td>unexpected &#39;<span class="placeholder">token</span> (&#39;</td>
  </tr>
  <tr>
    <td>C2630 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; found in what should be a comma-separated 
    list</td>
  </tr>
  <tr>
    <td>C2632 </td>
    <td>&#39;<span class="placeholder">type1</span>&#39; followed by &#39;<span class="placeholder">type2</span>&#39; 
    is illegal</td>
  </tr>
  <tr>
    <td>C2633 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;inline&#39; is the only legal 
    storage class for constructors</td>
  </tr>
  <tr>
    <td>C2634 </td>
    <td>&#39;&amp;<span class="placeholder">class</span>::<span class="placeholder">member</span>&#39; 
    : pointer to reference member is illegal</td>
  </tr>
  <tr>
    <td>C2635 </td>
    <td>cannot convert a &#39;<span class="placeholder">identifier1*</span>&#39; to a &#39;<span class="placeholder">identifier2*</span>&#39;; 
    conversion from a virtual base class is implied</td>
  </tr>
  <tr>
    <td>C2636 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : pointer to reference member 
    is illegal</td>
  </tr>
  <tr>
    <td>C2637 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot modify pointers to 
    data members</td>
  </tr>
  <tr>
    <td>C2638 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : __based modifier illegal 
    on pointer to member</td>
  </tr>
  <tr>
    <td>C2639 </td>
    <td>compiler generated <span class="placeholder">object</span> required by unnamed 
    class</td>
  </tr>
  <tr>
    <td>C2640 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : __based modifier illegal 
    on reference</td>
  </tr>
  <tr>
    <td>C2645 </td>
    <td>no qualified name for pointer to member (found &#39;:: *&#39;)</td>
  </tr>
  <tr>
    <td>C2646 </td>
    <td>global anonymous unions must be declared static</td>
  </tr>
  <tr>
    <td>C2647 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : cannot dereference a &#39;<span class="placeholder">type1</span>&#39; 
    on a &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2648 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : use of member as default 
    parameter requires static member</td>
  </tr>
  <tr>
    <td>C2649 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : is not a &#39;<span class="placeholder">class-key</span>&#39;</td>
  </tr>
  <tr>
    <td>C2650 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : cannot be a virtual function</td>
  </tr>
  <tr>
    <td>C2651 </td>
    <td>&#39;<span class="placeholder">data type</span>&#39; : left of &#39;::&#39; must be a class, 
    struct or union</td>
  </tr>
  <tr>
    <td>C2652 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal copy constructor: 
    first parameter must not be a &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2653 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : is not a class or namespace 
    name</td>
  </tr>
  <tr>
    <td>C2654 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : attempt to access member 
    outside a member function</td>
  </tr>
  <tr>
    <td>C2655 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : definition or redeclaration 
    illegal in current scope</td>
  </tr>
  <tr>
    <td>C2656 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : function not allowed as a 
    bit field</td>
  </tr>
  <tr>
    <td>C2657 </td>
    <td>&#39;<span class="placeholder">class</span>::*&#39; found at the start of a statement 
    (did you forget to specify a type?)</td>
  </tr>
  <tr>
    <td>C2658 </td>
    <td>&#39;<span class="placeholder">member</span>&#39;: redefinition in anonymous struct/union</td>
  </tr>
  <tr>
    <td>C2659 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : overloaded function as left 
    operand</td>
  </tr>
  <tr>
    <td>C2660 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : function does not take
    <span class="placeholder">number</span> parameters</td>
  </tr>
  <tr>
    <td>C2661 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : no overloaded function takes
    <span class="placeholder">number</span> parameters</td>
  </tr>
  <tr>
    <td>C2662 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : cannot convert &#39;this&#39; pointer 
    from &#39;<span class="placeholder">type1</span>&#39; to &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2663 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : <span class="placeholder">
    number</span> overloads have no legal conversion for &#39;this&#39; pointer</td>
  </tr>
  <tr>
    <td>C2664 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : cannot convert parameter
    <span class="placeholder">number</span> from &#39;<span class="placeholder">type1</span>&#39; 
    to &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2665 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : none of the
    <span class="placeholder">number1</span> overloads can convert parameter
    <span class="placeholder">number2</span> from type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2666 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; :
    <span class="placeholder">number</span> overloads have similar conversions</td>
  </tr>
  <tr>
    <td>C2667 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : none of
    <span class="placeholder">number</span> overloads have a best conversion</td>
  </tr>
  <tr>
    <td>C2668 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : ambiguous call to overloaded 
    function</td>
  </tr>
  <tr>
    <td>C2669 </td>
    <td>member function not allowed in anonymous union</td>
  </tr>
  <tr>
    <td>C2670 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : the template function cannot 
    convert parameter <span class="placeholder">number</span> from type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2671 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : static member functions do 
    not have &#39;this&#39; pointers</td>
  </tr>
  <tr>
    <td>C2673 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : global functions do not have 
    &#39;this&#39; pointers</td>
  </tr>
  <tr>
    <td>C2675 </td>
    <td>unary &#39;<span class="placeholder">operator</span>&#39; : &#39;<span class="placeholder">type</span>&#39; 
    does not define this operator or a conversion to a type acceptable to the predefined 
    operator</td>
  </tr>
  <tr>
    <td>C2676 </td>
    <td>binary &#39;<span class="placeholder">operator</span>&#39; : &#39;<span class="placeholder">type</span>&#39; 
    does not define this operator or a conversion to a type acceptable to the predefined 
    operator</td>
  </tr>
  <tr>
    <td>C2677 </td>
    <td>binary &#39;<span class="placeholder">operator</span>&#39; : no global operator 
    found which takes type &#39;<span class="placeholder">type</span>&#39; (or there is 
    no acceptable conversion)</td>
  </tr>
  <tr>
    <td>C2678 </td>
    <td>binary &#39;<span class="placeholder">operator</span>&#39; : no operator found which 
    takes a left-hand operand of type &#39;<span class="placeholder">type</span>&#39; (or 
    there is no acceptable conversion)</td>
  </tr>
  <tr>
    <td>C2679 </td>
    <td>binary &#39;<span class="placeholder">operator</span>&#39; : no operator found which 
    takes a right-hand operand of type &#39;<span class="placeholder">type</span>&#39; (or 
    there is no acceptable conversion)</td>
  </tr>
  <tr>
    <td>C2680 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : invalid target type for
    <span class="placeholder">name</span></td>
  </tr>
  <tr>
    <td>C2681 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : invalid expression type for
    <span class="placeholder">name</span></td>
  </tr>
  <tr>
    <td>C2682 </td>
    <td>cannot use <span class="placeholder">name</span> to convert from &#39;<span class="placeholder">type1</span>&#39; 
    to &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2683 </td>
    <td><span class="placeholder">token</span> : &#39;<span class="placeholder">type</span>&#39; 
    is not a polymorphic type</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2686</span> </td>
    <td>cannot overload static and non-static member functions with the same parameter 
    types</td>
  </tr>
  <tr>
    <td>C2687 </td>
    <td>cannot define a nested UDT of a template class out of line</td>
  </tr>
  <tr>
    <td>C2688 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : covariant returns with multiple 
    or virtual inheritance not supported for varargs functions</td>
  </tr>
  <tr>
    <td>C2689 </td>
    <td>Initializing &#39;<span class="placeholder">variable</span>&#39; : this form of 
    non-aggregate initialization requires a unary constructor</td>
  </tr>
  <tr>
    <td>C2690 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : cannot perform pointer arithmetic 
    on a __gc array</td>
  </tr>
  <tr>
    <td>C2691 </td>
    <td>&#39;<span class="placeholder">data type</span>&#39; : invalid type for __gc array 
    element</td>
  </tr>
  <tr>
    <td>C2692 </td>
    <td>&#39;<span class="placeholder">function_name</span>&#39; : fully prototyped functions 
    required in C compiler with the &#39;/clr&#39; option</td>
  </tr>
  <tr>
    <td>C2693 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : illegal comparison for references 
    to a __gc array</td>
  </tr>
  <tr>
    <td>C2695 </td>
    <td>&#39;<span class="placeholder">function1</span>&#39;: overriding virtual function 
    differs from &#39;<span class="placeholder">function2</span>&#39; only by calling convention</td>
  </tr>
  <tr>
    <td>C2696 </td>
    <td>Cannot create a temporary object of a managed type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2697 </td>
    <td>&#39;<span class="placeholder">array</span>&#39; : must explicitly specify __gc 
    or __nogc for an array declared in a managed type</td>
  </tr>
  <tr>
    <td>C2698 </td>
    <td>the using-declaration for &#39;<span class="placeholder">declaration 1</span>&#39; 
    cannot co-exist with the existing using-declaration for &#39;<span class="placeholder">declaration 
    2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2700 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot be thrown (use /W4 
    for more info)</td>
  </tr>
  <tr>
    <td>C2702 </td>
    <td>&nbsp;__except may not appear in termination block</td>
  </tr>
  <tr>
    <td>C2703 </td>
    <td>illegal __leave statement</td>
  </tr>
  <tr>
    <td>C2704 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : __va_start intrinsic only 
    allowed in varargs</td>
  </tr>
  <tr>
    <td>C2705 </td>
    <td>&#39;<span class="placeholder">label</span>&#39; : illegal jump into &#39;<span class="placeholder">exception 
    handler block</span>&#39; scope</td>
  </tr>
  <tr>
    <td>C2706 </td>
    <td>illegal __except without matching __try (missing &#39;}&#39; in __try block?)</td>
  </tr>
  <tr>
    <td>C2707 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : bad context for intrinsic 
    function</td>
  </tr>
  <tr>
    <td>C2708 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : actual parameters length 
    in bytes differs from previous call or reference</td>
  </tr>
  <tr>
    <td>C2709 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : formal parameters length 
    in bytes differs from previous declaration</td>
  </tr>
  <tr>
    <td>C2712 </td>
    <td>Cannot use __try in functions that require object unwinding</td>
  </tr>
  <tr>
    <td>C2713 </td>
    <td>Only one form of exception handling permitted per function</td>
  </tr>
  <tr>
    <td>C2714 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : function with inline assembly 
    or &#39;_setjmp&#39; is not allowed to have managed EH constructs</td>
  </tr>
  <tr>
    <td>C2715 </td>
    <td>&#39;<span class="placeholder">pointer</span>&#39; : unable to throw or catch an 
    interior __gc pointer or a value type</td>
  </tr>
  <tr>
    <td>C2716 </td>
    <td>&#39;operator new&#39; allocates value types on the C++ heap; use &#39;__nogc new
    <span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2717 </td>
    <td>&#39;__nogc new&#39; cannot be used to create a managed type object</td>
  </tr>
  <tr>
    <td>C2718 </td>
    <td>&#39;<span class="placeholder">parameter</span>&#39;: actual parameter with __declspec(align(&#39;<span class="placeholder">#</span>&#39;)) 
    won&#39;t be aligned</td>
  </tr>
  <tr>
    <td>C2719 </td>
    <td>&#39;<span class="placeholder">parameter</span>&#39;: formal parameter with __declspec(align(&#39;<span class="placeholder">#</span>&#39;)) 
    won&#39;t be aligned</td>
  </tr>
  <tr>
    <td>C2720 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;<span class="placeholder">specifier</span>&#39; 
    storage-class specifier illegal on members</td>
  </tr>
  <tr>
    <td>C2721 </td>
    <td>&#39;<span class="placeholder">specifier</span>&#39; : storage-class specifier illegal 
    between operator keyword and type</td>
  </tr>
  <tr>
    <td>C2722 </td>
    <td>&#39;::<span class="placeholder">operator</span>&#39; : illegal following operator 
    command; use &#39;operator <span class="placeholder">operator</span>&#39;</td>
  </tr>
  <tr>
    <td>C2723 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : &#39;<span class="placeholder">specifier</span>&#39; 
    storage-class specifier illegal on function definition</td>
  </tr>
  <tr>
    <td>C2724 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : &#39;static&#39; should not be used 
    on member functions defined at file scope</td>
  </tr>
  <tr>
    <td>C2726 </td>
    <td>&#39;__gc new&#39; cannot be used to create a non-managed type object</td>
  </tr>
  <tr>
    <td>C2727 </td>
    <td>cannot create non __gc array &#39;<span class="placeholder">array</span>&#39; because
    <span class="placeholder">type</span> &#39;<span class="placeholder">typename</span>&#39; 
    contains members with type __gc *</td>
  </tr>
  <tr>
    <td>C2728 </td>
    <td>cannot create non __gc array &#39;<span class="placeholder">array</span>&#39; of 
    type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2730 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : cannot be a base class of itself</td>
  </tr>
  <tr>
    <td>C2731 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : function cannot be overloaded</td>
  </tr>
  <tr>
    <td>C2732 </td>
    <td>linkage specification contradicts earlier specification for &#39;<span class="placeholder">function</span>&#39;</td>
  </tr>
  <tr>
    <td>C2733 </td>
    <td>second C linkage of overloaded function &#39;<span class="placeholder">function</span>&#39; 
    not allowed</td>
  </tr>
  <tr>
    <td>C2734 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : const object must be initialized 
    if not extern</td>
  </tr>
  <tr>
    <td>C2735 </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; keyword is not permitted in formal 
    parameter type specifier</td>
  </tr>
  <tr>
    <td>C2736 </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; keyword is not permitted in cast</td>
  </tr>
  <tr>
    <td>C2737 </td>
    <td>&#39;<span class="placeholder">class1</span>&#39; : base class &#39;<span class="placeholder">class2</span>&#39; 
    must be exported</td>
  </tr>
  <tr>
    <td><a href="c2745.htm">C2745</a> </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : this token cannot be converted 
    to an identifier</td>
  </tr>
  <tr>
    <td>C2750 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : &#39;<span class="placeholder">type1</span>&#39; 
    to &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2751 </td>
    <td>&#39;<span class="placeholder">parameter</span>&#39; : the name of a function parameter 
    cannot be qualified</td>
  </tr>
  <tr>
    <td>C2757 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : a symbol with this name already 
    exists and therefore this name cannot be used as a namespace name</td>
  </tr>
  <tr>
    <td>C2758 </td>
    <td>&#39;<span class="placeholder">const</span>&#39; : must be initialized in constructor 
    base/member initializer list</td>
  </tr>
  <tr>
    <td>C2760 </td>
    <td>syntax error : expected &#39;<span class="placeholder">name1</span>&#39; not &#39;<span class="placeholder">name2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2761 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : member function redeclaration 
    not allowed</td>
  </tr>
  <tr>
    <td>C2762 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid expression as a template 
    argument for &#39;<span class="placeholder">argument</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2763</span> </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid use of a string literal 
    as a template argument for &#39;<span class="placeholder">argument</span>&#39;</td>
  </tr>
  <tr>
    <td>C2764 </td>
    <td>&#39;<span class="placeholder">parameter</span>&#39; : illegal use of template type-parameter</td>
  </tr>
  <tr>
    <td>C2765 </td>
    <td>&#39;<span class="placeholder">filename</span>&#39; : cannot open binary header 
    at this point</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2767</span> </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : the template argument for 
    &#39;<span class="placeholder">argument</span>&#39; cannot be deduced</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2768</span> </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : explicit template arguments 
    were not expected to be associated with this declaration</td>
  </tr>
  <tr>
    <td>C2769 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : deduced template arguments 
    do not match explicit template arguments</td>
  </tr>
  <tr>
    <td>C2771 </td>
    <td>#import only permitted at global or namespace scope</td>
  </tr>
  <tr>
    <td>C2774 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : no &#39;put&#39; method is associated 
    with this property</td>
  </tr>
  <tr>
    <td>C2775 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : no &#39;get&#39; method is associated 
    with this property</td>
  </tr>
  <tr>
    <td>C2776 </td>
    <td>only one &#39;get&#39; method can be specified per property</td>
  </tr>
  <tr>
    <td>C2777 </td>
    <td>only one &#39;put&#39; method can be specified per property</td>
  </tr>
  <tr>
    <td>C2778 </td>
    <td>improperly formed GUID in __declspec(uuid())</td>
  </tr>
  <tr>
    <td>C2779 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : property methods can only 
    be associated with non-static data members</td>
  </tr>
  <tr>
    <td>C2780 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : expects
    <span class="placeholder">value1</span> arguments -
    <span class="placeholder">value2</span> provided</td>
  </tr>
  <tr>
    <td>C2781 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : expects at least
    <span class="placeholder">value1</span> argument - <span class="placeholder">
    value2</span> provided</td>
  </tr>
  <tr>
    <td>C2782 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : template parameter &#39;<span class="placeholder">identifier</span>&#39; 
    is ambiguous</td>
  </tr>
  <tr>
    <td>C2783 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : could not deduce template 
    argument for &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2784 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : could not deduce template 
    argument for &#39;<span class="placeholder">type</span>&#39; from &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2785 </td>
    <td>&#39;<span class="placeholder">declaration1</span>&#39; and &#39;<span class="placeholder">declaration2</span>&#39; 
    have different return types</td>
  </tr>
  <tr>
    <td>C2786 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : invalid operand for __uuidof</td>
  </tr>
  <tr>
    <td>C2787 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : no GUID has been associated 
    with this object</td>
  </tr>
  <tr>
    <td>C2788 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : more than one GUID associated 
    with this object</td>
  </tr>
  <tr>
    <td>C2790 </td>
    <td>&#39;super&#39; : this keyword can only be used within the body of class member 
    function</td>
  </tr>
  <tr>
    <td>C2791 </td>
    <td>illegal use of &#39;super&#39;: &#39;<span class="placeholder">class</span>&#39; does not 
    have any base classes</td>
  </tr>
  <tr>
    <td>C2792 </td>
    <td>&#39;super&#39; : this keyword must be followed by &#39;::&#39;</td>
  </tr>
  <tr>
    <td>C2793 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : unexpected token following &#39;::&#39;, 
    identifier or keyword &#39;operator&#39; expected</td>
  </tr>
  <tr>
    <td>C2794 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : is not a member of any direct 
    or indirect base class of &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2795 </td>
    <td>&#39;super::<span class="placeholder">function</span>&#39; is not a member function</td>
  </tr>
  <tr>
    <td>C2798 </td>
    <td>&#39;super::<span class="placeholder">member</span>&#39; is ambiguous</td>
  </tr>
  <tr>
    <td>C2800 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; cannot be overloaded</td>
  </tr>
  <tr>
    <td>C2801 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; must be a non-static 
    member</td>
  </tr>
  <tr>
    <td>C2802 </td>
    <td>static member &#39;operator <span class="placeholder">operator</span>&#39; has no 
    formal parameters</td>
  </tr>
  <tr>
    <td>C2803 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; must have at least 
    one formal parameter of class type</td>
  </tr>
  <tr>
    <td>C2804 </td>
    <td>binary &#39;operator <span class="placeholder">operator</span>&#39; has too many 
    parameters</td>
  </tr>
  <tr>
    <td>C2805 </td>
    <td>binary &#39;operator <span class="placeholder">operator</span>&#39; has too few 
    parameters</td>
  </tr>
  <tr>
    <td>C2806 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; has too many formal 
    parameters</td>
  </tr>
  <tr>
    <td>C2807 </td>
    <td>the second formal parameter to postfix &#39;operator
    <span class="placeholder">operator</span>&#39; must be &#39;int&#39;</td>
  </tr>
  <tr>
    <td>C2808 </td>
    <td>unary &#39;operator <span class="placeholder">operator</span>&#39; has too many 
    formal parameters</td>
  </tr>
  <tr>
    <td>C2809 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; has no formal parameters</td>
  </tr>
  <tr>
    <td>C2810 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : an interface can only inherit 
    from another interface</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2811</span> </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : a __gc class can only inherit 
    from a __gc class or from a __gc interface</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2812</span> </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : a __gc class or a __gc interface 
    can only be inherited from a __gc class or a __gc interface</td>
  </tr>
  <tr>
    <td>C2814 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; defined inside managed &#39;<span class="placeholder">type</span>&#39;, 
    must explicitly specify __gc, __nogc or __value</td>
  </tr>
  <tr>
    <td>C2815 </td>
    <td>&#39;operator delete&#39; : first formal parameter must be &#39;void *&#39;, but &#39;<span class="placeholder">param</span>&#39; 
    was used</td>
  </tr>
  <tr>
    <td>C2817 </td>
    <td>return type for &#39;operator delete&#39; must be &#39;void&#39;</td>
  </tr>
  <tr>
    <td>C2818 </td>
    <td>application of overloaded &#39;operator -&gt;&#39; is recursive through type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2819 </td>
    <td>type &#39;<span class="placeholder">type</span>&#39; does not have an overloaded 
    member &#39;operator -&gt;&#39;</td>
  </tr>
  <tr>
    <td>C2821 </td>
    <td>first formal parameter to &#39;operator new&#39; must be &#39;size_t&#39;</td>
  </tr>
  <tr>
    <td>C2823 </td>
    <td>a typedef template is illegal</td>
  </tr>
  <tr>
    <td>C2824 </td>
    <td>return type for &#39;operator new&#39; must be &#39;void *&#39;</td>
  </tr>
  <tr>
    <td>C2825 </td>
    <td>&#39;<span class="placeholder">class</span>::<span class="placeholder">member</span>&#39;: 
    cannot form a qualified name</td>
  </tr>
  <tr>
    <td>C2826 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; must be declared static</td>
  </tr>
  <tr>
    <td>C2827 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; cannot be globally 
    overridden with unary form</td>
  </tr>
  <tr>
    <td>C2828 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; cannot be globally 
    overridden with binary form</td>
  </tr>
  <tr>
    <td>C2829 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; cannot have a variable 
    parameter list</td>
  </tr>
  <tr>
    <td>C2830 </td>
    <td>only placement parameters to &#39;operator new&#39; can have default values</td>
  </tr>
  <tr>
    <td>C2831 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; cannot have default 
    parameters</td>
  </tr>
  <tr>
    <td>C2833 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; is not a recognized 
    operator or type</td>
  </tr>
  <tr>
    <td>C2834 </td>
    <td>&#39;operator <span class="placeholder">operator</span>&#39; must be globally qualified</td>
  </tr>
  <tr>
    <td>C2835 </td>
    <td>user-defined conversion &#39;<span class="placeholder">type</span>&#39; takes no 
    formal parameters</td>
  </tr>
  <tr>
    <td>C2837 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal local static variable 
    in exported inline function</td>
  </tr>
  <tr>
    <td>C2838 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : illegal qualified name in member 
    declaration</td>
  </tr>
  <tr>
    <td>C2839 </td>
    <td>invalid return type &#39;<span class="placeholder">type</span>&#39; for overloaded 
    &#39;operator -&gt;&#39;</td>
  </tr>
  <tr>
    <td>C2841 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : invalid template function 
    declaration</td>
  </tr>
  <tr>
    <td>C2842 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a managed type may not define 
    its own &#39;operator new&#39; or &#39;operator delete&#39;</td>
  </tr>
  <tr>
    <td>C2843 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : cannot take the address of a 
    non-static data member or method of a managed type</td>
  </tr>
  <tr>
    <td>C2844 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : cannot be a member of interface 
    &#39;<span class="placeholder">interface</span>&#39;</td>
  </tr>
  <tr>
    <td>C2845 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : cannot perform pointer arithmetic 
    on __gc pointer &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C2846 </td>
    <td>&#39;<span class="placeholder">constructor</span>&#39; : an interface cannot have 
    a constructor</td>
  </tr>
  <tr>
    <td>C2847 </td>
    <td>cannot apply sizeof to managed type &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2848</span> </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : a managed type cannot be a member 
    of a union</td>
  </tr>
  <tr>
    <td>C2849 </td>
    <td>&#39;<span class="placeholder">destructor</span>&#39; : an interface cannot have 
    a destructor</td>
  </tr>
  <tr>
    <td>C2850 </td>
    <td>&#39;<span class="placeholder">construct</span>&#39; : only allowed at file scope; 
    may not be in a nested construct</td>
  </tr>
  <tr>
    <td>C2854 </td>
    <td>syntax error in #pragma hdrstop</td>
  </tr>
  <tr>
    <td>C2855 </td>
    <td>command-line option &#39;<span class="placeholder">option</span>&#39; inconsistent 
    with precompiled header</td>
  </tr>
  <tr>
    <td>C2856 </td>
    <td>#pragma hdrstop cannot be inside an #if block</td>
  </tr>
  <tr>
    <td>C2857 </td>
    <td>&#39;#include&#39; statement specified with the /Yc<span class="placeholder">filename</span> 
    command-line option was not found in the source file</td>
  </tr>
  <tr>
    <td>C2858 </td>
    <td>command-line option &#39;<span class="placeholder">option1</span> (<span class="placeholder">option2</span>)&#39; 
    inconsistent with precompiled header, which used &#39;<span class="placeholder">option3</span>&#39;</td>
  </tr>
  <tr>
    <td>C2859 </td>
    <td><span class="placeholder">filename</span> is not the pdb file that was used 
    when this precompiled header was created, recreate the precompiled header.</td>
  </tr>
  <tr>
    <td>C2860 </td>
    <td>&#39;void&#39; cannot be an argument type, except for &#39;(void)&#39;</td>
  </tr>
  <tr>
    <td>C2861 </td>
    <td>&#39;<span class="placeholder">function name</span>&#39; : an interface member function 
    cannot be defined</td>
  </tr>
  <tr>
    <td>C2862 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : an interface can only have 
    public members</td>
  </tr>
  <tr>
    <td>C2863 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : an interface cannot have 
    friends</td>
  </tr>
  <tr>
    <td>C2864 </td>
    <td>&#39;<span class="placeholder">variable</span>&#39; : only const static integral 
    data members can be initialized inside a class or struct</td>
  </tr>
  <tr>
    <td>C2865 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : illegal comparison for references 
    to __gc class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2866 </td>
    <td>&#39;<span class="placeholder">variable</span>&#39; : const static data members 
    of a managed type must be initialized at their declarations</td>
  </tr>
  <tr>
    <td>C2867 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : is not a namespace</td>
  </tr>
  <tr>
    <td>C2868 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal syntax for using-declaration; 
    expected qualified-name</td>
  </tr>
  <tr>
    <td>C2869 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : has already been defined to be 
    a namespace</td>
  </tr>
  <tr>
    <td>C2870 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : a namespace definition must appear 
    either at file scope or immediately within another namespace definition</td>
  </tr>
  <tr>
    <td>C2871 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : a namespace with this name does 
    not exist</td>
  </tr>
  <tr>
    <td>C2872 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : ambiguous symbol</td>
  </tr>
  <tr>
    <td>C2873 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : symbol cannot be used in a using-declaration</td>
  </tr>
  <tr>
    <td>C2874 </td>
    <td>using-declaration causes a multiple declaration of &#39;<span class="placeholder">symbol</span>&#39;</td>
  </tr>
  <tr>
    <td>C2875 </td>
    <td>using-declaration causes a multiple declaration of &#39;<span class="placeholder">class::identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2876 </td>
    <td>&#39;<span class="placeholder">class::symbol</span>&#39; : not all overloads are 
    accessible</td>
  </tr>
  <tr>
    <td>C2877 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; is not accessible from &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2878 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : a namespace or class of this name 
    does not exist</td>
  </tr>
  <tr>
    <td>C2879 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : only an existing namespace can 
    be given an alternative name by a namespace alias definition</td>
  </tr>
  <tr>
    <td>C2880 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : a symbol with this name already 
    exists in the current scope</td>
  </tr>
  <tr>
    <td>C2881 </td>
    <td>&#39;<span class="placeholder">namespace1</span>&#39; : is already used as an alias 
    for &#39;<span class="placeholder">namespace2</span>&#39;</td>
  </tr>
  <tr>
    <td>C2882 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : illegal use of namespace identifier 
    in expression</td>
  </tr>
  <tr>
    <td>C2883 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : local function declaration conflicts 
    with &#39;<span class="placeholder">identifier</span>&#39; introduced by using-declaration</td>
  </tr>
  <tr>
    <td>C2884 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : introduced by using-declaration 
    conflicts with local function &#39;<span class="placeholder">function</span>&#39;</td>
  </tr>
  <tr>
    <td>C2885 </td>
    <td>&#39;<span class="placeholder">class::identifier</span>&#39; : a using-declaration 
    as a member of a class must be a member-declaration</td>
  </tr>
  <tr>
    <td>C2886 </td>
    <td>&#39;<span class="placeholder">class::identifier</span>&#39; : symbol cannot be 
    used in a member using-declaration</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2887</span> </td>
    <td>&#39;<span class="placeholder">class::identifier</span>&#39; : symbol cannot be 
    used in a member using-declaration</td>
  </tr>
  <tr>
    <td>C2888 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : symbol cannot be defined 
    within namespace &#39;<span class="placeholder">namespace</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2889</span> </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : a gc type cannot be a virtual 
    base class</td>
  </tr>
  <tr>
    <td>C2890 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a __gc class can only have one 
    non-interface base class</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2891</span> </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot take the address 
    of a template parameter</td>
  </tr>
  <tr>
    <td>C2892 </td>
    <td>&#39;<span class="placeholder">statement</span>&#39; : reference template parameters 
    are not supported</td>
  </tr>
  <tr>
    <td>C2893 </td>
    <td>Failed to specialize function template &#39;<span class="placeholder">template 
    name</span>&#39;</td>
  </tr>
  <tr>
    <td>C2894 </td>
    <td>templates cannot be declared to have &#39;C&#39; linkage</td>
  </tr>
  <tr>
    <td><span class="undocumented">C2895</span> </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : cannot explicitly instantiate 
    a function template that has been declared with dllimport</td>
  </tr>
  <tr>
    <td>C2896 </td>
    <td>&#39;<span class="placeholder">function1</span>&#39; : cannot use function template 
    &#39;<span class="placeholder">function2</span>&#39; as a function argument</td>
  </tr>
  <tr>
    <td>C2897 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : destructors cannot be templates</td>
  </tr>
  <tr>
    <td>C2898 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39; : member function templates 
    cannot be virtual</td>
  </tr>
  <tr>
    <td>C2899 </td>
    <td>typename cannot be used outside a template declaration</td>
  </tr>
  <tr>
    <td>C2901 </td>
    <td>&#39;<span class="placeholder">declaration1</span>&#39; : function differs from 
    &#39;<span class="placeholder">declaration2</span>&#39; only by return type or calling 
    convention</td>
  </tr>
  <tr>
    <td>C2902 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : unexpected token following &#39;template&#39;, 
    identifier expected</td>
  </tr>
  <tr>
    <td>C2903 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : symbol is neither a class 
    template nor a function template</td>
  </tr>
  <tr>
    <td>C2904 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : template-name already defined 
    as &#39;<span class="placeholder">declaration</span>&#39;</td>
  </tr>
  <tr>
    <td>C2906 </td>
    <td>C++ language change: to explicitly specialize class template &#39;<span class="placeholder">identifier</span>&#39; 
    use the following syntax -</td>
  </tr>
  <tr>
    <td>C2907 </td>
    <td>explicit specialization; &#39;<span class="placeholder">declaration</span>&#39; 
    is not a member of a class template</td>
  </tr>
  <tr>
    <td>C2908 </td>
    <td>explicit specialization; &#39;<span class="placeholder">template</span>&#39; has 
    already been instantiated from the primary template</td>
  </tr>
  <tr>
    <td>C2909 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39;: explicit instantiation of 
    template function requires return type</td>
  </tr>
  <tr>
    <td>C2911 </td>
    <td>cannot define p-code function with more than 255 bytes of parameters</td>
  </tr>
  <tr>
    <td>C2912 </td>
    <td>explicit specialization; &#39;<span class="placeholder">declaration</span>&#39; 
    is not a function template</td>
  </tr>
  <tr>
    <td>C2913 </td>
    <td>explicit specialization; &#39;<span class="placeholder">declaration</span>&#39; 
    is not a class template</td>
  </tr>
  <tr>
    <td>C2914 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot deduce template argument 
    as function argument is ambiguous</td>
  </tr>
  <tr>
    <td>C2917 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : invalid template-parameter</td>
  </tr>
  <tr>
    <td>C2918 </td>
    <td>&#39;<span class="placeholder">name</span>&#39; : illegal use of local type in template 
    instantiation</td>
  </tr>
  <tr>
    <td>C2919 </td>
    <td>illegal use of anonymous local type in template instantiation</td>
  </tr>
  <tr>
    <td>C2920 </td>
    <td>redefinition : &#39;<span class="placeholder">class</span>&#39; : template class 
    has already been declared as &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2921 </td>
    <td>redefinition : &#39;<span class="placeholder">class</span>&#39; : template class 
    is being redeclared as &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2922 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : a friend function of a template 
    class must have been previously declared</td>
  </tr>
  <tr>
    <td>C2923 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : &#39;<span class="placeholder">identifier</span>&#39; 
    is invalid as template argument &#39;#<span class="placeholder">number</span>&#39;, 
    type expected</td>
  </tr>
  <tr>
    <td>C2926 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : types with no linkage cannot be 
    used as template arguments</td>
  </tr>
  <tr>
    <td>C2927 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : a template function must be 
    called with at least one argument</td>
  </tr>
  <tr>
    <td>C2928 </td>
    <td>explicit instantiation; &#39;<span class="placeholder">identifier</span>&#39; is 
    not a function or static data member of template-class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2929 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : explicit instantiation; 
    cannot explicitly force and suppress instantiation of template-class member</td>
  </tr>
  <tr>
    <td>C2930 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    an enumerate of &#39;enum <span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2931 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a member function of &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2932 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a data member of &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2933 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a typedef member of &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2934 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a nested &#39;<span class="placeholder">item</span>&#39; of &#39;<span class="placeholder">identifier</span>&#39;</td>
  </tr>
  <tr>
    <td>C2935 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a global function</td>
  </tr>
  <tr>
    <td>C2936 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a global data variable</td>
  </tr>
  <tr>
    <td>C2937 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a global typedef</td>
  </tr>
  <tr>
    <td>C2938 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a global &#39;<span class="placeholder">item</span>&#39;</td>
  </tr>
  <tr>
    <td>C2939 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a local data variable</td>
  </tr>
  <tr>
    <td>C2940 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a local typedef</td>
  </tr>
  <tr>
    <td>C2941 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a local &#39;<span class="placeholder">item</span>&#39;</td>
  </tr>
  <tr>
    <td>C2942 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a formal argument of a function</td>
  </tr>
  <tr>
    <td>C2943 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a type argument of a template</td>
  </tr>
  <tr>
    <td>C2944 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template-class-id redefined as 
    a value argument of a template</td>
  </tr>
  <tr>
    <td>C2945 </td>
    <td>explicit instantiation does not refer to a template-class specialization</td>
  </tr>
  <tr>
    <td>C2946 </td>
    <td>explicit instantiation; &#39;<span class="placeholder">class</span>&#39; is not 
    a template-class specialization</td>
  </tr>
  <tr>
    <td>C2947 </td>
    <td>expecting &#39;&gt;&#39; to terminate <span class="placeholder">construct</span>, found 
    &#39;<span class="placeholder">syntax</span>&#39;</td>
  </tr>
  <tr>
    <td>C2948 </td>
    <td>explicit instantiation; storage class specifier &#39;<span class="placeholder">specifier</span>&#39; 
    not permitted on specialization</td>
  </tr>
  <tr>
    <td>C2949 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : explicit instantiation; cannot 
    use &#39;auto&#39; and &#39;extern&#39; on the same template-class specialization</td>
  </tr>
  <tr>
    <td>C2951 </td>
    <td>template declarations are only permitted at global or namespace scope</td>
  </tr>
  <tr>
    <td>C2953 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : template class has already 
    been defined</td>
  </tr>
  <tr>
    <td>C2954 </td>
    <td>template definitions cannot nest</td>
  </tr>
  <tr>
    <td>C2955 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : use of class template requires 
    template argument list</td>
  </tr>
  <tr>
    <td>C2958 </td>
    <td>the left <span class="placeholder">delimiter</span> found at &#39;<span class="placeholder">file</span>(<span class="placeholder">line</span>)&#39; 
    was not matched correctly</td>
  </tr>
  <tr>
    <td>C2961 </td>
    <td>syntax error : &#39;<span class="placeholder">token</span>&#39; : unexpected token 
    in template declaration</td>
  </tr>
  <tr>
    <td>C2962 </td>
    <td>syntax error : &#39;<span class="placeholder">token</span>&#39; : expected template-class 
    member function definition to end with &#39;}&#39;</td>
  </tr>
  <tr>
    <td>C2963 </td>
    <td>string literals are not permitted as parameter to a template specialization</td>
  </tr>
  <tr>
    <td>C2964 </td>
    <td>invalid expression as template parameter</td>
  </tr>
  <tr>
    <td>C2965 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : invalid overloading of static 
    data member for template class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2966 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : adding member function of 
    same name as existing static data member for template class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2967 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : adding static data member 
    of same name as existing member function for template class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2968 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : user specialization of template 
    class has an incomplete definition : expected &#39;}&#39; but found &#39;<span class="placeholder">symbol</span>&#39;</td>
  </tr>
  <tr>
    <td>C2969 </td>
    <td>syntax error : &#39;<span class="placeholder">symbol</span>&#39; : expected member 
    function definition to end with &#39;}&#39;</td>
  </tr>
  <tr>
    <td>C2970 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template argument &#39;<span class="placeholder">parameter</span>&#39; 
    : invalid use of non-integral-constant static variable &#39;<span class="placeholder">var</span>&#39; 
    as non-type argument</td>
  </tr>
  <tr>
    <td>C2971 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template argument &#39;<span class="placeholder">parameter</span>&#39; 
    : invalid use of local variable &#39;<span class="placeholder">variable</span>&#39; 
    as non-type argument</td>
  </tr>
  <tr>
    <td>C2972 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template argument &#39;<span class="placeholder">number</span>&#39; 
    : &#39;<span class="placeholder">token</span>&#39; is not a valid template argument</td>
  </tr>
  <tr>
    <td>C2973 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid template argument &#39;<span class="placeholder">number</span>&#39;</td>
  </tr>
  <tr>
    <td>C2974 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid template argument for 
    &#39;<span class="placeholder">identifier</span>&#39;, type expected</td>
  </tr>
  <tr>
    <td>C2975 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid template argument for 
    &#39;<span class="placeholder">identifier</span>&#39;, constant expression expected</td>
  </tr>
  <tr>
    <td>C2976 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : too few template arguments</td>
  </tr>
  <tr>
    <td>C2977 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : too many template arguments</td>
  </tr>
  <tr>
    <td>C2980 </td>
    <td>unexpected token in template declaration</td>
  </tr>
  <tr>
    <td>C2982 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : new template parameter list 
    has fewer parameters than the previous declaration</td>
  </tr>
  <tr>
    <td>C2983 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : new template parameter list 
    has more parameters than the previous declaration</td>
  </tr>
  <tr>
    <td>C2984 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : template parameters &#39;<span class="placeholder">argument1</span>&#39; 
    and &#39;<span class="placeholder">argument2</span>&#39; do not match</td>
  </tr>
  <tr>
    <td>C2985 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : invalid static data member; 
    template class &#39;<span class="placeholder">class</span>&#39; already has a function 
    member of the same name</td>
  </tr>
  <tr>
    <td>C2986 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : invalid function member; 
    template class &#39;<span class="placeholder">class</span>&#39; already has a static 
    data member of the same name</td>
  </tr>
  <tr>
    <td>C2987 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : redefinition; type mismatch 
    for static data member of template class &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C2988 </td>
    <td>unrecognizable template declaration/definition</td>
  </tr>
  <tr>
    <td>C2989 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : template class has already been 
    defined as a non-template class</td>
  </tr>
  <tr>
    <td>C2990 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : non-template class has already 
    been defined as a template class</td>
  </tr>
  <tr>
    <td>C2991 </td>
    <td>redefinition of template parameter &#39;<span class="placeholder">parameter</span>&#39;</td>
  </tr>
  <tr>
    <td>C2992 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid or missing template parameter 
    list</td>
  </tr>
  <tr>
    <td>C2993 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : illegal type for non-type 
    template parameter &#39;<span class="placeholder">parameter</span>&#39;</td>
  </tr>
  <tr>
    <td>C2994 </td>
    <td>unnamed class in template parameter list</td>
  </tr>
  <tr>
    <td>C2995 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : template function has already 
    been defined</td>
  </tr>
  <tr>
    <td>C2996 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : recursive template function 
    definition</td>
  </tr>
  <tr>
    <td>C2998 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : cannot be a template definition</td>
  </tr>
  <tr>
    <td><a href="c3102.htm">C3102</a> </td>
    <td>&#39;<span class="placeholder">argument_value</span>&#39; : a &#39;positional&#39; argument 
    cannot follow a &#39;named&#39; argument</td>
  </tr>
  <tr>
    <td>C3104 </td>
    <td>&#39;<span class="placeholder">parameter_name</span>&#39; : illegal argument for 
    attribute &#39;<span class="placeholder">attribute_name</span>&#39;</td>
  </tr>
  <tr>
    <td>C3107 </td>
    <td>&#39;<span class="placeholder">parameter</span>&#39; : already seen this property 
    argument</td>
  </tr>
  <tr>
    <td>C3108 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39; : this attribute may not be 
    used in a managed context</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3109</span> </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39; : interface methods must use 
    either the &#39;__stdcall&#39; or &#39;__cdecl&#39; calling convention</td>
  </tr>
  <tr>
    <td>C3110 </td>
    <td>&#39;<span class="placeholder">function_name</span>&#39; : you cannot overload a 
    COM interface method</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3111</span> </td>
    <td>&#39;dual&#39; interface &#39;<span class="placeholder">interface1</span>&#39;, cannot inherit 
    from &#39;custom&#39; interface &#39;<span class="placeholder">interface2</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3112</span> </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : an interface can only be 
    declared at global or namespace scope</td>
  </tr>
  <tr>
    <td>C3113 </td>
    <td>an &#39;<span class="placeholder">structure</span>&#39; cannot be a template</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3114</span> </td>
    <td>invalid use of __member_offset</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3115</span> </td>
    <td>invalid use of __current_class</td>
  </tr>
  <tr>
    <td>C3116 </td>
    <td>&#39;<span class="placeholder">storage specifier</span>&#39; : invalid storage class 
    for interface method</td>
  </tr>
  <tr>
    <td>C3117 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : an interface can only have 
    one base class</td>
  </tr>
  <tr>
    <td>C3118 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : interfaces do not support 
    virtual inheritance</td>
  </tr>
  <tr>
    <td>C3119 </td>
    <td>cannot have multiple &#39;module&#39; attributes with different uuid&#39;s</td>
  </tr>
  <tr>
    <td>C3120 </td>
    <td>&#39;<span class="placeholder">method_name</span>&#39; : interface methods cannot 
    take a variable argument list</td>
  </tr>
  <tr>
    <td>C3121 </td>
    <td>cannot change GUID for class &#39;<span class="placeholder">class_name</span>&#39;</td>
  </tr>
  <tr>
    <td>C3122 </td>
    <td>&#39;<span class="placeholder">property</span>&#39; : a parameterized property must 
    have at least one argument</td>
  </tr>
  <tr>
    <td>C3123 </td>
    <td>runtime DLL mscoree.dll is not found on system</td>
  </tr>
  <tr>
    <td>C3124 </td>
    <td>Error loading runtime DLL mscoree.dll</td>
  </tr>
  <tr>
    <td>C3125 </td>
    <td>Error unloading runtime DLL mscoree.dll</td>
  </tr>
  <tr>
    <td>C3126 </td>
    <td>cannot define a union &#39;<span class="placeholder">union</span>&#39; inside of 
    managed type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3127 </td>
    <td>&#39;<span class="placeholder">attribute_name</span>&#39; : you cannot use this 
    attribute in conjunction with attribute &#39;<span class="placeholder">attribute_name</span>&#39;</td>
  </tr>
  <tr>
    <td>C3128 </td>
    <td>&#39;<span class="placeholder">function_name</span>&#39; : &#39;<span class="placeholder">attribute_parameter</span>&#39; 
    method name does not match previously specified method name, &#39;<span class="placeholder">function_name</span>&#39;</td>
  </tr>
  <tr>
    <td>C3129 </td>
    <td>The compiler cannot automatically generate a &#39;<span class="placeholder">method</span>&#39; 
    method if there is no storage specified</td>
  </tr>
  <tr>
    <td>C3130 </td>
    <td>Internal Compiler Error: failed to write injected code block to PDB</td>
  </tr>
  <tr>
    <td>C3131 </td>
    <td>project must have a &#39;module&#39; attribute with a &#39;name&#39; property</td>
  </tr>
  <tr>
    <td>C3133 </td>
    <td>&#39;<span class="placeholder">attribute_name(s)</span>&#39; : these attributes 
    are only used within the context of a COM interface</td>
  </tr>
  <tr>
    <td>C3134 </td>
    <td>&#39;<span class="placeholder">value</span>&#39; : value of attribute argument &#39;%s.%s&#39; 
    does not have valid type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3135 </td>
    <td>&#39;<span class="placeholder">property</span>&#39; : a property cannot have a &#39;const&#39; 
    or &#39;volatile&#39; type</td>
  </tr>
  <tr>
    <td>C3136 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : a COM interface can only 
    inherit from another COM interface, &#39;<span class="placeholder">interface</span>&#39; 
    is not a COM interface</td>
  </tr>
  <tr>
    <td>C3137 </td>
    <td>&#39;<span class="placeholder">property</span>&#39; : a property cannot be initialized</td>
  </tr>
  <tr>
    <td>C3138 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : a &#39;<span class="placeholder">attribute</span>&#39; 
    interface must inherit from IDispatch, or from an interface that inherits from 
    IDispatch</td>
  </tr>
  <tr>
    <td>C3139 </td>
    <td>&#39;<span class="placeholder">struct</span>&#39; : cannot export a UDT without 
    members</td>
  </tr>
  <tr>
    <td>C3140 </td>
    <td>cannot have multiple &#39;module&#39; attributes in the same compilation unit</td>
  </tr>
  <tr>
    <td>C3141 </td>
    <td>&#39;<span class="placeholder">interface_name</span>&#39; : interfaces only support 
    public inheritance</td>
  </tr>
  <tr>
    <td>C3142 </td>
    <td>&#39;<span class="placeholder">property_name</span>&#39; : you cannot take the address 
    of a property</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3143</span> </td>
    <td>&#39;%s.%s&#39; : attribute argument cannot have multiple values</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3144</span> </td>
    <td>&#39;%s&#39; : attribute requires explicit arguments, &#39;%s&#39; is unnamed</td>
  </tr>
  <tr>
    <td>C3145 </td>
    <td>&#39;<span class="placeholder">object</span>&#39; : cannot declare a global or static 
    managed type object or a __gc pointer</td>
  </tr>
  <tr>
    <td>C3146 </td>
    <td>illegal __nogc reference to managed type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3147 </td>
    <td>illegal __nogc with multi-dimensional __gc array</td>
  </tr>
  <tr>
    <td>C3148 </td>
    <td>illegal __nogc pointer to managed type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3149 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : illegal use of managed type &#39;%$S&#39;; 
    did you forget a &#39;*&#39;?</td>
  </tr>
  <tr>
    <td>C3150 </td>
    <td>&#39;<span class="placeholder">element</span>&#39; : &#39;<span class="placeholder">attribute</span>&#39; 
    can only be applied to a class, struct, interface, array or pointer</td>
  </tr>
  <tr>
    <td>C3151 </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; cannot be applied to a template</td>
  </tr>
  <tr>
    <td>C3152 </td>
    <td>&#39;<span class="placeholder">element</span>&#39; : &#39;<span class="placeholder">attribute</span>&#39; 
    can only be applied to a class or struct</td>
  </tr>
  <tr>
    <td>C3153 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : you cannot create an instance 
    of an interface</td>
  </tr>
  <tr>
    <td>C3154 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39; : illegal usage of attribute</td>
  </tr>
  <tr>
    <td>C3156 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : you cannot have a local definition 
    of a managed type</td>
  </tr>
  <tr>
    <td>C3158 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : virtual destructors on value types 
    are not allowed</td>
  </tr>
  <tr>
    <td>C3159 </td>
    <td>&#39;<span class="placeholder">pointer</span>&#39; : array of pointers to value 
    type cannot be declared</td>
  </tr>
  <tr>
    <td>C3160 </td>
    <td>&#39;<span class="placeholder">pointer</span>&#39; : cannot declare interior __gc 
    pointer or reference as a member of &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C3161 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : nesting class, struct, union 
    or interface in an interface is illegal; nesting interface in a class struct 
    or union is illegal</td>
  </tr>
  <tr>
    <td>C3162 </td>
    <td>&#39;<span class="placeholder">pointers</span>&#39; : __gc pointers to interior 
    __gc pointers cannot be declared</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3163</span> </td>
    <td>attribute specification must precede type declaration</td>
  </tr>
  <tr>
    <td>C3164 </td>
    <td>&#39;<span class="placeholder">member</span>&#39;: Copy constructors and destructors 
    on value types are not supported</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3165</span> </td>
    <td>&#39;%s&#39; : cannot convert to an integral or floating point value</td>
  </tr>
  <tr>
    <td>C3166 </td>
    <td>&#39;<span class="placeholder">pointer</span>&#39; : cannot declare a pointer to 
    an interior __gc pointer as a member of &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3167 </td>
    <td>Unable to initialize .NET Framework: make sure it is installed</td>
  </tr>
  <tr>
    <td>C3168 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : illegal type for managed enum 
    underlying type</td>
  </tr>
  <tr>
    <td>C3169 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : cannot declare a managed object 
    or a __gc pointer within an unmanaged function</td>
  </tr>
  <tr>
    <td>C3170 </td>
    <td>cannot have different module identifiers in a project</td>
  </tr>
  <tr>
    <td>C3171 </td>
    <td>&#39;<span class="placeholder">module</span>&#39;: cannot specify different module 
    attributes in a project</td>
  </tr>
  <tr>
    <td>C3172 </td>
    <td>&#39;<span class="placeholder">module_name</span>&#39;: cannot specify different 
    idl_module attributes in a project</td>
  </tr>
  <tr>
    <td>C3173 </td>
    <td>version mismatch in idl merge</td>
  </tr>
  <tr>
    <td>C3174 </td>
    <td>module attribute was not specified</td>
  </tr>
  <tr>
    <td>C3175 </td>
    <td>&#39;<span class="placeholder">function1</span>&#39; : cannot call a method of a 
    managed type from unmanaged function &#39;<span class="placeholder">function2</span>&#39;</td>
  </tr>
  <tr>
    <td>C3176 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : cannot declare local value type</td>
  </tr>
  <tr>
    <td>C3177 </td>
    <td>&#39;<span class="placeholder">enum</span>&#39; : can only specify underlying type 
    for managed enum</td>
  </tr>
  <tr>
    <td>C3179 </td>
    <td>an unnamed managed type is not allowed</td>
  </tr>
  <tr>
    <td>C3180 </td>
    <td>&#39;<span class="placeholder">type name</span>&#39; : type-name exceeds meta-data 
    limit of &#39;<span class="placeholder">limit</span>&#39; characters</td>
  </tr>
  <tr>
    <td>C3181 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : invalid operand for __typeof, 
    expected a fully defined managed type</td>
  </tr>
  <tr>
    <td>C3182 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a member using-declaration or 
    access declaration is illegal within a managed type</td>
  </tr>
  <tr>
    <td>C3183 </td>
    <td>cannot define unnamed class, struct or union inside of managed type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3184 </td>
    <td>&#39;<span class="placeholder">array</span>&#39; : initialization of multi-dimensional 
    arrays via an initializer list is not supported</td>
  </tr>
  <tr>
    <td>C3185 </td>
    <td>&#39;typeid&#39; used on managed type &#39;<span class="placeholder">type</span>&#39;, use 
    __typeof instead</td>
  </tr>
  <tr>
    <td>C3200 </td>
    <td>&#39;<span class="placeholder">template</span>&#39; : invalid template argument 
    for template parameter &#39;<span class="placeholder">parameter</span>&#39;, expected 
    a class template</td>
  </tr>
  <tr>
    <td>C3201 </td>
    <td>the template parameter list for class template &#39;<span class="placeholder">template</span>&#39; 
    does not match the template parameter list for template parameter &#39;<span class="placeholder">template</span>&#39;</td>
  </tr>
  <tr>
    <td>C3202 </td>
    <td>&#39;<span class="placeholder">arg name</span>&#39; : invalid default argument for 
    template parameter &#39;<span class="placeholder">parameter</span>&#39;, expected a 
    class template</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3203</span> </td>
    <td>&#39;<span class="placeholder">template</span>&#39; : class template invalid as 
    template argument for template parameter &#39;<span class="placeholder">parameter</span>&#39;, 
    expected a real type</td>
  </tr>
  <tr>
    <td>C3204 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; cannot be called from within 
    a catch block</td>
  </tr>
  <tr>
    <td>C3205 </td>
    <td>argument list for template template parameter &#39;<span class="placeholder">parameter</span>&#39; 
    is missing</td>
  </tr>
  <tr>
    <td>C3206 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : member functions of nested 
    classes of a template class cannot be defined outside the class</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3220</span> </td>
    <td>&#39;<span class="placeholder">interface</span>&#39; : interface cannot have progid</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3221</span> </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : multiple &#39;default&#39; and &#39;case&#39; 
    attributes not allowed on a member</td>
  </tr>
  <tr>
    <td>C3222 </td>
    <td>&#39;<span class="placeholder">parameter</span>&#39; : cannot declare default arguments 
    for member functions of a managed type</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3240</span> </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : must be a non-overloaded pure 
    virtual member function of &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C3241 </td>
    <td>&#39;<span class="placeholder">method</span>&#39; : this method was not introduced 
    by &#39;<span class="placeholder">interface</span>&#39;</td>
  </tr>
  <tr>
    <td>C3242 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : you can only explicitly override 
    virtual functions</td>
  </tr>
  <tr>
    <td>C3243 </td>
    <td>none of the overload functions were introduced by &#39;<span class="placeholder">interface</span>&#39;</td>
  </tr>
  <tr>
    <td>C3244 </td>
    <td>&#39;<span class="placeholder">method</span>&#39; : this method was introduced by 
    &#39;<span class="placeholder">interface</span>&#39; not by &#39;<span class="placeholder">interface</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3245</span> </td>
    <td>&#39;<span class="placeholder">identifer</span>&#39; : the identifier after the 
    keyword &#39;super&#39; must be the same as current function</td>
  </tr>
  <tr>
    <td>C3246 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : cannot inherit from &#39;<span class="placeholder">X</span>&#39; 
    as it has been declared as &#39;__sealed&#39;</td>
  </tr>
  <tr>
    <td>C3247 </td>
    <td>&#39;<span class="placeholder">class1</span>&#39; : a coclass cannot inherit from 
    another coclass &#39;<span class="placeholder">class2</span>&#39;</td>
  </tr>
  <tr>
    <td>C3248 </td>
    <td>&#39;<span class="placeholder">function1</span>&#39;: function declared as &#39;__sealed&#39;; 
    cannot be overridden by &#39;<span class="placeholder">function2</span>&#39;</td>
  </tr>
  <tr>
    <td>C3249 </td>
    <td>&#39;<span class="placeholder">member</span>&#39;: explicit override has not been 
    defined in &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3250 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid base class for value 
    type &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C3251 </td>
    <td>cannot invoke base class method on a value type instance</td>
  </tr>
  <tr>
    <td>C3252 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : in a managed type you cannot 
    reduce the accessibility to a virtual method</td>
  </tr>
  <tr>
    <td>C3253 </td>
    <td>&#39;<span class="placeholder">managed type</span>&#39; : a managed type cannot 
    derive from an unmanaged type &#39;<span class="placeholder">unmanaged type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3254 </td>
    <td>&#39;<span class="placeholder">explicit override</span>&#39; : class contains explicit 
    override &#39;<span class="placeholder">override</span>&#39; but does not derive from 
    an interface that contains the function declaration</td>
  </tr>
  <tr>
    <td>C3255 </td>
    <td>&#39;<span class="placeholder">value type</span>&#39; : cannot dynamically allocate 
    a value type object with managed members on C++ (nogc) heap</td>
  </tr>
  <tr>
    <td>C3257 </td>
    <td>&#39;<span class="placeholder">object</span>&#39; : cannot create a temporary object 
    of a managed type</td>
  </tr>
  <tr>
    <td>C3258 </td>
    <td>managed operators must be declared using &#39;static op_&lt;Name&gt;&#39; form (&#39;operator&#39; 
    form is disallowed)</td>
  </tr>
  <tr>
    <td>C3259 </td>
    <td>&#39;<span class="placeholder">class2</span>&#39; : an explicitly unmanaged type 
    cannot derive from managed type &#39;<span class="placeholder">class1</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3260</span> </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : this class must provide an override 
    for the method &#39;<span class="placeholder">method</span>&#39;</td>
  </tr>
  <tr>
    <td>C3262 </td>
    <td>invalid array indexing: <span class="placeholder">#</span> dimension(s) 
    specified for <span class="placeholder">#</span>-dimensional &#39;<span class="placeholder">array 
    type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3263 </td>
    <td><span class="placeholder">classkey</span> &#39;<span class="placeholder">class</span>&#39; 
    defines both &#39;<span class="placeholder">method</span>&#39; and &#39;<span class="placeholder">method</span>&#39;; 
    use explicit function call to disambiguate the conversion</td>
  </tr>
  <tr>
    <td>C3264 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a class-constructor cannot have 
    a return type</td>
  </tr>
  <tr>
    <td>C3265 </td>
    <td>cannot declare a managed &#39;<span class="placeholder">managed construct</span>&#39; 
    in an unmanaged &#39;<span class="placeholder">unmanaged construct</span>&#39;</td>
  </tr>
  <tr>
    <td>C3266 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a class-constructor must have 
    a &#39;void&#39; parameter list</td>
  </tr>
  <tr>
    <td>C3267 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a class-constructor must be fully 
    defined within the enclosing class</td>
  </tr>
  <tr>
    <td>C3269 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : a member-function of a managed 
    type cannot be declared with &#39;...&#39;</td>
  </tr>
  <tr>
    <td><a href="c3270.htm">C3270</a> </td>
    <td>&#39;<span class="placeholder">field</span>&#39;: the FieldOffset attribute can 
    only be used in the context of StructLayout(Explicit), in which case it is required</td>
  </tr>
  <tr>
    <td><a href="c3271.htm">C3271</a> </td>
    <td>&#39;<span class="placeholder">member</span>&#39;: invalid value &#39;<span class="placeholder">value</span>&#39; 
    for the FieldOffset attribute</td>
  </tr>
  <tr>
    <td>C3273 </td>
    <td>&#39;<span class="placeholder">token</span>&#39; : not allowed on C++ try block</td>
  </tr>
  <tr>
    <td>C3274 </td>
    <td>__finally without matching try</td>
  </tr>
  <tr>
    <td>C3275 </td>
    <td>&#39;<span class="placeholder">enum member</span>&#39; : cannot use this symbol 
    without qualifier</td>
  </tr>
  <tr>
    <td>C3276 </td>
    <td>&#39;<span class="placeholder">keyword</span>&#39; : jump out of __finally block 
    has undefined behavior during termination handling</td>
  </tr>
  <tr>
    <td>C3277 </td>
    <td>cannot define an unmanaged enum &#39;<span class="placeholder">enum</span>&#39; 
    inside managed &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3278 </td>
    <td>direct call of interface method &#39;<span class="placeholder">interface method</span>&#39; 
    will fail at runtime</td>
  </tr>
  <tr>
    <td>C3280 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a member-function of a managed 
    type cannot be compiled as an unmanaged function</td>
  </tr>
  <tr>
    <td>C3281 </td>
    <td>&#39;<span class="placeholder">operator</span>&#39; : global operator cannot have 
    managed type &#39;<span class="placeholder">type</span>&#39; in signature</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3300</span> </td>
    <td>&#39;%s&#39;: improper format for IDL &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3301</span> </td>
    <td>&#39;%$S&#39;: coclass cannot be a &#39;%s&#39; interface</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3302</span> </td>
    <td>&#39;%s&#39;: identifier has more than %d characters</td>
  </tr>
  <tr>
    <td>C3303 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: attribute can only be used 
    on &#39;<span class="placeholder">usage</span>&#39;</td>
  </tr>
  <tr>
    <td>C3305 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: attribute usage is not allowed 
    on &#39;<span class="placeholder">construct</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3307</span> </td>
    <td>&#39;%$S&#39;: unable to create IDL module</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3308</span> </td>
    <td>&#39;%s&#39;: the alias of the function to be modified must be specified</td>
  </tr>
  <tr>
    <td>C3309 </td>
    <td>&#39;<span class="placeholder">macro_name</span>&#39;: module name cannot be a macro 
    or a keyword</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3310</span> </td>
    <td>&#39;%$pS&#39;: module name conflict</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3311</span> </td>
    <td>module attribute must be defined at global scope</td>
  </tr>
  <tr>
    <td>C3313 </td>
    <td>&#39;<span class="placeholder">classname</span>&#39;: not a supported IDL type</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3314</span> </td>
    <td>&#39;%$S&#39;: not a supported IDL module type</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3315</span> </td>
    <td>&#39;%$S&#39;: must be a member function</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3316</span> </td>
    <td>&#39;%s&#39;: requires attribute &#39;%s&#39; be defined</td>
  </tr>
  <tr>
    <td>C3317 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: is incompatible with attribute 
    &#39;<span class="placeholder">attribute</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3318</span> </td>
    <td>&#39;%s&#39;: has an illegal IDL version format</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3319</span> </td>
    <td>&#39;%s&#39;: attribute cannot be repeated</td>
  </tr>
  <tr>
    <td>C3320 </td>
    <td>&#39;<span class="placeholder">udt</span>&#39;: UDT cannot have same the name as 
    the module &#39;name&#39; property</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3321</span> </td>
    <td>&#39;%s&#39;: IDL symbol is multiply defined with different definitions</td>
  </tr>
  <tr>
    <td>C3322 </td>
    <td>&#39;<span class="placeholder">property</span>&#39;: is not a valid property for 
    attribute &#39;<span class="placeholder">attribute</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3323</span> </td>
    <td>&#39;%s&#39;: attribute cannot have values</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3324</span> </td>
    <td>&#39;%s&#39;: property occurs more than once in attribute &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3325</span> </td>
    <td>&#39;%s&#39;: attribute has too many arguments</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3326</span> </td>
    <td>&#39;%s&#39;: is not a valid value for property &#39;%s&#39; of attribute &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3327</span> </td>
    <td>&#39;%s&#39;: must specify value for property of attribute &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3328</span> </td>
    <td>&#39;%s&#39;: attribute does not have enough arguments</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3329</span> </td>
    <td>&#39;%s&#39;: requires attribute &#39;%s&#39; be defined on the enclosing class</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3330</span> </td>
    <td>&#39;%s&#39;: is incompatible with attribute &#39;%s&#39; on the enclosing class</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3331</span> </td>
    <td>&#39;%$I&#39;: attributes on parameters are only allowed on COM interfaces and coclasses</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3332</span> </td>
    <td>&#39;%s&#39;: grammar inconsistent, property &#39;%s&#39; is both required and has a default</td>
  </tr>
  <tr>
    <td>C3333 </td>
    <td>&#39;<span class="placeholder">type library</span>&#39;: cannot #import corrupt 
    type library</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3335</span> </td>
    <td>&#39;%$I&#39;: There can be at most one default interface for a coclass &#39;%$S&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3336</span> </td>
    <td>This operation must be performed at class scope</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3337</span> </td>
    <td>&#39;%$I&#39;: defaultvtable must be an event source for a coclass &#39;%$S&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3338</span> </td>
    <td>&#39;%$I&#39;: There can be at most one default interface that is also an event 
    source for a coclass &#39;%$S&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3339</span> </td>
    <td>&#39;%s&#39;: must be an interface in coclass &#39;%s&#39;</td>
  </tr>
  <tr>
    <td>C3340 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39;: interface cannot be both &#39;restricted&#39; 
    and &#39;default&#39; in coclass &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3341</span> </td>
    <td>&#39;%$S&#39;: a defaultvtable interface must be either &#39;dual&#39; or &#39;custom&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3342</span> </td>
    <td>&#39;%$I&#39;: ambiguous attribute</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3343</span> </td>
    <td>&#39;%s::%s&#39;: attribute identifier has too many characters</td>
  </tr>
  <tr>
    <td><span class="undocumented"><a href="c3344.htm">C3344</a></span> </td>
    <td>&#39;provider (<span class="placeholder">name</span>,
    <span class="placeholder">uuid</span>) has major version
    <span class="placeholder">ver1</span>, but c1xx needs it to be at least
    <span class="placeholder">ver2</span> -- please recompile</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3345</span> </td>
    <td>&#39;%s&#39;: invalid identifier for module name</td>
  </tr>
  <tr>
    <td>C3346 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: cannot assign values to this 
    attribute</td>
  </tr>
  <tr>
    <td>C3347 </td>
    <td>&#39;<span class="placeholder">arg</span>&#39;: required argument is not specified 
    in attribute <span class="placeholder">attribute</span></td>
  </tr>
  <tr>
    <td><span class="undocumented">C3349</span> </td>
    <td>&#39;%s::%s&#39;: multicast attribute has already been implemented by provider %s</td>
  </tr>
  <tr>
    <td>C3350 </td>
    <td>&#39;<span class="placeholder">delegate</span>&#39; : a delegate constructor expects 
    two arguments</td>
  </tr>
  <tr>
    <td>C3351 </td>
    <td>&#39;<span class="placeholder">object</span>&#39; : if you pass a NULL object instance 
    to a delegate constructor you must also pass the address of a static member 
    function</td>
  </tr>
  <tr>
    <td>C3352 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : the specified function does 
    not match the delegate type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3353 </td>
    <td>&#39;<span class="placeholder">delegate</span>&#39; : a delegate can only be created 
    from a global function or a member function of a managed type</td>
  </tr>
  <tr>
    <td>C3354 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : the function used to create 
    a delegate cannot have return type &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3355</span> </td>
    <td>&#39;%s::%s&#39;: multicast attribute listens to provider &#39;%s&#39;, but is implemented 
    by provider &#39;%s&#39;</td>
  </tr>
  <tr>
    <td>C3356 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: cannot call a multicast attribute 
    with a fully qualified name</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3357</span> </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: attribute is ambiguous, must 
    use fully qualified name</td>
  </tr>
  <tr>
    <td>C3358 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39;: symbol not found</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3359</span> </td>
    <td>&#39;<span class="placeholder">template</span>&#39;: cannot specialize template</td>
  </tr>
  <tr>
    <td><a href="c3360.htm">C3360</a> </td>
    <td>&#39;<span class="placeholder">string</span>&#39;: cannot create
    <span class="placeholder">name</span></td>
  </tr>
  <tr>
    <td><span class="undocumented">C3361</span> </td>
    <td>there is no context in which to %s</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3362</span> </td>
    <td>&#39;%s::%s&#39;: multicast attribute has not been implemented</td>
  </tr>
  <tr>
    <td>C3363 </td>
    <td>&#39;<span class="placeholder">global function</span>&#39; : cannot create a delegate 
    handler for &#39;<span class="placeholder">delegate</span>&#39; from a non-member function 
    or a member of an unmanaged class</td>
  </tr>
  <tr>
    <td>C3364 </td>
    <td>&#39;<span class="placeholder">delegate</span>&#39; : invalid second argument for 
    delegate constructor; needs to be a pointer to a member function</td>
  </tr>
  <tr>
    <td>C3365 </td>
    <td>&#39;<span class="placeholder">method</span>&#39; : delegates on non-interface methods 
    of value types are not supported</td>
  </tr>
  <tr>
    <td>C3366 </td>
    <td>&#39;<span class="placeholder">variable</span>&#39; : static data members of managed 
    types must be defined within the class definition</td>
  </tr>
  <tr>
    <td>C3368 </td>
    <td>&#39;<span class="placeholder">function declaration</span>&#39; : invalid calling 
    convention for IDL</td>
  </tr>
  <tr>
    <td>C3369 </td>
    <td>&#39;<span class="placeholder">module name</span>&#39;: idl_module already defined</td>
  </tr>
  <tr>
    <td>C3370 </td>
    <td>&#39;<span class="placeholder">idl_module name</span>&#39;: idl_module not yet defined</td>
  </tr>
  <tr>
    <td>C3371 </td>
    <td>&#39;idl_module&#39;: only the &#39;name&#39; property is allowed here</td>
  </tr>
  <tr>
    <td>C3372 </td>
    <td>must specify at least 1 interface for attribute &#39;<span class="placeholder">source</span>&#39; 
    on a coclass</td>
  </tr>
  <tr>
    <td>C3373 </td>
    <td>attribute &#39;<span class="placeholder">attribute</span>&#39; takes no arguments 
    except on a coclass</td>
  </tr>
  <tr>
    <td>C3374 </td>
    <td>Illegal use of managed function with no arguments</td>
  </tr>
  <tr>
    <td>C3375 </td>
    <td>Cannot explicitly inherit &#39;<span class="placeholder">object</span>&#39; from 
    System::Delegate or System::MulticastDelegate</td>
  </tr>
  <tr>
    <td>C3376 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : type is inaccessible</td>
  </tr>
  <tr>
    <td>C3377 </td>
    <td>&#39;<span class="placeholder">method</span>&#39; : cannot import method - a parameter 
    type or the return type is inaccessible</td>
  </tr>
  <tr>
    <td>C3378 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : cannot import field - the type 
    is inaccessible</td>
  </tr>
  <tr>
    <td>C3379 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : a nested class cannot have an 
    assembly access specifier as part of its declaration</td>
  </tr>
  <tr>
    <td>C3380 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : invalid assembly access specifier 
    - only &#39;public&#39; or &#39;private&#39; are allowed</td>
  </tr>
  <tr>
    <td>C3381 </td>
    <td>&#39;<span class="placeholder">class</span>&#39; : an assembly access specifier 
    can only be applied to a managed type</td>
  </tr>
  <tr>
    <td>C3383 </td>
    <td>&#39;<span class="placeholder">function</span>&#39; : in an unmanaged class, a virtual 
    member function cannot have a managed type in the signature</td>
  </tr>
  <tr>
    <td>C3385 </td>
    <td>&#39;<span class="placeholder">class::function</span>&#39; : a function that has 
    a DllImport Custom Attribute cannot return an instance of a class</td>
  </tr>
  <tr>
    <td>C3386 </td>
    <td>&#39;<span class="placeholder">type</span>&#39; : __declspec(dllexport)/__declspec(dllimport) 
    cannot be applied to a managed type</td>
  </tr>
  <tr>
    <td>C3387 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : __declspec(dllexport)/__declspec(dllimport) 
    cannot be applied to a member of a managed type</td>
  </tr>
  <tr>
    <td>C3400 </td>
    <td>&#39;<span class="placeholder">char</span>&#39;: unexpected token/character encountered 
    in attribute block</td>
  </tr>
  <tr>
    <td>C3401 </td>
    <td>&#39;<span class="placeholder">structure</span>&#39;: cannot resolve export</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3402</span> </td>
    <td>&#39;%s&#39;: cannot resolve overload except in the current scope</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3403</span> </td>
    <td>&#39;%$L&#39;: unexpected token encountered for attribute value</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3404</span> </td>
    <td>&#39;%s&#39;: unexpected syntax error</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3405</span> </td>
    <td>&#39;%s&#39;: cannot resolve overload without complete descriptor</td>
  </tr>
  <tr>
    <td>C3406 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: empty attribute argument list 
    is not allowed</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3407</span> </td>
    <td>&#39;%$I&#39;: empty attribute argument is not allowed</td>
  </tr>
  <tr>
    <td>C3408 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: attribute is not allowed on 
    template definitions</td>
  </tr>
  <tr>
    <td>C3409 </td>
    <td>empty attribute block is not allowed</td>
  </tr>
  <tr>
    <td>C3410 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: attribute requires &#39;<span class="placeholder">attributes</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3411</span> </td>
    <td>&#39;%s&#39;: attribute requires &#39;%s&#39; on the enclosing class</td>
  </tr>
  <tr>
    <td>C3500 </td>
    <td>invalid ProgID &#39;<span class="placeholder">progid</span>&#39;</td>
  </tr>
  <tr>
    <td>C3501 </td>
    <td>there is no typelib registered for ProgID &#39;<span class="placeholder">progid</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3502</span> </td>
    <td>cannot obtain LIBID for ProgID &#39;<span class="placeholder">progid</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3503</span> </td>
    <td>cannot obtain version for ProgID &#39;<span class="placeholder">progid</span>&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3504</span> </td>
    <td>cannot create GUID from string &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3505</span> </td>
    <td>cannot load type library &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3506</span> </td>
    <td>there is no typelib registered for LIBID &#39;%s&#39;</td>
  </tr>
  <tr>
    <td>C3507 </td>
    <td>a ProgID can have no more than 39 characters &#39;<span class="placeholder">id</span>&#39;; 
    nor contain any punctuation apart from &#39;.&#39;; nor start with a digit</td>
  </tr>
  <tr>
    <td>C3508 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: is not a valid Automation type</td>
  </tr>
  <tr>
    <td>C3509 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: invalid Automation return type; 
    when a parameter is marked &#39;retval&#39;, the return type must be &#39;void&#39;, &#39;HRESULT&#39; 
    or &#39;SCODE&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3520</span> </td>
    <td>&#39;%s&#39;: attribute argument not found for attribute &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3522</span> </td>
    <td>&#39;%s&#39;: invalid value for attribute &#39;required_entries&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3524</span> </td>
    <td>&#39;%s&#39;: required entry not found for attribute &#39;%s&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3600</span> </td>
    <td>unions are not allowed</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3601</span> </td>
    <td>templates are not allowed</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3602</span> </td>
    <td>&#39;%s&#39;: a __gc type object cannot be passed by value</td>
  </tr>
  <tr>
    <td>C3603 </td>
    <td>&#39;<span class="placeholder">Symbol</span>&#39;: type &#39;<span class="placeholder">Type</span>&#39; 
    not yet supported</td>
  </tr>
  <tr>
    <td>C3604 </td>
    <td>&#39;<span class="placeholder">object</span>&#39;: can only create a __gc type object 
    on the __gc heap</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3605</span> </td>
    <td>cannot be both &#39;%$M&#39; and &#39;%$M&#39;</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3606</span> </td>
    <td>&#39;%$I&#39;: a &#39;%$M&#39; cannot be &#39;%$M&#39;</td>
  </tr>
  <tr>
    <td>C3607 </td>
    <td>&#39;<span class="placeholder">calling convention</span>&#39;: calling convention 
    unavailable</td>
  </tr>
  <tr>
    <td>C3608 </td>
    <td>cannot apply sizeof to a __gc array</td>
  </tr>
  <tr>
    <td>C3609 </td>
    <td>&#39;<span class="placeholder">element</span>&#39;: &#39;__sealed&#39; can only be used 
    on __gc classes and non-pure virtual functions of a __gc class</td>
  </tr>
  <tr>
    <td>C3610 </td>
    <td>&#39;<span class="placeholder">valuetype</span>&#39;: value type must be &#39;boxed&#39; 
    before method &#39;<span class="placeholder">method</span>&#39; can be called</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3611</span> </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: cannot use reinterpret_cast on 
    a managed type</td>
  </tr>
  <tr>
    <td>C3613 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39;: symbol must be &#39;managed&#39; in this 
    context</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3615</span> </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: invalid target type for cast</td>
  </tr>
  <tr>
    <td>C3616 </td>
    <td>&#39;<span class="placeholder">number</span>&#39;: a size cannot be specified in 
    a __gc array declaration</td>
  </tr>
  <tr>
    <td>C3618 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: a method marked DllImport cannot 
    be defined</td>
  </tr>
  <tr>
    <td>C3619 </td>
    <td>a template cannot be declared within a managed type</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3620</span> </td>
    <td>error processing file: &#39;%s&#39; at line %d</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3621</span> </td>
    <td>cannot redefine imported class &#39;%$S&#39;</td>
  </tr>
  <tr>
    <td>C3622 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: a class declared as &#39;__abstract&#39; 
    cannot be instantiated</td>
  </tr>
  <tr>
    <td>C3623 </td>
    <td>&#39;<span class="placeholder">variable</span>&#39;: bit fields are not supported</td>
  </tr>
  <tr>
    <td>C3624 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: the compiler cannot find this 
    type; it is defined in the %$M &#39;%s&#39;</td>
  </tr>
  <tr>
    <td>C3625 </td>
    <td>&#39;<span class="placeholder">unmanaged type</span>&#39;: an unmanaged type cannot 
    derive from a managed type &#39;<span class="placeholder">unmanaged class</span>&#39;</td>
  </tr>
  <tr>
    <td>C3626 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39;: &#39;__event&#39; keyword can only 
    be used on COM interfaces, member functions and data members that are pointers 
    to delegates</td>
  </tr>
  <tr>
    <td>C3627 </td>
    <td>Only a value type can be boxed</td>
  </tr>
  <tr>
    <td>C3628 </td>
    <td>&#39;<span class="placeholder">base class</span>&#39;: managed classes only support 
    public inheritance</td>
  </tr>
  <tr>
    <td>C3629 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: a class that is declared as &#39;__abstract&#39; 
    cannot be a value type nor can it be declared as &#39;__sealed&#39;</td>
  </tr>
  <tr>
    <td>C3630 </td>
    <td>error when processing the token &#39;<span class="placeholder">token</span>&#39;</td>
  </tr>
  <tr>
    <td>C3631 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: cannot overload managed events</td>
  </tr>
  <tr>
    <td>C3632 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: illegal style of event for %$M</td>
  </tr>
  <tr>
    <td>C3633 </td>
    <td>cannot define &#39;<span class="placeholder">member</span>&#39; as a member of managed 
    &#39;<span class="placeholder">type</span>&#39;</td>
  </tr>
  <tr>
    <td>C3634 </td>
    <td>&#39;<span class="placeholder">method</span>&#39; : cannot define a pure virtual 
    method of a managed class</td>
  </tr>
  <tr>
    <td>C3636 </td>
    <td>The type &#39;<span class="placeholder">type</span>&#39; is inaccessible or undefined 
    in &#39;<span class="placeholder">file</span>&#39;</td>
  </tr>
  <tr>
    <td>C3701 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: event source has no events</td>
  </tr>
  <tr>
    <td>C3702 </td>
    <td>ATL is required for COM events</td>
  </tr>
  <tr>
    <td>C3703 </td>
    <td>&#39;<span class="placeholder">event handler</span>&#39;: an event handler method 
    must have the same storage class as the source &#39;<span class="placeholder">event</span>&#39;</td>
  </tr>
  <tr>
    <td>C3704 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: a vararg method cannot fire 
    events</td>
  </tr>
  <tr>
    <td>C3705 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: cannot find eventing interface</td>
  </tr>
  <tr>
    <td>C3706 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: must be a COM interface to 
    fire COM events</td>
  </tr>
  <tr>
    <td>C3707 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: dispinterface method must have 
    a dispid</td>
  </tr>
  <tr>
    <td>C3708 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39;: improper use of __event; must 
    be a member of a compatible event source</td>
  </tr>
  <tr>
    <td>C3709 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: improper syntax for specifying 
    event in __hook/__unhook</td>
  </tr>
  <tr>
    <td>C3710 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: improper syntax for specifying 
    event handler in __hook/__unhook</td>
  </tr>
  <tr>
    <td>C3711 </td>
    <td>&#39;<span class="placeholder">method</span>&#39;: a non-managed event source method 
    must return void or an integral type</td>
  </tr>
  <tr>
    <td>C3712 </td>
    <td>&#39;<span class="placeholder">method</span>&#39;: an event handler method must 
    return the same type as the source &#39;<span class="placeholder">method</span>&#39;</td>
  </tr>
  <tr>
    <td>C3713 </td>
    <td>&#39;<span class="placeholder">method</span>&#39;: an event handler method must 
    have the same function parameters as the source &#39;<span class="placeholder">method</span>&#39;</td>
  </tr>
  <tr>
    <td>C3714 </td>
    <td>&#39;<span class="placeholder">method</span>&#39;: an event handler method must 
    have the same calling convention as the source &#39;<span class="placeholder">method</span>&#39;</td>
  </tr>
  <tr>
    <td>C3715 </td>
    <td>&#39;<span class="placeholder">pointer</span>&#39;: must be a pointer to &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C3716 </td>
    <td>&#39;<span class="placeholder">method</span>&#39;: improper syntax for
    <span class="placeholder">method</span></td>
  </tr>
  <tr>
    <td>C3717 </td>
    <td>&#39;<span class="placeholder">method</span>&#39;: a method that fires events cannot 
    be defined</td>
  </tr>
  <tr>
    <td>C3718 </td>
    <td>can only call &#39;__<span class="placeholder">event</span>&#39; in the context 
    of a member function of the receiving class</td>
  </tr>
  <tr>
    <td>C3719 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39;: an interface based event source 
    can only be used for COM events</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3720</span> </td>
    <td>&#39;<span class="placeholder">interface</span>&#39;: can only implement IDispatch 
    on a dual or dispinterface</td>
  </tr>
  <tr>
    <td>C3721 </td>
    <td>&#39;<span class="placeholder">signature</span>&#39;: incompatible signature for 
    event</td>
  </tr>
  <tr>
    <td>C3723 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: could not resolve event</td>
  </tr>
  <tr>
    <td>C3724 </td>
    <td>must #include &lt;windows.h&gt; to use multi-threading with events</td>
  </tr>
  <tr>
    <td>C3725 </td>
    <td>&#39;<span class="placeholder">attribute class</span>&#39;: cannot resolve attribute 
    overload</td>
  </tr>
  <tr>
    <td>C3726 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: cannot resolve attribute usage 
    &#39;<span class="placeholder">usage</span>&#39;</td>
  </tr>
  <tr>
    <td>C3727 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: a managed event must be a member 
    function or a data member that is a pointer to a delegate</td>
  </tr>
  <tr>
    <td>C3728 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: event does not have a raise method</td>
  </tr>
  <tr>
    <td>C3729 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: is not managed; a custom attribute 
    &#39;<span class="placeholder">attribute</span>&#39; can only be applied to a managed 
    type</td>
  </tr>
  <tr>
    <td>C3730 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: an event must have both an add 
    and a remove method</td>
  </tr>
  <tr>
    <td>C3731 </td>
    <td>incompatible event &#39;<span class="placeholder">function1</span>&#39; and handler 
    &#39;<span class="placeholder">function2</span>&#39;; event source and event handler 
    must have the same event type</td>
  </tr>
  <tr>
    <td>C3732 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39;: a custom interface that fires 
    COM events cannot inherit from IDispatch</td>
  </tr>
  <tr>
    <td>C3733 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: improper syntax for specifying 
    a COM event; did you forget &#39;__interface&#39;?</td>
  </tr>
  <tr>
    <td>C3734 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: a managed class cannot be a coclass</td>
  </tr>
  <tr>
    <td><a href="c3735.htm">C3735</a> </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: managed only attribute</td>
  </tr>
  <tr>
    <td>C3736 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: must be a method or, in the case 
    of managed events, optionally a data member</td>
  </tr>
  <tr>
    <td>C3737 </td>
    <td>&#39;<span class="placeholder">delegate</span>&#39;: a delegate may not have an 
    explicit calling convention</td>
  </tr>
  <tr>
    <td>C3738 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: custom attribute class does not 
    have any public constructors</td>
  </tr>
  <tr>
    <td>C3739 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: syntax is only supported when 
    the &#39;layout_dependent&#39; parameter of event_receiver is true</td>
  </tr>
  <tr>
    <td>C3740 </td>
    <td>&#39;<span class="placeholder">template</span>&#39;: templates cannot source or 
    receive events</td>
  </tr>
  <tr>
    <td>C3741 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: must be a coclass when the &#39;layout_dependent&#39; 
    parameter of event_receiver is true</td>
  </tr>
  <tr>
    <td>C3742 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: could not convert to System::Type*</td>
  </tr>
  <tr>
    <td>C3743 </td>
    <td>can only hook/unhook an entire interface when the &#39;layout_dependent&#39; parameter 
    of event_receiver is true</td>
  </tr>
  <tr>
    <td>C3744 </td>
    <td>__unhook must have at least 3 arguments for managed events</td>
  </tr>
  <tr>
    <td>C3745 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: only an event can be &#39;raised&#39;</td>
  </tr>
  <tr>
    <td>C3746 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: only custom attributes can 
    be used on assemblies or modules</td>
  </tr>
  <tr>
    <td>C3747 </td>
    <td>missing or misplaced default template parameter</td>
  </tr>
  <tr>
    <td>C3748 </td>
    <td>&#39;<span class="placeholder">interface</span>&#39;: unmanaged interfaces may not 
    fire events</td>
  </tr>
  <tr>
    <td>C3749 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: a custom attribute may not 
    be used inside a function</td>
  </tr>
  <tr>
    <td>C3750 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: a custom attribute may not 
    be used in an anonymous attribute block unless it is scoped for assembly or 
    module</td>
  </tr>
  <tr>
    <td>C3751 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: &#39;__assembly&#39; or &#39;__module&#39; 
    attribute qualifiers can only be used in anonymous attribute blocks</td>
  </tr>
  <tr>
    <td>C3752 </td>
    <td>&#39;<span class="placeholder">attribute class</span>&#39;: cannot classify attribute; 
    &#39;<span class="placeholder">keyword</span>&#39; should not be used in this context</td>
  </tr>
  <tr>
    <td>C3753 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: a pure virtual function may 
    not be used to create a delegate</td>
  </tr>
  <tr>
    <td>C3754 </td>
    <td>&#39;<span class="placeholder">called</span>&#39;: cannot be called through a variable 
    of type &#39;<span class="placeholder">pointer</span>&#39;</td>
  </tr>
  <tr>
    <td>C3755 </td>
    <td>&#39;<span class="placeholder">delegate</span>&#39;: a delegate may not be defined</td>
  </tr>
  <tr>
    <td>C3756 </td>
    <td>&#39;<span class="placeholder">name</span>&#39;: delegate definition conflicts with 
    an existing symbol</td>
  </tr>
  <tr>
    <td>C3757 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: an event may only be accessed 
    in the context of add_<span class="placeholder">E</span>, remove_<span class="placeholder">E</span> 
    or raise_<span class="placeholder">E</span></td>
  </tr>
  <tr>
    <td>C3758 </td>
    <td>&#39;<span class="placeholder">attribute</span>&#39;: attribute name is reserved</td>
  </tr>
  <tr>
    <td>C3759 </td>
    <td>&#39;<span class="placeholder">attribute class</span>&#39;: a custom attribute that 
    applies to a class member must be applied to the in-class declaration</td>
  </tr>
  <tr>
    <td><span class="undocumented"><a href="c3760.htm">C3760</a></span> </td>
    <td>please use __property keyword to declare property in managed &#39;<span class="placeholder">class</span>&#39;</td>
  </tr>
  <tr>
    <td>C3761 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: &#39;retval&#39; can only appear on 
    the last argument of a function</td>
  </tr>
  <tr>
    <td>C3762 </td>
    <td>unable to process attribute &#39;<span class="placeholder">attribute</span>&#39;</td>
  </tr>
  <tr>
    <td>C3763 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: &#39;retval&#39; and &#39;out&#39; can only appear 
    on a data-pointer type</td>
  </tr>
  <tr>
    <td>C3764 </td>
    <td>&#39;<span class="placeholder">constructor</span>&#39;: a delegate constructor cannot 
    accept a pointer to a value type &#39;<span class="placeholder">type</span>&#39; as 
    its first parameter</td>
  </tr>
  <tr>
    <td>C3765 </td>
    <td>&#39;<span class="placeholder">event</span>&#39;: cannot define an event in a class/struct 
    &#39;<span class="placeholder">type</span>&#39; marked as an event_receiver</td>
  </tr>
  <tr>
    <td>C3800 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39;: cannot mix properties and 
    events</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3801</span> </td>
    <td>&#39;<span class="placeholder">token</span>&#39;: unexpected token, expected either 
    &#39;{&#39; or &#39;;&#39;</td>
  </tr>
  <tr>
    <td>C3802 </td>
    <td>&#39;<span class="placeholder">name</span>&#39;: invalid name for a property</td>
  </tr>
  <tr>
    <td>C3803 </td>
    <td>&#39;<span class="placeholder">property</span>&#39;: property has a type which is 
    incompatible with one of its accessors &#39;<span class="placeholder">accessor</span>&#39;</td>
  </tr>
  <tr>
    <td>C3805 </td>
    <td>&#39;<span class="placeholder">token</span>&#39;: unexpected token, expected either 
    &#39;}&#39; or a &#39;,&#39;</td>
  </tr>
  <tr>
    <td>C3806 </td>
    <td>&#39;<span class="placeholder">property</span>&#39;: either a &#39;<span class="placeholder">get</span>&#39; 
    method and/or a &#39;<span class="placeholder">set</span>&#39; method must be associated 
    with this property</td>
  </tr>
  <tr>
    <td>C3807 </td>
    <td>unexpected &#39;<span class="placeholder">character</span>&#39;: did you forget 
    a &#39;;&#39;?</td>
  </tr>
  <tr>
    <td>C3809 </td>
    <td>&#39;<span class="placeholder">structure</span>&#39;: a managed type cannot have 
    any friend functions/classes/interfaces</td>
  </tr>
  <tr>
    <td><span class="undocumented">C3810</span> </td>
    <td>&#39;<span class="placeholder">interface</span>&#39;: only public inheritance of 
    an interface is allowed</td>
  </tr>
  <tr>
    <td>C3811 </td>
    <td>property methods &#39;<span class="placeholder">get_accessor</span>&#39; and &#39;<span class="placeholder">set_accessor</span>&#39; 
    must agree on their &#39;static&#39; specifier</td>
  </tr>
  <tr>
    <td>C3812 </td>
    <td>&#39;__property&#39; must be the first token in a property declaration</td>
  </tr>
  <tr>
    <td>C3813 </td>
    <td>a property declaration can only appear within the definition of a managed 
    type</td>
  </tr>
  <tr>
    <td>C3814 </td>
    <td>&#39;<span class="placeholder">class member</span>&#39;: this member cannot co-exist 
    with a property of the same name</td>
  </tr>
  <tr>
    <td>C3815 </td>
    <td>return type of method &#39;<span class="placeholder">get accessor</span>&#39; must 
    match type of the last parameter of &#39;<span class="placeholder">set accessor</span>&#39;</td>
  </tr>
  <tr>
    <td>C3816 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39;: forward declarations and/or 
    definitions do not have the same attribute &#39;<span class="placeholder">attribute</span>&#39;</td>
  </tr>
  <tr>
    <td>C3817 </td>
    <td>&#39;<span class="placeholder">declaration</span>&#39;: property can only be applied 
    to a function</td>
  </tr>
  <tr>
    <td>C3818 </td>
    <td>array property declaration &#39;<span class="placeholder">property1</span>&#39; 
    shall not overload an index property &#39;<span class="placeholder">property2</span>&#39;</td>
  </tr>
  <tr>
    <td>C3819 </td>
    <td>wrong number of parameters in &#39;<span class="placeholder">property</span>&#39;</td>
  </tr>
  <tr>
    <td>C3820 </td>
    <td>&#39;<span class="placeholder">construct</span>&#39;: not accessible outside the 
    assembly</td>
  </tr>
  <tr>
    <td>C3821 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: managed type cannot be used 
    in an unmanaged function</td>
  </tr>
  <tr>
    <td>C3822 </td>
    <td>&#39;<span class="placeholder">property</span>&#39;: name of the property method 
    must start with &#39;get_&#39; or &#39;set_&#39;</td>
  </tr>
  <tr>
    <td>C3823 </td>
    <td>&#39;__pin&#39;: storage class modifier can only be applied to a pointer</td>
  </tr>
  <tr>
    <td>C3824 </td>
    <td>&#39;<span class="placeholder">pointer</span>&#39;: only non-static local pointers 
    may be declared as pinned</td>
  </tr>
  <tr>
    <td>C3825 </td>
    <td>&#39;<span class="placeholder">class</span>&#39;: a managed class can only support 
    managed events</td>
  </tr>
  <tr>
    <td>C3826 </td>
    <td>&#39;<span class="placeholder">identifier</span>&#39;: declaring pinned formal parameters 
    is illegal</td>
  </tr>
  <tr>
    <td>C3827 </td>
    <td>&#39;<span class="placeholder">type3</span>&#39; : cannot have both a managed base 
    &#39;<span class="placeholder">type1</span>&#39; and an unmanaged base &#39;<span class="placeholder">type2</span>&#39;</td>
  </tr>
  <tr>
    <td>C3828 </td>
    <td>&#39;<span class="placeholder">object type</span>&#39;: placement arguments not 
    allowed while creating instances of managed classes</td>
  </tr>
  <tr>
    <td>C3830 </td>
    <td>&#39;<span class="placeholder">type</span>&#39;: value types cannot have a base 
    class</td>
  </tr>
  <tr>
    <td>C3831 </td>
    <td>&#39;<span class="placeholder">member</span>&#39;: &#39;<span class="placeholder">class</span>&#39; 
    cannot have a pinned data member or a member function returning a pinning pointer</td>
  </tr>
  <tr>
    <td>C3832 </td>
    <td>&#39;<span class="placeholder">type library</span>&#39;: type library looks as if 
    it was built for 32-bit pointers; please change the &#39;ptrsize&#39; qualifier</td>
  </tr>
  <tr>
    <td>C3833 </td>
    <td>&#39;operator <span class="placeholder">notation</span>&#39; cannot be called as 
    a member function of a managed class or valuetype; use &#39;<span class="placeholder">operator 
    symbol</span>&#39; as an infix operator or use the static member function &#39;<span class="placeholder">operator 
    function</span>&#39;</td>
  </tr>
  <tr>
    <td>C3834 </td>
    <td>illegal explicit cast to a pinning pointer; use a pinned local variable 
    instead</td>
  </tr>
  <tr>
    <td>C3836 </td>
    <td>static constructor is not allowed to have a member initializer list</td>
  </tr>
  <tr>
    <td>C3838 </td>
    <td>cannot explicitly inherit from System.ValueType</td>
  </tr>
  <tr>
    <td>C3839 </td>
    <td>cannot change alignment in a managed type</td>
  </tr>
  <tr>
    <td>C3840 </td>
    <td>declaration of &#39;<span class="placeholder">method</span>&#39; not allowed; use 
    destructors to implement finalization</td>
  </tr>
  <tr>
    <td>C3841 </td>
    <td>illegal delete expression: managed type &#39;<span class="placeholder">type</span>&#39; 
    does not have a destructor defined</td>
  </tr>
  <tr>
    <td>C3842 </td>
    <td>&#39;<span class="placeholder">function</span>&#39;: &#39;const&#39; and &#39;volatile&#39; qualifiers 
    on member functions of managed types are not supported</td>
  </tr>
  <tr>
    <td>C3844 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : cannot import symbol from &#39;<span class="placeholder">assembly</span>&#39;: 
    as &#39;<span class="placeholder">symbol</span>&#39; already exists in the current scope</td>
  </tr>
  <tr>
    <td>C3845 </td>
    <td>&#39;<span class="placeholder">member</span>&#39; : only static data members can 
    be initialized inside a __gc class or value type</td>
  </tr>
  <tr>
    <td>C3846 </td>
    <td>&#39;<span class="placeholder">symbol</span>&#39; : cannot import symbol from &#39;<span class="placeholder">assembly2</span>&#39;: 
    as &#39;<span class="placeholder">symbol</span>&#39; has already been imported from 
    another assembly &#39;<span class="placeholder">assembly1</span>&#39;</td>
  </tr>
</table>
<div class="Footer">
  <!--webbot bot="Include" U-Include="../../../_include/c0609.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2006-2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62552" endspan -->
</div>

</body>

</html>

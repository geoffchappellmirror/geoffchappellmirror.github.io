<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>MI_VISIBLE_STATE</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>MI_VISIBLE_STATE </h1>
  <p>The <span class="struct">MI_VISIBLE_STATE</span> structure is known only as 
  the type of the <span class="member">Vs</span> member of the
  <span class="struct"><a href="mi_system_information.htm">MI_SYSTEM_INFORMATION</a></span>, 
  which is in turn the type of the internal kernel variable
  <span class="variable">MiState</span> in Windows 10. </p>
  <p>As a collection of what earlier versions had as separately named internal variables, 
  the <span class="struct">MI_VISIBLE_STATE</span> is highly susceptible to changing 
  between builds. </p>
  <table class="Sizes">
    <colgroup>
      <col class="Version"><col class="Size" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Version </th>
        <th>Size (x86) </th>
        <th>Size (x64) </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>10.0 to 1511 </td>
        <td>0x0840 </td>
        <td>0x0640 </td>
      </tr>
      <tr>
        <td>1607 </td>
        <td>0x0880 </td>
        <td>0x0840 </td>
      </tr>
      <tr>
        <td>1703 </td>
        <td>0x0880 </td>
        <td>0x0900 </td>
      </tr>
      <tr>
        <td>1709 </td>
        <td>0x08C0 </td>
        <td>0x0900 </td>
      </tr>
      <tr>
        <td>1803 to 1809 </td>
        <td>0x0A80 </td>
        <td>0x0C40 </td>
      </tr>
      <tr>
        <td>1903 </td>
        <td>0x0CC0 </td>
        <td>0x0C80 </td>
      </tr>
      <tr>
        <td>2004 </td>
        <td>0x0CC0 </td>
        <td>0x0CC0 </td>
      </tr>
    </tbody>
  </table>
  <p>These sizes and the names and types in the table below are from type information 
  in the public symbol files for the kernel. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 (10.0 to 1809) </td>
        <td>0x00 (10.0 to 1809) </td>
        <td>
        <pre class="source">MI_SPECIAL_POOL SpecialPool;</pre>
        </td>
        <td>10.0 to 1809 </td>
      </tr>
      <tr>
        <td>0x48 (10.0 to 1607); <br>
        0x40 (1703 to 1809); <br>
        0x00 </td>
        <td>0x50 (10.0 to 1607); <br>
        0x40 (1703 to 1809); <br>
        0x00 </td>
        <td>
        <pre class="source">LIST_ENTRY SessionWsList;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x50 (10.0 to 1607); <br>
        0x48 (1703 to 1809); <br>
        0x08 </td>
        <td>0x60 (10.0 to 1607); <br>
        0x50 (1703 to 1809); <br>
        0x10 </td>
        <td>
        <pre class="source">RTL_BITMAP *SessionIdBitmap;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x54 (10.0 to 1607); <br>
        0x4C (1703 to 1809); <br>
        0x0C </td>
        <td>0x68 (10.0 to 1607); <br>
        0x58 (1703 to 1809); <br>
        0x18 </td>
        <td>
        <pre class="source">MM_PAGED_POOL_INFO PagedPoolInfo;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x70 (10.0 to 1607); <br>
        0x68 (1703 to 1809); <br>
        0x18 </td>
        <td>0xA0 (10.0 to 1607); <br>
        0x90 (1703 to 1809); <br>
        0x30 </td>
        <td>
        <pre class="source">ULONG_PTR MaximumNonPagedPoolInPages;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x74 (10.0 to 1607); <br>
        0x6C (1703 to 1809); <br>
        0x1C </td>
        <td>0xA8 (10.0 to 1607); <br>
        0x98 (1703 to 1809); <br>
        0x38 </td>
        <td>
        <pre class="source">ULONG_PTR SizeOfPagedPoolInPages;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x78 (10.0 to 1607); <br>
        0x70 (1703 to 1809); <br>
        0x20 </td>
        <td>0xB0 (10.0 to 1607); <br>
        0xA0 (1703 to 1809); <br>
        0x40 </td>
        <td>
        <pre class="source">MI_SYSTEM_PTE_TYPE SystemPteInfo;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0xAC (10.0 to 1511); <br>
        0xB0 (1607); <br>
        0xA8 (1703 to 1709); <br>
        0xA4 (1803 to 1809); <br>
        0x54 </td>
        <td>0x0110 (10.0 to 1511); <br>
        0x0118 (1607); <br>
        0x0108 (1703 to 1709); <br>
        0x0100 (1803 to 1809); <br>
        0xA0 </td>
        <td>
        <pre class="source">ULONG_PTR volatile NonPagedPoolCommit;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0xAC (1607 to 1709); <br>
        0xA8 (1803 to 1809); <br>
        0x58 </td>
        <td>0x0110 (1607 to 1709); <br>
        0x0108 (1803 to 1809); <br>
        0xA8 </td>
        <td>
        <pre class="source">ULONG_PTR volatile SmallNonPagedPtesCommit;</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td>0xB0 (10.0 to 1511); <br>
        0xB4 (1607); <br>
        0xB0 (1703 to 1709); <br>
        0xAC (1803 to 1809); <br>
        0x5C </td>
        <td>0x0118 (10.0 to 1511); <br>
        0x0120 (1607); <br>
        0x0118 (1703 to 1709); <br>
        0x0110 (1803 to 1809); <br>
        0xB0 </td>
        <td>
        <pre class="source">ULONG_PTR volatile BootCommit;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0xB4 (10.0 to 1511); <br>
        0xB8 (1607); <br>
        0xB4 (1703 to 1709); <br>
        0xB0 (1803 to 1809); <br>
        0x60 </td>
        <td>0x0120 (10.0 to 1511); <br>
        0x0128 (1607); <br>
        0x0120 (1703 to 1709); <br>
        0x0118 (1803 to 1809); <br>
        0xB8 </td>
        <td>
        <pre class="source">ULONG_PTR volatile MdlPagesAllocated;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0xB8 (10.0 to 1511); <br>
        0xBC (1607); <br>
        0xB8 (1703 to 1709); <br>
        0xB4 (1803 to 1809); <br>
        0x64 </td>
        <td>0x0128 (10.0 to 1511); <br>
        0x0130 (1607); <br>
        0x0128 (1703 to 1709); <br>
        0x0120 (1803 to 1809); <br>
        0xC0 </td>
        <td>
        <pre class="source">ULONG_PTR volatile SystemPageTableCommit;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0xBC (10.0 to 1511); <br>
        0xC0 (1607); <br>
        0xBC (1703 to 1709); <br>
        0xB8 (1803 to 1809) </td>
        <td>0x0130 (10.0 to 1511); <br>
        0x0138 (1607); <br>
        0x0130 (1703 to 1709); <br>
        0x0128 (1803 to 1809) </td>
        <td>
        <pre class="source">ULONG_PTR volatile SpecialPagesInUse;</pre>
        </td>
        <td>10.0 to 1809 </td>
      </tr>
      <tr>
        <td>0xC0 (10.0 to 1511); <br>
        0xC4 (1607) </td>
        <td>0x0138 (10.0 to 1511); <br>
        0x0140 (1607) </td>
        <td>
        <pre class="source">ULONG_PTR volatile WsOverheadPages;</pre>
        </td>
        <td>10.0 to 1607 </td>
      </tr>
      <tr>
        <td>0xC4 (10.0 to 1511); <br>
        0xC8 (1607) </td>
        <td>0x0140 (10.0 to 1511); <br>
        0x0148 (1607) </td>
        <td>
        <pre class="source">ULONG_PTR volatile VadBitmapPages;</pre>
        </td>
        <td>10.0 to 1607 </td>
      </tr>
      <tr>
        <td>0xC8 (10.0 to 1511); <br>
        0xCC (1607); <br>
        0xC0 (1703 to 1709); <br>
        0xBC (1803 to 1809); <br>
        0x68 </td>
        <td>0x0148 (10.0 to 1511); <br>
        0x0150 (1607); <br>
        0x0138 (1703 to 1709); <br>
        0x0130 (1803 to 1809); <br>
        0xC8 </td>
        <td>
        <pre class="source">ULONG_PTR volatile ProcessCommit;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0xCC (10.0 to 1511); <br>
        0xD0 (1607) </td>
        <td>0x0150 (10.0 to 1511); <br>
        0x0158 (1607) </td>
        <td>
        <pre class="source">ULONG_PTR volatile SharedCommit;</pre>
        </td>
        <td>10.0 to 1607 </td>
      </tr>
      <tr>
        <td>0xD0 (10.0 to 1511); <br>
        0xD4 (1607); <br>
        0xC4 (1703 to 1709); <br>
        0xC0 (1803 to 1809); <br>
        0x6C </td>
        <td>0x0158 (10.0 to 1511); <br>
        0x0160 (1607); <br>
        0x0140 (1703 to 1709); <br>
        0x0138 (1803 to 1809); <br>
        0xD0 </td>
        <td>
        <pre class="source">LONG volatile DriverCommit;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x70 </td>
        <td>0xD4 </td>
        <td>
        <pre class="source">UCHAR PagingLevels;</pre>
        </td>
        <td>1903 and higher </td>
      </tr>
      <tr>
        <td>0xC8 (1703 to 1709); <br>
        0xC4 (1803 to 1809); <br>
        0x74 </td>
        <td>0x0148 (1607 to 1709); <br>
        0x0140 (1803 to 1809); <br>
        0xD8 </td>
        <td>
        <pre class="source">ULONG_PTR PfnDatabaseCommit;</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td rowspan="3">0x0100 (10.0 to 1809); <br>
        0x80 </td>
        <td rowspan="3">0x0180 (10.0 to 1809); <br>
        0x0100 </td>
        <td>
        <pre class="source"><a href="../ps/mmsupport.htm">MMSUPPORT</a> SystemWs [3];</pre>
        </td>
        <td>10.0 to 1511 </td>
      </tr>
      <tr>
        <td>
        <pre class="source"><a href="../ps/mmsupport_full.htm">MMSUPPORT_FULL</a> SystemWs [3];</pre>
        </td>
        <td>1607 to 1709 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">MMSUPPORT_FULL SystemWs [6];</pre>
        </td>
        <td>1803 and higher </td>
      </tr>
      <tr>
        <td>0x02C0 (1607 to 1709); <br>
        0x0480 (1803 to 1809); <br>
        0x0680 </td>
        <td>0x04C0 (1607 to 1709); <br>
        0x0800 (1803 to 1809); <br>
        0x0880 </td>
        <td>
        <pre class="source"><a href="../ps/mmsupport_shared.htm">MMSUPPORT_SHARED</a> SystemCacheShared;</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>0x0540 (1607 to 1709); <br>
        0x0880 (1803 to 1809); <br>
        0x0900 </td>
        <td>
        <pre class="source">MMSUPPORT_AGGREGATION AggregateSystemWs [1];</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>0x0560 (1607) </td>
        <td>
        <pre class="source"><a href="mmwsl_shared.htm">MMWSL_SHARED</a> SystemCacheSharedWorkingSetList;</pre>
        </td>
        <td>1607 only </td>
      </tr>
      <tr>
        <td>0x0280 (10.0 to 1511); <br>
        0x02E4 (1607 to 1709); <br>
        0x04AC (1803 to 1809); <br>
        0x0700 </td>
        <td>0x0468 (10.0 to 1511); <br>
        0x05C0 (1607); <br>
        0x0560 (1703 to 1709); <br>
        0x08A0 (1803 to 1809); <br>
        0x0920 </td>
        <td>
        <pre class="source">ULONG MapCacheFailures;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x0284 (10.0) </td>
        <td>0x046C (10.0) </td>
        <td>
        <pre class="source">ULONG LastUnloadedDriver;</pre>
        </td>
        <td>10.0 only </td>
      </tr>
      <tr>
        <td>0x0288 (10.0) </td>
        <td>0x0470 (10.0) </td>
        <td>
        <pre class="source">UNLOADED_DRIVERS *UnloadedDrivers;</pre>
        </td>
        <td>10.0 only </td>
      </tr>
      <tr>
        <td>0x028C (10.0); <br>
        0x0284 (1511); <br>
        0x02E8 (1607 to 1709); <br>
        0x04B0 (1803 to 1809); <br>
        0x0704 </td>
        <td>0x0478 (10.0); <br>
        0x0470 (1511); <br>
        0x05C8 (1607); <br>
        0x0568 (1703 to 1709); <br>
        0x08A8 (1803 to 1809); <br>
        0x0928 </td>
        <td>
        <pre class="source">ULONG_PTR PagefileHashPages;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x0290 (10.0); <br>
        0x0288 (1511); <br>
        0x02EC (1607 to 1709); <br>
        0x04B4 (1803 to 1809); <br>
        0x0708 </td>
        <td>0x0480 (10.0); <br>
        0x0478 (1511); <br>
        0x05D0 (1607); <br>
        0x0570 (1703 to 1709); <br>
        0x08B0 (1803 to 1809); <br>
        0x0930 </td>
        <td>
        <pre class="source">SYSPTES_HEADER PteHeader;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x031C (10.0); <br>
        0x0314 (1511); <br>
        0x0378 (1607 to 1709); <br>
        0x0540 (1803 to 1809) </td>
        <td>0x0598 (10.0); <br>
        0x0590 (1511); <br>
        0x06E8 (1607); <br>
        0x0688 (1703 to 1709); <br>
        0x09C8 (1803 to 1809) </td>
        <td>
        <pre class="source">MI_SPECIAL_POOL *SessionSpecialPool;</pre>
        </td>
        <td>10.0 to 1809 </td>
      </tr>
      <tr>
        <td>0x0320 (10.0); <br>
        0x0318 (1511); <br>
        0x037C (1607 to 1709); <br>
        0x0544 (1803 to 1809); <br>
        0x0794 </td>
        <td>0x05A0 (10.0); <br>
        0x0598 (1511); <br>
        0x06F0 (1607); <br>
        0x0690 (1703 to 1709); <br>
        0x09D0 (1803 to 1809); <br>
        0x0A48 </td>
        <td>
        <pre class="source">ULONG_PTR SystemVaTypeCount [MiVaMaximumType];</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x035C (10.0); <br>
        0x0354 (1511); <br>
        0x03B8 (1607 to 1703); <br>
        0x03C0 (1709); <br>
        0x0584 (1803 to 1809); <br>
        0x07D0 (1903); <br>
        0x07D4 </td>
        <td rowspan="2">0x0700 (1703); <br>
        0x0710 (1709); <br>
        0x0A50 (1803 to 1809); <br>
        0x0AC0 (1903); <br>
        0x0AC8 </td>
        <td>
        <pre class="source">UCHAR SystemVaType [0x0400];</pre>
        </td>
        <td>10.0 and higher (x86) </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR SystemVaType [0x0100];</pre>
        </td>
        <td>1703 and higher (x64) </td>
      </tr>
      <tr>
        <td>0x075C (10.0); <br>
        0x0754 (1511); <br>
        0x07B8 (1607 to 1703); <br>
        0x07C0 (1709); <br>
        0x0984 (1803 to 1809); <br>
        0x0BD0 (1903); <br>
        0x0BD4 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG SystemVaTypeCountFailures [MiVaMaximumType];</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x0798 (10.0); <br>
        0x0790 (1511); <br>
        0x07F4 (1607 to 1703); <br>
        0x0804 (1709); <br>
        0x09C4 (1803 to 1809); <br>
        0x0C0C (1903); <br>
        0x0C14 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG SystemVaTypeCountLimit [MiVaMaximumType];</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x07D4 (10.0); <br>
        0x07CC (1511); <br>
        0x0830 (1607 to 1703); <br>
        0x0848 (1709); <br>
        0x0A04 (1803 to 1809); <br>
        0x0C48 (1903); <br>
        0x0C54 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG SystemVaTypeCountPeak [MiVaMaximumType];</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x0810 (10.0); <br>
        0x0808 (1511); <br>
        0x086C (1607 to 1703); <br>
        0x088C (1709); <br>
        0x0A44 (1803 to 1809); <br>
        0x0C84 (1903); <br>
        0x0C94 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG SystemAvailableVa;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>0x0760 (1607); <br>
        0x0800 (1703); <br>
        0x0810 (1709); <br>
        0x0B50 (1803 to 1809); <br>
        0x0BC0 (1903); <br>
        0x0BC8 </td>
        <td>
        <pre class="source">MI_SYSTEM_VA_ASSIGNMENT SystemVaRegions [AssignedRegionMaximum];</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="member">SystemVaTypeCount</span> member is originally the 
  internal variable <span class="variable">MiSystemVaTypeCount</span>, dating from 
  Windows Vista. The several similar arrays of counters in the 32-bit builds correspond 
  similarly to internal variables that date from Windows Vista SP1. All are indexed 
  by the <span class="enum">MI_SYSTEM_VA_TYPE</span> enumeration. Note that the 
  number of elements varies with the build. </p>
  <p>The <span class="enum">MI_SYSTEM_VA_TYPE</span> enumeration also figures in 
  the <span class="member">SystemVaType</span> member. This too, in the 32-bit builds, 
  dates from Windows Vista as an internal variable. Its elements evaluate to the 
  enumeration. Given a virtual address in system space, this
  <span class="member">SystemVaType</span> array thus provides for ready reckoning 
  of the address’s type. The index for the lookup is in 2MB units from the start 
  of system space, 2MB being the amount of virtual address space that’s mapped through 
  one page directory entry (given the use of PAE). That there are 0x0400 elements 
  allows system space to start as low as 0x80000000. </p>
  <p>The <span class="member">SystemAvailableVa</span> member also originates as 
  an internal variable in Windows Vista. It tracks how many bytes of system address 
  space are not yet assigned, but only for 32-bit Windows. In 64-bit Windows, perhaps 
  just for the convenience that comes from having much more address space to work 
  with, different types of addresses in system address space are assigned to different 
  regions whose bases and sizes are hard-coded. This predictability was scrapped 
  for the 1607 release of Windows 10, apparently in a continuing programme of strengthening 
  kernel-mode Address Space Layout Randomisation (ASLR). A new classification of 
  address-space regions is modelled by the <span class="enum">MI_ASSIGNED_REGION_TYPES</span> 
  enumeration, which indexes the new <span class="member">SystemVaRegions</span> 
  array. Again, the number of elements varies with the build. The values give the 
  dynamically assigned base addresses and sizes of these regions of system space. 
  The variability complicates the lookup of the other address-space type. The 1703 
  release eases this by introducing the <span class="member">SystemVaType</span> 
  member to 64-bit Windows. The index for the lookup is in units of 512GB from the 
  start of system space at 0xFFFF8000`00000000, 512GB being the amount of virtual 
  address space that’s mapped through one PML4 entry. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 6th May 2019 but was not published 
    until 26th <a href="../../../../../../../new/19/05.htm">May 2019</a>. It was 
    last modified on 8th <a href="../../../../../../../new/22/07.htm">August 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1922.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2019-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5309" -->
  </div>
</div>

</body>

</html>

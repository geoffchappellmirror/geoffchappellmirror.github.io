<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EtwGetTraceEnableFlags</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/win32.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/win32.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>EtwGetTraceEnableFlags </h1>
<p>A classic event provider calls this function from within a notification callback 
to learn the “enable flags” of the event tracing session that is the subject of 
the notification. These flags are whatever the provider defines them to be. The 
overall purpose is that different events can be associated with different selections 
of bits in the flags. The controller of an event tracing session, mostly usefully 
one that knows the provider’s definitions, may then set some combination of the 
flags to indicate that it wants the matching events but no others. The event provider 
that learns of this setting can then not waste time even trying to trace events 
that the tracing session will ignore. </p>
<h2>Declaration </h2>
<pre>ULONG EtwGetTraceEnableFlags (TRACEHANDLE TraceHandle);</pre>
<h3>Parameters </h3>
<p>The <span class="argument">TraceHandle</span> represents the tracing session 
for the duration of the callback routine. The provider can have got this handle 
by calling the <span class="function"><a href="gettraceloggerhandle.htm">EtwGetTraceLoggerHandle</a></span> 
function from within the <span class="type">WMIDPREQUEST</span> callback routine 
that it supplied when registering through the <span class="function">
<a href="registertraceguids.htm">EtwRegisterTraceGuids</a></span> function. </p>
<h3>Return Value </h3>
<p>A successful call returns the flags, which may be zero. Failure is indicated 
by returning zero, but having set a non-zero Win32 error code as the thread’s last 
error (such that it may be retrieved through such functions as
<span class="function">GetLastError</span>). </p>
<p>Although zero may not often be useful for the enable flags, it is not inconceivable 
that a tracing session does mean them to be zero (if only temporarily). The caller 
who wants to distinguish whether zero as the return value is success or failure 
will need to have cleared the last error in advance. </p>
<h2>Availability </h2>
<p>The <span class="function">EtwGetTraceEnableFlags</span> function is exported 
by name from NTDLL in version 5.2 and higher. It has higher-level availability as 
a forward from the ADVAPI32 export <span class="function">GetTraceEnableFlags</span> 
in its versions 5.2 and higher. </p>
<p>This note is concerned only with the function as implemented in NTDLL version 
5.2 and higher. The earlier implementations in ADVAPI32 versions 5.0 and 5.1 are 
left for separate treatment some other time. </p>
<h2>Documentation Status </h2>
<p>The <span class="function">EtwGetTraceEnableFlags</span> function is not documented. 
Well-behaved user-mode software would call the documented <span class="function">
GetTraceEnableFlags</span> function instead. Note, however, that a strict reading 
of Microsoft’s documentation prohibits calling the higher-level function, but not 
the lower-level, from a <span class="routine">DllMain</span> routine. For some hint 
that Microsoft has experience either of or closely related to this point, see the 
cautionary note about the loader lock in Microsoft’s documentation of the
<a href="https://docs.microsoft.com/windows/desktop/etw/controlcallback">WMIDPREQUEST 
callback function</a>. </p>
<h2>Behaviour </h2>
<p>This function exists merely to help the provider crack the enable flags from 
the particular encoding that the <span class="type">TRACEHANDLE</span> should have 
in the expected circumstances. </p>
<p>As always for a <span class="type">TRACEHANDLE</span>, the low 16 bits are the 
logger ID. Except that 0xFFFF conventionally represents the NT Kernel Logger, the 
logger ID is a 0-based index into the kernel’s list of loggers and must be less 
than <span class="constant">MAXLOGGERS</span> (64 in the applicable versions, at 
least to the original Windows 10), else the function fails, with
<span class="constant">ERROR_INVALID_HANDLE</span> as its error code. </p>
<p>In the expected circumstances, the <span class="type">TRACEHANDLE</span> is in 
fact a <span class="struct">TRACE_ENABLE_CONTEXT</span>. Its
<span class="member">EnableFlags</span> member is in effect the high 32 bits of 
the <span class="type">TRACEHANDLE</span>. If the whole <span class="type">TRACEHANDLE</span> 
is zero, then this interpretation is implausible and the function fails, again with
<span class="constant">ERROR_INVALID_HANDLE</span> as its error code. </p>
<div class="Footer">
  <p class="Dates">This page was created on 23rd
  <a href="../../../../../../../new/18/12.htm">December 2018</a> and was last modified 
  on 24th December 2018. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c18.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2018. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="6594" -->
</div>

</body>

</html>

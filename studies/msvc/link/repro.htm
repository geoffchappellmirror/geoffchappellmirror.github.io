<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Test-Case Reproduction</title>
<link rel="stylesheet" type="text/css" href="../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../_styles/msvc.css">
<script type="text/javascript" src="../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../_scripts/document.js"></script>
<script type="text/javascript" src="../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="22703" endspan -->
<!--webbot bot="Include" U-Include="../_include/draft.htm" TAG="BODY" startspan -->

<p class="alert">ROUGH DRAFT </p>

<!--webbot bot="Include" i-checksum="20300" endspan -->
<h1>Test-Case Reproduction </h1>
<p>LINK provides for reproducing test cases, both for LINK and LIB. This feature 
is at best semi-documented, and only then among Microsoft’s descriptions of 
possible errors and warnings. </p>
<h2>Directory </h2>
<p>The key point to the feature is to reproduce all the linker’s input into one 
directory for convenient and complete reference in any later examination of what 
the linker did. </p>
<p>The Repro directory is specified in a <span class="switch">/linkrepro</span> 
command-line option else a <span class="env">LINK_REPRO</span> environment 
variable. If it is the current directory, the Repro feature is disabled, with a 
warning (LNK4046). Even if the Repro directory is acceptable, a warning 
(LNK4045) is issued, presumably to mark that this feature is unusual. </p>
<h2>Response File </h2>
<p>Useful examination will require some record of what the linker thinks it was 
asked to do. This goes into a response file. By default, this response file is 
named “link.rsp” in the Repro directory. However, the name is configurable 
through a
<span class="env">LINK_REPRO_NAME</span> environment variable. The value of this 
variable is appended directly to the Repro path, without an interceding 
backslash. To place the response file in the Repro directory, it is therefore 
necessary that the <span class="env">LINK_REPRO_NAME</span> value start with a 
backslash. It is a fatal error (LNK1144) if the linker cannot create the 
response file, with exclusive write access. </p>
<p>The use of <span class="env">LINK_REPRO_NAME</span> to name a response file 
has a notable side-effect when the linker copies files to the Repro directory. 
(See below.) </p>
<p>It may be that <span class="env">LINK_REPRO_NAME</span> is left undocumented 
because it is intended solely for the linker’s internal use, specifically to 
name a separate response file (“deflib.rsp” in the Repro directory) for LINK’s 
re-execution of itself as LIB to generate an import library and export file. </p>
<h2>Copied Input Files </h2>
<p>The general aim is for the Repro directory to get a copy of each file that 
the linker uses as input. The ordinary behaviour is that the copy has the same 
name and extension as the actual input file and that a message is written to 
standard output to tell of the copying. </p>
<p>Variations from this behaviour occur if the target file for a proposed copy 
cannot be created as a new file without overwriting one that exists already. </p>
<p>If the <span class="env">LINK_REPRO_NAME</span> environment variable was set, 
then the linker simply does not bother with the copy. The thinking may be to use 
this environment variable as a (quick and dirty) test of whether the linker is 
actually running because a parent instance of the linker has re-executed itself, 
such that files already in the Repro directory were copied there by the parent 
and need not be copied again by the child. </p>
<p>Without the <span class="env">LINK_REPRO_NAME</span> environment variable, 
the linker tries a sequence of new names for the target file until creation 
succeeds and the copy can be proceeded with. The new names are formed by 
inserting a period and a serial number (beginning at 2) between the name and 
extension. </p>
<div class="Footer">
  <p class="Dates">This page was created on 7th September 2005 and was last 
  modified on 9th June 2009. </p>
  <!--webbot bot="Include" U-Include="../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62439" endspan -->
</div>

</body>

</html>

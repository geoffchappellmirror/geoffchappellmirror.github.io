<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>CL /wo</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>CL /wo </h1>
<h2>Syntax </h2>
<blockquote>
  <p><span class="switch">/wo</span><span class="placeholder">number</span> </p>
</blockquote>
<!--webbot bot="Include" U-Include="_include/2star.htm" TAG="BODY" startspan -->

<p>The required argument consists of whatever follows immediately within the same 
command-line token, else is the whole of the next command-line token if this token 
does not begin with a hyphen or forward slash. </p>

<!--webbot bot="Include" i-checksum="49301" endspan -->
<p>The argument is formally numeric. Values outside the range 4001 to 4999 inclusive 
are coerced to 4999, with a warning (D4014). </p>
<h3>Relations </h3>
<p>The <span class="switch">/wo</span> option has no syntactical relations with 
other options. </p>
<!--webbot bot="Include" U-Include="_include/1p2m.htm" TAG="BODY" startspan -->

<p>This option passes to both the front-end and back-end compilers (C1, C1XX and 
C2). </p>

<!--webbot bot="Include" i-checksum="43673" endspan -->
<h2>Behaviour </h2>
<p>This option sets the given warning <span class="placeholder">number</span> to 
be reported only on the first occurrence of the associated condition. Internally, 
this is implemented by disabling the warning (as for <span class="switch">
<a href="$wd.htm">/wd</a></span>) after reporting it. </p>
<!--webbot bot="Include" U-Include="_include/c4200.htm" TAG="BODY" startspan -->

<p>This option is ineffective for warning C4200. All C and C++ source files, even 
if empty, are compiled with a forced inclusion at the very start. This “file” of
<a href="../../../language/predefined/index.htm">predefined types</a> is hard-coded 
into the compiler. Some of these types have unsized arrays as members. Each instance 
is preceded by <span class="directive">#pragma warning (disable : 4200)</span> and 
followed by <span class="directive">#pragma warning (default : 4200)</span>. This 
is arguably pointless, since the compiler disables warnings and errors (though not 
fatal errors) while processing this built-in inclusion, but a side-effect is that 
when the compiler progresses to the user-supplied source code, warning C4200 has 
already been set to its default behaviour. Whatever may have been intended by giving 
4200 as the argument to a <span class="switch">/w1</span>, <span class="switch">
/w2</span>, <span class="switch">/w3</span>, <span class="switch">/w4</span>,
<span class="switch">/wd</span>, <span class="switch">/we</span> or
<span class="switch">/wo</span> option on the command line is then irrelevant, essentially 
as if <span class="directive">#pragma warning (default : 4200)</span> had been the 
first line of the source file. </p>

<!--webbot bot="Include" i-checksum="11739" endspan -->
<p>Some warning numbers are ordinarily set for reporting just once, as if the corresponding
<span class="switch">/wo</span> option were generated internally before acting on 
any options from the command line. For instance, the following table shows the warnings 
that are configured this way by the C++ front-end compiler (C1XX). One seems to 
be undocumented and is <span class="undocumented">highlighted yellow</span>. </p>
<table>
  <tr>
    <td>C4001 </td>
    <td>nonstandard extension &#39;single line comment&#39; was used</td>
  </tr>
  <tr>
    <td>C4069 </td>
    <td>long double is the same precision as double</td>
  </tr>
  <tr>
    <td>C4168 </td>
    <td>compiler limit : out of debugger types, delete program database &#39;<span class="placeholder">database</span>&#39; 
    and rebuild</td>
  </tr>
  <tr>
    <td><span class="undocumented">C4169</span> </td>
    <td>compiler limit : out of debugger types, break up this module or use /Yd 
    if /Yc is enabled</td>
  </tr>
  <tr>
    <td>C4530 </td>
    <td>C++ exception handler used, but unwind semantics are not enabled. Specify 
    /EHsc</td>
  </tr>
  <tr>
    <td>C4535 </td>
    <td>calling _set_se_translator() requires /EHa</td>
  </tr>
  <tr>
    <td>C4611 </td>
    <td>interaction between &#39;<span class="placeholder">function</span>&#39; and C++ 
    object destruction is non-portable</td>
  </tr>
</table>
<div class="Footer">
  <p class="Dates">This page was created on 27th October 2005 and was last modified 
  on 11th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62424" endspan -->
</div>

</body>

</html>

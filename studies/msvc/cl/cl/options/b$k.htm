<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>CL /Bk</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>CL /Bk </h1>
<h2>Syntax </h2>
<blockquote>
  <p><span class="switch">/Bk</span>[<span class="placeholder">pathname</span>]
  </p>
</blockquote>
<!--webbot bot="Include" U-Include="_include/1hash.htm" TAG="BODY" startspan -->

<p>The optional argument consists of whatever follows immediately within the same 
command-line token. </p>

<!--webbot bot="Include" i-checksum="57525" endspan -->
<h3>Relations </h3>
<!--webbot bot="Include" U-Include="_include/norelations.htm" TAG="BODY" startspan -->

<p>This option has no syntactic relations with other options: it does not override 
any; it is not incompatible with any; it has no prerequisites. </p>

<!--webbot bot="Include" i-checksum="59750" endspan -->
<!--webbot bot="Include" U-Include="_include/d.htm" TAG="BODY" startspan -->

<p>This option is handled entirely within CL. It generates nothing that passes to 
any compiler module. </p>

<!--webbot bot="Include" i-checksum="15983" endspan -->
<p>However, the <span class="switch">/Bk</span> option may affect the
<span class="switch">-il</span> option that CL anyway generates for the front-end, 
in-between and back-end compiler modules. Specifically, if the
<span class="placeholder">pathname</span> argument is given, it becomes the
<span class="switch">-il</span> argument. </p>
<h2>Behaviour </h2>
<p>Compilation of any one source file typically involves creation of some number 
of so-called intermediate files by one or another of the compiler modules, mostly 
to pass information from the front-end (C1 or C1XX) to the back-end (C2). Unlike 
object files however, they are not an end-product of compilation and are ordinarily 
deleted by CL once compilation completes (successfully or not). </p>
<p>The general plan is that the intermediate files for any one source file are all 
in the one directory and all have their names formed by appending a two-letter code 
to a common base. The directory and base, composed as a pathname, then make a naming 
pattern for the set of intermediate files that correspond to that one source file. 
Within this pattern, the compiler modules may create and use intermediate files 
as they see fit. CL’s role is just to establish the naming pattern, communicate 
it to each compiler module via the <span class="switch">-il</span> option, and to 
delete such intermediate files that CL anticipates may remain when the modules are 
all done. The two-letter codes that CL anticipates will be appended to the template 
are presently db, ex, gl, in, lk, md and sy. </p>
<p>The naming pattern that CL ordinarily computes for intermediate files and passes 
as the <span class="switch">-il</span> argument is </p>
<blockquote>
  <p><span class="placeholder">tmp</span>\_CL_<span class="placeholder">xxx00000</span>
  </p>
</blockquote>
<p>where <span class="placeholder">tmp</span> stands for whatever path is named 
by the <span class="env">TMP</span> environment variable (defaulting in turn to
<span class="placeholder">tmp</span> and the conjunctive backslash being omitted), 
and <span class="placeholder">xxx</span> and <span class="placeholder">00000</span> 
stand respectively for three lower-case letters and five decimal digits that CL 
generates more or less randomly. </p>
<p>The <span class="switch">/Bk</span> option directs that intermediate files be 
kept after compilation and allows specification of the naming pattern. </p>
<p>Use of <span class="switch">/Bk</span> with an argument affects the order in 
which CL executes compiler modules when building more than one source file. The 
usual order (enabled by <span class="switch"><a href="zm.htm">/ZM</a></span>, which 
is set as an initial option) is to execute the same compiler module for as many 
source files as possible before proceeding to another compiler module. This order 
requires a different naming pattern for each set of intermediate files. To provide
<span class="switch">/Bk</span> with a <span class="placeholder">pathname</span> 
is to specify one naming pattern for all intermediate files. Each source file is 
therefore compiled to completion before proceeding to another source file (as if
<span class="switch">/ZM-</span> were given). The intermediate files that are kept 
at the end of the build relate to the last C/C++ source file that was compiled.
</p>
<p>For the work of <span class="switch">/Bk</span> but with the addition of suppressing 
the front-end C and C++ compilers, use the <span class="switch">
<a href="bk.htm">/BK</a></span> option. </p>
<div class="Footer">
  <p class="Dates">This page was created on 27th October 2005 and was last modified 
  on 11th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62424" endspan -->
</div>

</body>

</html>
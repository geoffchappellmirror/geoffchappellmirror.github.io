<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>KPROFILE_SOURCE</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>KPROFILE_SOURCE </h1>
  <p>The <span class="enum">KPROFILE_SOURCE</span> enumeration (formally
  <span class="enum">_KPROFILE_SOURCE</span>) is used throughout the kernel’s support 
  for profiling. Its numerical value selects from the available sources of a profile 
  interrupt that the kernel can use for sampling where the processor has been executing. 
  The original and still typical source is simply time, such that the profile interrupt 
  recurs periodically. Others, even very many others, are counters of events as 
  kept by the processor itself. </p>
  <p>For a simple enumeration of well-known constants, <span class="enum">KPROFILE_SOURCE</span> 
  is remarkable for being immediately meaningful through a large range of Windows 
  functionality. At one end, it is exposed to user-mode callers. Not only do these 
  get to choose the source when calling <span class="function">
  <a href="../../../api/ex/profile/create.htm">NtCreateProfile</a></span> or
  <span class="function"><a href="../../../api/ex/profile/createex.htm">NtCreateProfileEx</a></span> 
  to specify what execution they want profiled, but they also have
  <span class="function"><a href="../../../api/ex/profile/queryinterval.htm">NtQueryIntervalProfile</a></span> 
  and <span class="function"><a href="../../../api/ex/profile/setinterval.htm">NtSetIntervalProfile</a></span> 
  to manage the recurrence of profile interrupts from different sources. Modern 
  Windows versions provide yet more interfaces through various information classes 
  of <span class="function">
  <a href="../../../../../win32/advapi32/api/etw/logapi/query.htm">TraceQueryInformation</a></span> 
  and <span class="function">
  <a href="../../../../../win32/advapi32/api/etw/logapi/set.htm">TraceSetInformation</a></span>. 
  At the lower end, <span class="enum">KPROFILE_SOURCE</span> is shared with the 
  HAL, which has the job of managing the processor’s performance-monitoring counters 
  and the hardware’s timers, and then of setting up the profile interrupt at the 
  kernel’s direction. It is from the HAL that the kernel learns of each occurrence 
  of a profile interrupt, via <span class="function">
  <a href="../../../api/ke/profobj/profileinterruptwithsource.htm">KeProfileInterruptWithSource</a></span>.
  </p>
  <h2>Documentation Status </h2>
  <p>The <span class="enum">KPROFILE _SOURCE</span> enumeration is not documented, 
  but a C-language definition is in NTDDK.H from the Device Driver Kit (DDK) for 
  Windows NT 3.51 and is repeated in the DDK or Windows Driver Kit (WDK) for all 
  versions since, though it moves to WDM.H in later kits. It has perhaps tended 
  to be overlooked since it has never changed and is never referenced from any other 
  header or from sample code. </p>
  <p>Though no C-language definition of <span class="enum">KPROFILE_SOURCE</span> 
  has been published for user-mode programming, the C-language definition for kernel-mode 
  programming is reproduced in headers that Microsoft makes available to its own 
  user-mode programmers but does not publish for others. How else does type information 
  for <span class="enum">KPROFILE_SOURCE</span> appear in symbol files for such 
  high-level modules as the URLMON.DLL from Internet Explorer? (The answer, of course 
  is known. Those public symbol files name the unpublished header as
  <a href="../../../source/inc/ntkeapi_x.htm">ntkeapi_x.h</a>.) </p>
  <p>And there it might be left, with documentation at this site simply directing 
  you to the WDK—except that the definition in the published header and as may be 
  inferred from type information in symbol files is not the whole of what any modern 
  HAL implements. </p>
  <h2>Enumeration </h2>
  <p>The discrepancy between definition and implementation very plausibly exists 
  simply because the published definition was intended from the start as what’s
  <span class="emphasis">common</span> to all types of processor. </p>
  <table class="Enum">
    <colgroup>
      <col class="Value"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00</td>
        <td><span class="constant">ProfileTime</span> </td>
      </tr>
      <tr>
        <td>0x01</td>
        <td><span class="constant">ProfileAlignmentFixup</span> </td>
      </tr>
      <tr>
        <td>0x02</td>
        <td><span class="constant">ProfileTotalIssues</span> </td>
      </tr>
      <tr>
        <td>0x03</td>
        <td><span class="constant">ProfilePipelineDry</span> </td>
      </tr>
      <tr>
        <td>0x04</td>
        <td><span class="constant">ProfileLoadInstructions</span> </td>
      </tr>
      <tr>
        <td>0x05</td>
        <td><span class="constant">ProfilePipelineFrozen</span> </td>
      </tr>
      <tr>
        <td>0x06</td>
        <td><span class="constant">ProfileBranchInstructions</span> </td>
      </tr>
      <tr>
        <td>0x07</td>
        <td><span class="constant">ProfileTotalNonissues</span> </td>
      </tr>
      <tr>
        <td>0x08</td>
        <td><span class="constant">ProfileDcacheMisses</span> </td>
      </tr>
      <tr>
        <td>0x09</td>
        <td><span class="constant">ProfileIcacheMisses</span> </td>
      </tr>
      <tr>
        <td>0x0A</td>
        <td><span class="constant">ProfileCacheMisses</span> </td>
      </tr>
      <tr>
        <td>0x0B</td>
        <td><span class="constant">ProfileBranchMispredictions</span> </td>
      </tr>
      <tr>
        <td>0x0C</td>
        <td><span class="constant">ProfileStoreInstructions</span> </td>
      </tr>
      <tr>
        <td>0x0D</td>
        <td><span class="constant">ProfileFpInstructions</span> </td>
      </tr>
      <tr>
        <td>0x0E</td>
        <td><span class="constant">ProfileIntegerInstructions</span> </td>
      </tr>
      <tr>
        <td>0x0F</td>
        <td><span class="constant">Profile2Issue</span> </td>
      </tr>
      <tr>
        <td>0x10</td>
        <td><span class="constant">Profile3Issue</span> </td>
      </tr>
      <tr>
        <td>0x11</td>
        <td><span class="constant">Profile4Issue</span> </td>
      </tr>
      <tr>
        <td>0x12</td>
        <td><span class="constant">ProfileSpecialInstructions</span> </td>
      </tr>
      <tr>
        <td>0x13</td>
        <td><span class="constant">ProfileTotalCycles</span> </td>
      </tr>
      <tr>
        <td>0x14</td>
        <td><span class="constant">ProfileIcacheIssues</span> </td>
      </tr>
      <tr>
        <td>0x15</td>
        <td><span class="constant">ProfileDcacheAccesses</span> </td>
      </tr>
      <tr>
        <td>0x16</td>
        <td><span class="constant">ProfileMemoryBarrierCycles</span> </td>
      </tr>
      <tr>
        <td>0x17</td>
        <td><span class="constant">ProfileLoadLinkedIssues</span> </td>
      </tr>
      <tr>
        <td>0x18</td>
        <td><span class="constant">ProfileMaximum</span> </td>
      </tr>
      <tr>
        <td>0x19 and higher </td>
        <td>processor-specific profile sources, e.g.,
        <a href="../../../../hal/api/hwperfcnt/amd64.htm">Amd64</a> and
        <a href="../../../../hal/api/hwperfcnt/emon.htm">Emon</a> </td>
      </tr>
    </tbody>
  </table>
  <p>The first known addition of processor-specific profile sources is for 64-bit 
  Windows, right from its start with Windows Server 2003 SP1, but only then for 
  processors whose <span class="instruction">cpuid</span> vendor string is AuthenticAMD. 
  A separate set for GenuineIntel processors begins with 64-bit Windows Vista. No 
  32-bit HAL implements even the generally defined values other than
  <span class="constant">ProfileTime</span> until Windows 8. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 8th January 2017 and was last modified 
    on 15th <a href="../../../../../../../new/23/02.htm">February 2023</a>. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1723.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017-2023. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5069" -->
  </div>
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EX_X.H</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43332" -->
<div class="Main">
  <h1>EX_X.H </h1>
  <p>The public symbol file NTKRPAMP.PDB for the original release of Windows 10 
  tells that the kernel is built with the EX_X.H header at </p>
  <blockquote>
    d:\th\minkernel\ntos\inc
  </blockquote>
  <p>and draws from it the following type definitions: </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Line Number </th>
        <th>Type </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>34 </td>
        <td>enum <span class="enum">_POOL_TYPE</span> </td>
      </tr>
      <tr>
        <td>259 </td>
        <td>enum <span class="enum">_EX_POOL_PRIORITY</span> </td>
      </tr>
      <tr>
        <td>997 </td>
        <td>struct <span class="struct">_LOOKASIDE_LIST_EX</span> </td>
      </tr>
      <tr>
        <td>1127 </td>
        <td>struct <span class="struct">_NPAGED_LOOKASIDE_LIST</span> </td>
      </tr>
      <tr>
        <td>1324 </td>
        <td>struct <span class="struct">_PAGED_LOOKASIDE_LIST</span> </td>
      </tr>
      <tr>
        <td>2582 </td>
        <td>struct <span class="struct">_WORK_QUEUE_ITEM</span> </td>
      </tr>
      <tr>
        <td>2946 </td>
        <td>struct <span class="struct">_OWNER_ENTRY</span> </td>
      </tr>
      <tr>
        <td>2959 </td>
        <td>struct <span class="struct">_ERESOURCE</span> </td>
      </tr>
      <tr>
        <td>3502 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK</span> </td>
      </tr>
      <tr>
        <td>3590 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK_AUTO_EXPAND_STATE</span>
        </td>
      </tr>
      <tr>
        <td>3601 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK_AUTO_EXPAND</span> </td>
      </tr>
      <tr>
        <td>3654 </td>
        <td>struct <span class="struct">_EX_RUNDOWN_REF</span> </td>
      </tr>
      <tr>
        <td>3758 </td>
        <td>struct <span class="struct">_EXHANDLE</span> </td>
      </tr>
      <tr>
        <td>4020 </td>
        <td>struct <span class="struct">_EXT_DELETE_PARAMETERS</span> </td>
      </tr>
    </tbody>
  </table>
  <p>The header EX_X.H is not known in any Device Driver Kit (DDK) or Windows Driver 
  Kit (WDK). </p>
  <p>That said, all the types that the kernel is known to pick up from EX_X.H are 
  defined in the standard header WDM.H for kernel-mode programming or in one more 
  header, named NTOSP.H, that Microsoft has mostly kept for its own kernel-mode 
  programming but which is available from inspection because of its disclosure in 
  the “minwin” directory of the Windows 10 WDK for the original release and for 
  Version 1511. </p>
  <p>Most of the types are extracted to both the widely available WDM.H and the 
  private NTOSP.H, but both miss at least some lines and WDM.H consistently misses 
  more. Some accounting is possible on the assumption that although each of these 
  headers receives only a selection of lines from EX_X.H, their selections are contiguous. 
  Put another way, assume that WDM.H lines 21560 to 23583 and NTOSP.H lines 16296 
  to 20137 are generated only as extractions from EX_X.H. Then some of the EX_X.H 
  material that goes to NTOSP.H but not to WDM.H goes to NTDDK.H or NTIFS.H instead, 
  but most is otherwise unknown in the WDK headers. </p>
  <h2>Reconstruction </h2>
  <p>This presumably accidental publication of NTOSP.H allows for high confidence 
  in reconstructing the unseen EX_X.H almost completely. It may be that content 
  is extracted from EX_X.H into the standard headers. It may be that all are extracted 
  from yet some other source. Eithe way, the assumption seems reasonable that each 
  line in the unseen EX_X.H is duplicated in zero or more of the published headers 
  in an order-preserving way, leaving each of the published headers with a contiguous 
  region of lines that can each be inferred as being also in the unseen EX_X.H.
  </p>
  <p>In the table that follows, the line numbers on the left are deduced from type 
  information in a statically linked library named CLFSMGMT.LIB which Microsoft 
  publishes with the Software Development Kit (SDK) as if for user-mode programming. 
  Of all sources of type information that cites EX_X.H as the header from which 
  the compiler obtained the definitions, this is presently the one that is known 
  to have it for the most types. The line numbers on the right are from headers 
  as published in the WDK. &nbsp;</p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name">
      <col class="LineNumber" span="4">
    </colgroup>
    <thead>
      <tr>
        <th>Line Number </th>
        <th>Type </th>
        <th>WDM.H </th>
        <th>NTDDK.H </th>
        <th>NTOSP.H </th>
        <th>NTOSIFS.H </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>34 </td>
        <td>enum <span class="enum">_POOL_TYPE</span> </td>
        <td>21560 </td>
        <td>&nbsp;</td>
        <td>16296 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>259 </td>
        <td>enum <span class="enum">_EX_POOL_PRIORITY</span> </td>
        <td>21773 </td>
        <td>&nbsp;</td>
        <td>16519 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>997 </td>
        <td>struct <span class="struct">_LOOKASIDE_LIST_EX</span> </td>
        <td>22401 </td>
        <td>&nbsp;</td>
        <td>17204 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1127 </td>
        <td>struct <span class="struct">_NPAGED_LOOKASIDE_LIST</span> </td>
        <td>22531 </td>
        <td>&nbsp;</td>
        <td>17334 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1324 </td>
        <td>struct <span class="struct">_PAGED_LOOKASIDE_LIST</span> </td>
        <td>22728 </td>
        <td>&nbsp;</td>
        <td>17531 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2559 </td>
        <td>enum <span class="enum">_WORK_QUEUE_TYPE</span> </td>
        <td>22966 </td>
        <td>&nbsp;</td>
        <td>18750 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2582 </td>
        <td>struct <span class="struct">_WORK_QUEUE_ITEM</span> </td>
        <td>22989 </td>
        <td>&nbsp;</td>
        <td>18773 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2669 </td>
        <td>struct <span class="struct">_ZONE_SEGMENT_HEADER</span> </td>
        <td>&nbsp;</td>
        <td>8244 </td>
        <td>18854 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2674 </td>
        <td>struct <span class="struct">_ZONE_HEADER</span> </td>
        <td>&nbsp;</td>
        <td>8249 </td>
        <td>18859 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2946 </td>
        <td>struct <span class="struct">_OWNER_ENTRY</span> </td>
        <td>23058 </td>
        <td>&nbsp;</td>
        <td>19129 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2948 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_OWNER_ENTRY</span> </td>
        <td>23060 </td>
        <td>&nbsp;</td>
        <td>19131 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2949 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_OWNER_ENTRY</span> </td>
        <td>23061 </td>
        <td>&nbsp;</td>
        <td>19132 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2959 </td>
        <td>struct <span class="struct">_ERESOURCE</span> </td>
        <td>23071 </td>
        <td>&nbsp;</td>
        <td>19142 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2971 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_ERESOURCE</span> </td>
        <td>23083 </td>
        <td>&nbsp;</td>
        <td>19154 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>2973 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_ERESOURCE</span> </td>
        <td>23085 </td>
        <td>&nbsp;</td>
        <td>19156 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3002 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_ERESOURCE</span> </td>
        <td>23114 </td>
        <td>&nbsp;</td>
        <td>19185 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3020 </td>
        <td>struct <span class="struct">_RESOURCE_HASH_ENTRY</span> </td>
        <td>23132 </td>
        <td>&nbsp;</td>
        <td>19203 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3027 </td>
        <td>struct <span class="struct">_RESOURCE_PERFORMANCE_DATA</span> </td>
        <td>23139 </td>
        <td>&nbsp;</td>
        <td>19210 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3502 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19630 </td>
        <td>100 </td>
      </tr>
      <tr>
        <td>3537 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_EX_PUSH_LOCK</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19665 </td>
        <td>135 </td>
      </tr>
      <tr>
        <td>3538 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_EX_PUSH_LOCK</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19666 </td>
        <td>136 </td>
      </tr>
      <tr>
        <td>3559 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK_CACHE_AWARE_LEGACY</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19687 </td>
        <td>157 </td>
      </tr>
      <tr>
        <td>3567 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK_CACHE_AWARE_PADDED</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19695 </td>
        <td>165 </td>
      </tr>
      <tr>
        <td>3569 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_EX_PUSH_LOCK_CACHE_AWARE_PADDED</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19697 </td>
        <td>167 </td>
      </tr>
      <tr>
        <td>3571 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_EX_PUSH_LOCK_CACHE_AWARE_PADDED</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19699 </td>
        <td>169 </td>
      </tr>
      <tr>
        <td>3590 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK_AUTO_EXPAND_STATE</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19718 </td>
        <td>188 </td>
      </tr>
      <tr>
        <td>3591 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_EX_PUSH_LOCK_AUTO_EXPAND_STATE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19719 </td>
        <td>189 </td>
      </tr>
      <tr>
        <td>3592 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_EX_PUSH_LOCK_AUTO_EXPAND_STATE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19720 </td>
        <td>190 </td>
      </tr>
      <tr>
        <td>3601 </td>
        <td>struct <span class="struct">_EX_PUSH_LOCK_AUTO_EXPAND</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19729 </td>
        <td>199 </td>
      </tr>
      <tr>
        <td>3654 </td>
        <td>struct <span class="struct">_EX_RUNDOWN_REF</span> </td>
        <td>23460 </td>
        <td>&nbsp;</td>
        <td>19780 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3660 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_EX_RUNDOWN_REF</span> </td>
        <td>23466 </td>
        <td>&nbsp;</td>
        <td>19786 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3689 </td>
        <td>struct <span class="struct">_EX_RUNDOWN_REF_CACHE_AWARE_STATE</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19815 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3690 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_EX_RUNDOWN_REF_CACHE_AWARE_STATE</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19816 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3691 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_EX_RUNDOWN_REF_CACHE_AWARE_STATE</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19817 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3712 </td>
        <td>struct <span class="struct">_EX_RUNDOWN_REF_CACHE_AWARE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19838 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3758 </td>
        <td>struct <span class="struct">_EXHANDLE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19884 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3760 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_EXHANDLE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19886 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>3762 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_EXHANDLE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19888 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>4020 </td>
        <td>struct <span class="struct">_EXT_DELETE_PARAMETERS</span> </td>
        <td>23583 </td>
        <td>&nbsp;</td>
        <td>20137 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>5908 </td>
        <td>enum <span class="enum">_LICENSING_TAMPER_STATE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>21941 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>5974 </td>
        <td>anonymous enum </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>22007 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>6011 </td>
        <td>struct <span class="struct">_EX_EXTENSION_REGISTRATION_1</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>22041 </td>
        <td>1345 </td>
      </tr>
      <tr>
        <td>6080 </td>
        <td>struct <span class="struct">EX_BOOT_DEVICE_HANDLE_</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>6088 </td>
        <td>struct <span class="struct">_EX_BOOT_DEVICE_REGISTRATION</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>22114 </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>For an example of what can be learnt from this skeleton for reconstruction, 
  consider what might be in the 1,235 lines between the opening braces for definitions 
  of <span class="struct">_PAGED_LOOKASIDE_LIST</span> and <span class="enum">_WORK_QUEUE_TYPE</span>. 
  Only 223 are duplicated in WDM.H. This would be better than nothing, but NTOSP.H 
  has 1,219 lines in this space. It’s all but certain that every one of them is 
  in the corresponding space in EX_X.H. Thus is this part of the unseen EX_X.H reconstructed 
  almost completely from published material. </p>
  <p>A small but useful outcome of just this part of the reconstruction is to place 
  the numerous small inline routines that are frequently encountered in any debugging 
  or reverse engineering of Microsoft’s kernel-mode code—not only in the kernel 
  itself—that works with user-mode addresses. Such addresses are well-known to require 
  careful handling—or are not known nearly well enough, depending on perspective. 
  The kernel exports functions named <span class="function">
  <a href="../../api/ex/probe/probeforread.htm">ProbeForRead</a></span> 
  and <span class="function">ProbeForWrite</span> that help with one aspect of this 
  care, but Microsoft’s own kernel-mode programmers have these as macros and have 
  long benefited from the use of many inline elaborations that are specialised to 
  probing for particular types and small structures. It must make their code more 
  readable. </p>
  <p>Debugging their code, including from outside Microsoft, is similarly much easier 
  for recognising the macros and the inlining. Because of this, the inline routines 
  must have attracted attention from very early in any study of kernel-mode Windows 
  that’s worth calling a study. They will have been well-known long before the presumably 
  accidental publication of NTOSP.H. Not only does their inline usage get them named 
  in the kernel’s public symbol files starting with Windows 8, but they are named 
  in older symbol files from having sometimes been instantiated instead of inlined. 
  What was not known (without source-code access) until the NTOSP.H disclosure is 
  which header provides the kernel with these macros and inline routines. </p>
  <p>Is it vital to know that the kernel gets them from an unpublished header named 
  EX_X.H? Not for itself, of course not. Does it help with an understanding of how 
  Windows, still by far the world’s most sophisticated operating system in general 
  use, is organised? In its small way, yes. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 27th
    <a href="../../../../../../new/20/10.htm">October 2020</a> and was last modified 
    on 3rd <a href="../../../../../../new/23/02.htm">February 2023</a>. </p>
    <!--webbot bot="Include" U-Include="../../../_include/c2023.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020-2023. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="54423" -->
  </div>
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SYSTEM_FLAGS_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>SYSTEM_FLAGS_INFORMATION </h1>
<p>The <span class="struct">SYSTEM_FLAGS_INFORMATION</span> structure is produced 
as output or expected as input by the functions </p>
<ul>
  <li><span class="function"><a href="query.htm">ZwQuerySystemInformation</a></span> 
  or <span class="function">NtQuerySystemInformation</span>; </li>
  <li><span class="function"><a href="set.htm">ZwSetSystemInformation</a></span> 
  or <span class="function">NtSetSystemInformation</span>; </li>
</ul>
<p>respectively, when given the information class <span class="constant">SystemFlagsInformation</span> 
(0x09). This particular system information can be queried in all known Windows versions 
but cannot be set before version 3.51. </p>
<h2>Documentation Status </h2>
<p>The <span class="struct">SYSTEM_FLAGS_INFORMATION</span> structure is not documented.
</p>
<!--webbot bot="Include" U-Include="_include/type_info_urlmon.htm" TAG="BODY" startspan -->

<p>Microsoft does publish the practical equivalent of a C-language definition as 
type information in public symbol files, though not for the kernel, where the structure 
is prepared, nor even for low-level user-mode DLLs that interpret the structure, 
but for various higher-level user-mode DLLs such as URLMON.DLL and only then starting 
with version 6.2. </p>

<!--webbot bot="Include" endspan i-checksum="38013" -->
<!--webbot bot="Include" U-Include="_include/type_info_ddklibs.htm" TAG="BODY" startspan -->

<p>Two earlier disclosures of type information are known, though not in symbol files 
but in statically linked libraries: GDISRVL.LIB from the Device Driver Kit (DDK) 
for Windows NT 3.51; and SHELL32.LIB from the DDK for Windows NT 4.0. </p>

<!--webbot bot="Include" endspan i-checksum="55883" -->
<h2>Layout </h2>
<p>The <span class="struct">SYSTEM_FLAGS_INFORMATION</span> is four bytes in both 
32-bit and 64-bit Windows: </p>
<table class="Struct">
  <colgroup>
    <col class="Offset"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset </th>
    <th>Definition </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">ULONG Flags;</pre>
    </td>
  </tr>
</table>
<p>The one member receives a copy of the kernel’s <span class="variable">NtGlobalFlag</span> 
variable when querying for information. When setting, the member provides input 
for changing the variable and (in version 4.0 and higher) receives a copy of what 
the variable is changed to. Since all known versions of the kernel have
<span class="variable">NtGlobalFlag</span> in read-write data and export its address,
<span class="constant">SystemFlagsInformation</span> and <span class="struct">SYSTEM_FLAGS_INFORMATION</span> 
have little or no reason to exist except to help user-mode callers. Setting the 
kernel’s <span class="variable">NtGlobalFlag</span> from user mode requires
<span class="constant">SeDebugPrivilege</span>. Even with privilege or even if calling 
from kernel mode, not all bits can be changed. </p>
<p>In the language of Microsoft’s GFLAGS tool for its <span class="switch">/k</span> 
switch, these bits that are queried and set as <span class="member">Flags</span> 
through <span class="function">NtQuerySystemInformation</span> and
<span class="function">NtSetSystemInformation</span> are the </p>
<blockquote>
  Kernel flag settings. Displays or changes system-wide debugging flags for this 
  session. These settings are effective immediately, but are lost when Windows shuts 
  down. The settings affect processes started after this command completes.</blockquote>
<p>Unfortunately for programmers who resort to these debugging flags, the selection 
of bits that Microsoft’s
<a href="https://docs.microsoft.com/windows-hardware/drivers/debugger/gflags-flag-table">
GFlags Flag Table</a> presents with a K as a Destination or which the tool itself 
shows on its Kernel Flags tab bears little relationship to which flags the kernel 
actually does permit to change. Especially notable on this point is that Microsoft’s 
page
<a href="https://docs.microsoft.com/windows-hardware/drivers/debugger/setting-and-clearing-kernel-flags">
Setting and Clearing Kernel Flags</a> shows the GFLAGS dialog box as if ready to 
set “Show loader snaps” even though proceeding will just clear the checkbox silently 
unless you try it on version 5.1 or earlier. </p>
<p>Some sympathy is perhaps due to the GFLAGS programmers and technical writers 
since <span class="emphasis">which</span> bits can be changed varies widely between 
Windows versions. For each bit that has ever been defined, there is at least one 
Windows version that permits it to be changed and at least one that in some way 
or another does not. For only very few is the explanation plausibly that the bit 
was redefined. Instead, there seem to have been three distinct approaches to choosing 
which bits are subject to user-mode control: </p>
<ul>
  <li>in version 3.51, all defined bits can be changed, and all others are cleared;
  </li>
  <li>in versions 4.0 to 5.1, a selection of defined bits can be changed, and all 
  others are cleared; </li>
  <li>in version 5.2 and higher, a roughly opposite selection of defined bits can 
  be changed, and all others are preserved. </li>
</ul>
<p>Bits within the kernel’s <span class="variable">NtGlobalFlags</span> may affect 
kernel-mode execution or user-mode execution or both. User-mode execution is affected 
because whatever the kernel has for its <span class="variable">NtGlobalFlags</span> 
is the seed for the <span class="member">NtGlobalFlag</span> member of every new 
user-mode process’s <span class="struct">
<a href="../../../inc/api/pebteb/peb/index.htm">PEB</a></span>. </p>
<p>The modern implementation for setting the <span class="member">Flags</span> ignores 
roughly half the possible bits, i.e., preserves them as the kernel already had them. 
Though a full account is not yet known, two reasons seem plain. First, the kernel 
may be sensitive to the bit, such that whatever it configures of the kernel’s execution 
should not change until Windows is restarted. Second, the bit may have no kernel-mode 
effect at all, but its user-mode effects may be so wide-ranging that they would 
better not propagate to all new processes. </p>
<table>
  <tr>
    <th>Mask </th>
    <th>Name or Names </th>
    <th>Action When Setting Information </th>
  </tr>
  <tr>
    <td>0x00000001 </td>
    <td><span class="constant">FLG_STOP_ON_EXCEPTION</span> </td>
    <td>accepted in 3.51 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000002 </td>
    <td><span class="constant">FLG_SHOW_LDR_SNAPS</span> </td>
    <td>accepted in 3.51 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000004 </td>
    <td><span class="constant">FLG_DEBUG_INITIAL_COMMAND</span> </td>
    <td>accepted in 3.51 to 4.0; <br>
    cleared in 5.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000008 </td>
    <td><span class="constant">FLG_STOP_ON_HUNG_GUI</span> </td>
    <td>accepted in 3.51 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000010 </td>
    <td><span class="constant">FLG_HEAP_ENABLE_TAIL_CHECK</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000020 </td>
    <td><span class="constant">FLG_HEAP_ENABLE_FREE_CHECK</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000040 </td>
    <td><span class="constant">FLG_HEAP_VALIDATE_PARAMETERS</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000080 </td>
    <td><span class="constant">FLG_HEAP_VALIDATE_ALL</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000100 </td>
    <td><span class="constant">FLG_POOL_ENABLE_TAIL_CHECK</span> <br>
    <span class="constant">FLG_APPLICATION_VERIFIER</span> </td>
    <td>accepted in 3.51 to 4.0; <br>
    cleared in 5.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000200 </td>
    <td><span class="constant">FLG_POOL_ENABLE_FREE_CHECK</span> <br>
    <span class="constant">FLG_MONITOR_SILENT_PROCESS_EXIT</span> </td>
    <td>accepted in 3.51 to 4.0; <br>
    cleared in 5.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000400 </td>
    <td><span class="constant">FLG_POOL_ENABLE_TAGGING</span> </td>
    <td>accepted in 3.51 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00000800 </td>
    <td><span class="constant">FLG_HEAP_ENABLE_TAGGING</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00001000 </td>
    <td><span class="constant">FLG_USER_STACK_TRACE_DB</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00002000 </td>
    <td><span class="constant">FLG_KERNEL_STACK_TRACE_DB</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00004000 </td>
    <td><span class="constant">FLG_MAINTAIN_OBJECT_TYPELIST</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00008000 </td>
    <td><span class="constant">FLG_HEAP_ENABLE_TAG_BY_DLL</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00010000 </td>
    <td><span class="constant">FLG_IGNORE_DEBUG_PRIV</span> <br>
    <span class="constant">FLG_DISABLE_STACK_EXTENSION</span> </td>
    <td>accepted in 3.51 to 4.0; <br>
    cleared in 5.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00020000 </td>
    <td><span class="constant">FLG_ENABLE_CSRDEBUG</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00040000 </td>
    <td><span class="constant">FLG_ENABLE_KDEBUG_SYMBOL_LOAD</span> </td>
    <td>accepted in 3.51 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00080000 </td>
    <td><span class="constant">FLG_DISABLE_PAGE_KERNEL_STACKS</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00100000 </td>
    <td><span class="constant">FLG_HEAP_ENABLE_CALL_TRACING</span> <br>
    <span class="constant">FLG_ENABLE_SYSTEM_CRIT_BREAKS</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00200000 </td>
    <td><span class="constant">FLG_HEAP_DISABLE_COALESCING</span> </td>
    <td>accepted in 3.51; <br>
    cleared in 4.0 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00400000 </td>
    <td><span class="constant">FLG_ENABLE_CLOSE_EXCEPTIONS</span> </td>
    <td>cleared in 3.51; <br>
    accepted in 4.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x00800000 </td>
    <td><span class="constant">FLG_ENABLE_EXCEPTION_LOGGING</span> </td>
    <td>cleared in 3.51; <br>
    accepted in 4.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x01000000 </td>
    <td><span class="constant">FLG_ENABLE_HANDLE_TYPE_TAGGING</span> </td>
    <td>cleared in 3.51; <br>
    accepted in 4.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x02000000 </td>
    <td><span class="constant">FLG_HEAP_PAGE_ALLOCS</span> </td>
    <td>cleared in 3.51 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x04000000 </td>
    <td><span class="constant">FLG_DEBUG_INITIAL_COMMAND_EX</span> </td>
    <td>cleared in 3.51; <br>
    accepted in 4.0; <br>
    cleared in 5.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x08000000 </td>
    <td><span class="constant">FLG_DISABLE_DBGPRINT</span> </td>
    <td>cleared in 3.51 to 4.0; <br>
    accepted in 5.0 to 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x10000000 </td>
    <td><span class="constant">FLG_CRITSEC_EVENT_CREATION</span> </td>
    <td>cleared in 3.51 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x20000000 </td>
    <td><span class="constant">FLG_LDR_TOP_DOWN</span> <br>
    <span class="constant">FLG_STOP_ON_UNHANDLED_EXCEPTION</span> </td>
    <td>cleared in 3.51 to 5.1; <br>
    accepted in 5.2 to 6.2; <br>
    ignored in 6.3 and higher </td>
  </tr>
  <tr>
    <td>0x40000000 </td>
    <td><span class="constant">FLG_ENABLE_HANDLE_EXCEPTIONS</span> </td>
    <td>cleared in 3.51 to 5.0; <br>
    accepted in 5.1; <br>
    ignored in 5.2 and higher </td>
  </tr>
  <tr>
    <td>0x80000000 </td>
    <td><span class="constant">FLG_DISABLE_PROTDLLS</span> </td>
    <td>cleared in 3.51 to 5.1; <br>
    accepted in 5.2 and higher </td>
  </tr>
</table>
<div class="Footer">
  <p class="Dates">This page was created on 9th July 2016 but was not published 
  until 25th <a href="../../../../../../../new/16/10.htm">October 2016</a>. It was 
  last modified on 27th June 2019. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1619.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2019. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5029" -->
</div>

</body>

</html>

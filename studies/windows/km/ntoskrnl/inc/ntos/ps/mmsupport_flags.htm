<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>MMSUPPORT_FLAGS</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>MMSUPPORT_FLAGS </h1>
  <p>The <span class="struct">MMSUPPORT_FLAGS</span> structure (formally
  <span class="struct">_MMSUPPORT_FLAGS</span>) is a container for four bytes of 
  flags in the <span class="struct"><a href="mmsupport.htm">MMSUPPORT</a></span> 
  structure, historically, but nowadays in the <span class="struct">
  <a href="mmsupport_instance.htm">MMSUPPORT_INSTANCE</a></span>. The
  <span class="struct">MMSUPPORT</span> is the Memory Manager’s highest-level modelling 
  of a Working Set and the <span class="struct">MMSUPPORT_FLAGS</span> record simple 
  properties of the corresponding Working Set’s state. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">MMSUPPORT_FLAGS</span> are not formally documented. 
  Neither is the structure known to have been declared in any header file that Microsoft 
  has published to support Windows programming. The flags are not secret, however, 
  just undocumented. Type information, which is for almost all purposes equivalent 
  to a C/C++ definition, is available in public symbol files starting with Windows 
  2000 SP3. </p>
  <h2>History </h2>
  <p>It is here thought that the <span class="struct">MMSUPPORT_FLAGS</span> were 
  introduced for version 5.0. Before this version, each process had an
  <span class="struct">MMSUPPORT</span> in its <span class="struct">
  <a href="eprocess/index.htm">EPROCESS</a></span> and the kernel had one more as 
  an internal variable. The introduction of sessions for version 5.0 meant that 
  an <span class="struct">MMSUPPORT</span> could also be in an
  <span class="struct">MM_SESSION_SPACE</span>. Easily distinguishing whether a 
  given <span class="struct">MMSUPPORT</span> is for a process or a session would 
  be useful and this is here thought to have motivated giving the
  <span class="struct">MMSUPPORT</span> some bit flags: it’s surely no accident 
  that the first, named <span class="member">SessionSpace</span>, provides exactly 
  this distinction. </p>
  <h2>Layout </h2>
  <p>The <span class="struct">MMSUPPORT_FLAGS</span> structure is four bytes in 
  all versions of 32-bit and 64-bit Windows that have it, but as implementation 
  details of an implementation detail, the bit flags within the structure vary between 
  Windows versions and even between builds. Moreover, it is not just that flags 
  change position within the bit mask or that particular bits change interpretation. 
  Different versions construct the bits differently—and not just with such simple 
  variation as <span class="type">UINT</span> bit fields in one version but
  <span class="type">UCHAR</span> bit fields in another. </p>
  <p>The original architecture was straightforward. Symbol files for Windows 2000 
  SP3 show an <span class="struct">MMSUPPORT</span> member named
  <span class="member">u</span> which is an unnamed union of an
  <span class="struct">MMSUPPORT_FLAGS</span> named <span class="member">Flags</span> 
  and a <span class="type">ULONG</span> named <span class="member">LongFlags</span>. 
  The <span class="struct">MMSUPPORT_FLAGS</span> were then a simple structure of
  <span class="type">UINT</span> bit fields: </p>
  <pre class="source">struct _MMSUPPORT_FLAGS {
    /*  UINT bit fields  */
};</pre>
  <p>Version 5.2 unpicked the union, making <span class="member">Flags</span> directly 
  an <span class="struct">MMSUPPORT</span> member, but it remade the
  <span class="struct">MMSUPPORT_FLAGS</span> structure into a mixure of
  <span class="type">UCHAR</span> and <span class="type">USHORT</span> bit fields:
  </p>
  <pre class="source">struct _MMSUPPORT_FLAGS {
    /*  16 bits of UCHAR bit fields  */
    /*  16 bits of USHORT bit fields  */
};</pre>
  <p>By version 6.0, the structure has only <span class="type">UCHAR</span> bit 
  fields: </p>
  <pre class="source">struct _MMSUPPORT_FLAGS {
    /*  UCHAR bit fields  */
};</pre>
  <p>Among the <span class="type">UCHAR</span> bit fields, however, is an 8-bit 
  field aligned to a whole byte. Version 6.3 formalised that this field is the whole 
  of its byte: </p>
  <pre class="source">struct _MMSUPPORT_FLAGS {
    /*  16 bits of UCHAR bit fields  */
    /*  one whole UCHAR  */
    /*  8 bits of UCHAR bit fields  */
};</pre>
  <p>The 1607 release of version 10.0 keeps to this but organises the bit fields 
  into unions. The bit fields in the first two bytes are in union with a
  <span class="type">USHORT</span> named <span class="member">u1</span>; those in 
  the last byte are in union with a <span class="type">UCHAR</span> named
  <span class="member">u2</span>: </p>
  <pre class="source">struct _MMSUPPORT_FLAGS {
    union {
        struct {
            /*  16 bits of UCHAR bit fields  */
        };
        USHORT u1;
    };
    UCHAR MemoryPriority;
    union {
        struct {
            /*  7 or 8 bits of UCHAR bit fields  */
        };
        UCHAR u2;
    };
};</pre>
  <p>The table below aims to extract the masks (as must be known when interpreting 
  the flags while debugging) from the dressing (as must be known to Microsoft’s 
  programmers when reading or writing the code): </p>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Version">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset / Mask </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2">0x00000001 (5.0 to 5.1); <br>
        0x00 / 0x01 (5.2 to 6.0) </td>
        <td>
        <pre class="source">UINT SessionSpace : 1;</pre>
        </td>
        <td>5.0 to 5.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR SessionSpace : 1;</pre>
        </td>
        <td>5.2 to 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x00000002 (5.0 to 5.1); <br>
        0x00 / 0x02 (5.2) </td>
        <td>
        <pre class="source">UINT BeingTrimmed : 1;</pre>
        </td>
        <td>5.0 to 5.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR BeingTrimmed : 1;</pre>
        </td>
        <td>5.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000004 (5.0) </td>
        <td>
        <pre class="source">UINT ProcessInSession : 1;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x00000008 (5.0); <br>
        0x00000004 (5.1); <br>
        0x00 / 0x04 (5.2) </td>
        <td>
        <pre class="source">UINT SessionLeader : 1;</pre>
        </td>
        <td>5.0 to 5.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR SessionLeader : 1;</pre>
        </td>
        <td>5.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00 / 0x07 </td>
        <td>
        <pre class="source">UCHAR WorkingSetType : 3;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00 / 0x02 (6.0); <br>
        0x00 / 0x08 (6.1) </td>
        <td>
        <pre class="source">UCHAR ModwriterAttached : 1;</pre>
        </td>
        <td>6.0 to 6.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x00000010 (5.0); <br>
        0x00000008 (5.1); <br>
        0x00 / 0x08 (5.2); <br>
        0x00 / 0x04 (6.0); <br>
        0x00 / 0x10 (6.1) </td>
        <td>
        <pre class="source">UINT TrimHard : 1;</pre>
        </td>
        <td>5.0 to 5.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR TrimHard : 1;</pre>
        </td>
        <td>5.2 to 6.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000020 (5.0); <br>
        0x00000010 (5.1) </td>
        <td>
        <pre class="source">UINT WorkingSetHard : 1;</pre>
        </td>
        <td>5.0 to 5.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000040 (5.0) </td>
        <td>
        <pre class="source">UINT WriteWatch : 1;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000020 (5.1) </td>
        <td>
        <pre class="source">UINT AddressSpaceBeingDeleted : 1;</pre>
        </td>
        <td>5.1 only </td>
        <td>previously <span class="type">BOOLEAN</span> in <span class="struct">
        MMSUPPORT</span> </td>
      </tr>
      <tr>
        <td rowspan="2">0x00 / 0x38 </td>
        <td>
        <pre class="source">UCHAR ForceCredits : 3;</pre>
        </td>
        <td>6.2 to 10.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Reserved0 : 3;</pre>
        </td>
        <td>1511 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00 / 0x10 (5.2); <br>
        0x00 / 0x08 (6.0); <br>
        0x00 / 0x20 (6.1); <br>
        0x00 / 0x40 </td>
        <td>
        <pre class="source">UCHAR MaximumWorkingSetHard : 1;</pre>
        </td>
        <td>5.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00 / 0x20 (5.2); <br>
        0x00 / 0x10 (6.0); <br>
        0x00 / 0x40 (6.1) </td>
        <td>
        <pre class="source">UCHAR ForceTrim : 1;</pre>
        </td>
        <td>5.2 to 6.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00 / 0x40 (5.2); <br>
        0x00 / 0x20 (6.0); <br>
        0x00 / 0x80 </td>
        <td>
        <pre class="source">UCHAR MinimumWorkingSetHard : 1;</pre>
        </td>
        <td>5.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00 / 0x40 (6.0) <br>
        0x01 / 0x01 </td>
        <td>
        <pre class="source">UCHAR SessionMaster : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00 / 0x80 (6.0) </td>
        <td>
        <pre class="source">UCHAR TrimmerAttached : 1;</pre>
        </td>
        <td>6.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x01 / 0x01 (6.0) </td>
        <td>
        <pre class="source">UCHAR TrimmerDetaching : 1;</pre>
        </td>
        <td>6.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x01 / 0x06 </td>
        <td>
        <pre class="source">UCHAR TrimmerState : 2;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="6">0xFFFFFF80 (5.0); <br>
        0x0000FFC0 (5.1); <br>
        0x00 / 0x80 (5.2); <br>
        0x01 / 0xFE (early 6.0); <br>
        0x01 / 0x0E (late 6.0); <br>
        0x01 / 0x08 </td>
        <td>
        <pre class="source">UINT Filler : 25;</pre>
        </td>
        <td>5.0 only </td>
        <td>last member in 5.0 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UINT Available : 10;</pre>
        </td>
        <td>5.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Available0 : 1;</pre>
        </td>
        <td>5.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Reserved : 7;</pre>
        </td>
        <td>early 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Reserved : 3;</pre>
        </td>
        <td>late 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Reserved : 1;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x01 / 0xF0 </td>
        <td>
        <pre class="source">UCHAR PageStealers : 4;</pre>
        </td>
        <td>late 6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00FF0000 (5.1) </td>
        <td>
        <pre class="source">UINT AllowWorkingSetAdjustment : 8;</pre>
        </td>
        <td>5.1 only </td>
        <td>previously <span class="type">UCHAR</span> in <span class="struct">MMSUPPORT</span>
        </td>
      </tr>
      <tr>
        <td rowspan="3">0xFF000000 (5.1); <br>
        0x01 / 0xFF (5.2); <br>
        0x02 / 0xFF </td>
        <td>
        <pre class="source">UINT MemoryPriority : 8;</pre>
        </td>
        <td>5.1 only </td>
        <td>previously <span class="type">UCHAR</span> in <span class="struct">MMSUPPORT</span>;
        <br>
        last member in 5.1 <br>
        </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR MemoryPriority : 8;</pre>
        </td>
        <td>5.2 to 6.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR MemoryPriority;</pre>
        </td>
        <td>6.3 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x02 / 0x0001 (5.2) </td>
        <td>
        <pre class="source">USHORT GrowWsleHash : 1;</pre>
        </td>
        <td>5.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x02 / 0x0002 (5.2) </td>
        <td>
        <pre class="source">USHORT AcquiredUnsafe : 1;</pre>
        </td>
        <td>5.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0x01 </td>
        <td>
        <pre class="source">UCHAR WsleDeleted : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0x02 (6.0 to 1607) </td>
        <td>
        <pre class="source">UCHAR VmExiting : 1;</pre>
        </td>
        <td>6.0 to 1607 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0x04 (late 6.0 to 1607) </td>
        <td>
        <pre class="source">UCHAR ExpansionFailed : 1;</pre>
        </td>
        <td>late 6.0 to 1607 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0x08 (6.3 to 1607); <br>
        0x03 / 0x02 </td>
        <td>
        <pre class="source">UCHAR SvmEnabled : 1;</pre>
        </td>
        <td>6.3 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="4">0x02 / 0xFFFC (5.2); <br>
        0x03 / 0xFC (early 6.0); <br>
        0x03 / 0xF8 (late 6.0 to 6.2); <br>
        0x03 / 0xF0 (6.3) </td>
        <td>
        <pre class="source">USHORT Available : 14;</pre>
        </td>
        <td>5.2 only </td>
        <td>last member in 5.2 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Available : 6;</pre>
        </td>
        <td>early 6.0 </td>
        <td>last member in early 6.0 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Available : 5;</pre>
        </td>
        <td>late 6.0 to 6.2 </td>
        <td>last member in late 6.0 to 6.2 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Available : 4;</pre>
        </td>
        <td>6.3 only </td>
        <td>last member in 6.3 </td>
      </tr>
      <tr>
        <td>0x03 / 0x10 (6.3 to 1607); <br>
        0x03 / 0x04 </td>
        <td>
        <pre class="source">UCHAR ForceAge : 1;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0x08 </td>
        <td>
        <pre class="source">UCHAR ForceTrim : 1;</pre>
        </td>
        <td>1703 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0x10 (1703) </td>
        <td>
        <pre class="source">UCHAR UnlockInProgress : 1;</pre>
        </td>
        <td>1703 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0x20 (10.0 to 1703); <br>
        0x03 / 0x10 </td>
        <td>
        <pre class="source">UCHAR NewMaximum : 1;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x03 / 0xC0 (10.0 to 1703); <br>
        0x03 / 0x60 </td>
        <td>
        <pre class="source">UCHAR CommitReleaseState : 2;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>last member in 10.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>See that discontinuing <span class="member">UnlockInProgress</span> for the 
  1709 release of Windows 10, and consequently shifting two higher-placed fields, 
  leaves the structure’s highest bit not just reserved or available but undefined.
  </p>
  <p>The 3-bit <span class="member">WorkingSetType</span> that was introduced for 
  version 6.1 takes its values from the <span class="enum">
  <a href="working_set_type.htm">WORKING_SET_TYPE</a></span> enumeration. The original 
  five types distinguish the containing <span class="struct">MMSUPPORT</span> as 
  a working set for a process or for a session or for one of three special cases 
  that the kernel keeps internally. With the addition of three internal types for 
  the 1803 release of Windows 10, the 3-bit mask is fully used. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 15th November 2016 but was not published 
    until 10th <a href="../../../../../../../new/17/10.htm">October 2017</a>. It 
    was last modified on 12th <a href="../../../../../../../new/22/07.htm">August 
    2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1722.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5053" -->
  </div>
</div>

</body>

</html>

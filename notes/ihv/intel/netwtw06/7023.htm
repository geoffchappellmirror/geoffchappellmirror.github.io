<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Netwtw06 Driver Spams System Event Log</title>
<link rel="stylesheet" type="text/css" href="../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/notes.css">
<script type="text/javascript" src="../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/notes.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript Header" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="57445" -->
<div class="Main">
  <h1>Netwtw06 Driver Spams System Event Log </h1>
  <div class="Abstract">
    <p>Some versions of an Intel® Wireless WiFi Link Driver are seen to flood the 
    System Event Log with hundreds and thousands of the same event in quick succession. 
    The event tells of nothing with system-wide importance, just of the driver’s 
    receipt of an Intel proprietary request. That Intel does this to its customers 
    plausibly has no reason other than thoughtless abuse. </p>
  </div>
  <p>One evening last week I got into my head that since Windows was getting ever 
  more insistent that I should reboot my laptop to complete the installation of 
  who know’s what updates even though a week surely hadn’t yet passed since Microsoft 
  last put me through this disruption of shutting down my work, I would better change 
  the irritation into opportunity. Since I anyway had a growing list of experiments 
  that I had long put off because they too would require a few restarts, now might 
  as well be their time. Part of this exercise had me open the Event Viewer to confirm 
  the several expected signs of the reconfigurations I was trying out and to check 
  that my intended changes hadn’t triggered any unexpected complaints. </p>
  <p>Perhaps you ask why I make a story of such a routine exercise as looking at 
  event logs. Doesn’t every capable Windows user keep an eye on at least the System 
  and Application event logs, if not the other Windows Logs, just in the self-interest 
  of being aware of what’s normal for their computer? Therein lies a second part 
  to my story, for I confess that I have fallen out of the habit. These logs just 
  aren't as useful as they were. It’s not that fewer types of events that go into 
  them are useful. If anything, the variety of events that get logged these days 
  is richer and more useful than ever. Yet the System and Application logs are sometimes 
  reduced almost to complete uselessness by mass repetitions of events that cannot 
  conceivably be the slightest use to anyone in such quantity, if at all. </p>
  <p>Time was that the Windows Logs could be relied on for a useful record of significant 
  events going back for months and even years. Mind you, in those halcyon days you 
  might reasonably expect that these logs would show no Error or even Warning in 
  a week of normal operation. Nowadays, even a fresh installation of Windows 10 
  comes with errors and warnings in the Application and System logs just from Microsoft 
  components that complain of being misconfigured. And Microsoft bears much blame 
  for the cluttering, too. Operate your computer in some way that does not fit Microsoft’s 
  notions of Windows as a service and you can easily find that your Application 
  log is all but entirely given over to recurring Information events from some service 
  that Microsoft pretty much insists you must run even if it can hardly ever run 
  usefully, e.g., because you deliberately keep your computer off the Internet. 
  But whether the cause is a service or an application, from Microsoft or not, acting 
  directly or indirectly, the unwelcome practical consequence is that your Application 
  log has soon lost all record of anything significant about other programs even 
  as recently as yesterday. Flooding the System log seems to be less common, thankfully, 
  but it does occasionally get done by some errant driver. </p>
  <p>Thus did it happen that I looked quickly at the System event log only to find 
  that it was full of events from Netwtw06—and not of some variety of events but 
  of just one event, 7023, logged every minute. These repeating instances of the 
  one event accounted for just short of 75% of all the events in the System log. 
  This one driver apparently thinks that this one piece of recurring information 
  that is very specific to this driver alone should have over 10 times the weight 
  of all the general-purpose system-level information from the various sources whose 
  names start with Kernel. I make this last comparison to emphasise, especially 
  in case you’re from Intel, how very, very arrogantly rude it is to write so much 
  of one vendor-specific thing to the primary shared repositories of significant 
  general-purpose events. </p>
  <p>Windows has long provided for special-purpose events to go to special-purpose 
  logs. It’s long past time that polluting the general-purpose logs was regarded 
  as unprofessional, at best. <span class="highlight">There is nothing but shame 
  in the standard practice of telling complainants that an event is harmless and 
  can safely be ignored.</span> Though a single event may tell of no harm in and 
  of itself, repeating it by the hundreds and thousands into the general-purpose 
  Windows Logs causes the significant harm of exhausting these ordinarily capacious 
  logs and robbing users of potentially valuable history. </p>
  <h2>Problem </h2>
  <p>On a Lenovo X1 Carbon with an “Intel(R) Dual Band Wireless-AC 8265” as its 
  built-in wireless network adapter, but presumably on other computers and network 
  adapters, you find <span class="highlight">the System event log is flooded with 
  events</span> for which: </p>
  <ul>
    <li>Source is Netwtw06; </li>
    <li>Event ID is 7023; </li>
    <li>the plain-text description is “7023 - Intel proprietary”. </li>
  </ul>
  <p>The relevance of the wireless network adapter is that the source of the event, 
  Netwtw06.sys, is an Intel® Wireless WiFi Link Driver, according to the description 
  in the driver’s resources. If you call up the Properties for your wireless network 
  adapter in the Device Manager and ask for the Driver Details, you will see Netwtw06.sys.
  </p>
  <h3>Intel Support </h3>
  <p>Even without thinking what can be meant by Netwtw06 being named as the Source 
  of the event, you might start typing Netwtw06 into Google. You may find, as I 
  did yesterday, 18th August, 2018, that Google’s type-ahead soon predicts “netwtw06 
  7023 intel proprietary”. So, you are not alone! Indeed,
  <a href="https://communities.intel.com/thread/123541">Wireless driver spamming 
  Windows Event Log</a> on Intel’s community site begins with an observation of 
  this same event recurring “every 9-11 seconds” on an “Intel Dual Band Wireless-AC 
  8260 chip on a Lenovo P50” in March 2018. Another participant reports 42,762 occurrences 
  of this event. Yet another, now in May, reports its recurrence “every minute”. 
  This “rate of 1 a minute” is observed independently for
  <a href="https://communities.intel.com/thread/124999">Intel Wireless Driver generating 
  unnecessary windows events</a>.. </p>
  <p>That you are not alone is no rescue. <span class="highlight">These threads 
  at Intel’s site are an embarrassing sample of how the software industry treats 
  its customers.</span> I do not mean anything critical of the individual who “posted 
  on behalf of Intel Corporation” and surely did mean to help. The poor guy was 
  likely just following his training about Intel’s practices, which seem at the 
  very least to be designed so that deflection and obtuseness face no disincentive 
  but initiative perhaps does. It would be sadly naive to hope that the name of 
  an Intel driver, a large-ish number and the text “Intel proprietary” are recognised 
  as specific identifiers to feed into a support database or even to pass directly 
  to the engineering team that would know why the event exists. No, there must first 
  be a standard collection of largely irrelevant information. Then there must be 
  a deflection: “we can’t prevent a driver from triggering events.” And then a shooting 
  of the messenger: “Event Viewer is not an Intel software, and event tracking cannot 
  be disabled from the driver”. Even after the patient, tactful user (gabe_luci) 
  points out that it is Intel’s software that provides the event and Intel’s software 
  developers who can stop doing so, Intel “can’t confirm if these events are part 
  of the driver design.” Seriously? What can be the point to “Intel proprietary” 
  in an Intel driver except that it’s by design? And, of course, the passing on 
  is still not to any engineer who might know immediately what 7023 ever signified 
  but is instead to “our business unit”. It goes on like this for some time. Intel, 
  please, lift your game! </p>
  <h2>Solution </h2>
  <p>It’s surely best to get to the good news now. <span class="highlight">The immediate 
  problem goes away in the 20.60.0.7 build.</span> Presumably, later builds will 
  be good too. </p>
  <p>The first of the Intel community threads that I cite above does by June 2018 
  proceed to announce with some authority the release of
  <a href="https://downloadcenter.intel.com/download/27849/Intel-PROSet-Wireless-Software-and-Drivers-for-Windows-10">
  Intel® PROSet/Wireless Software and Drivers for Windows® 10 version 20.60.0</a>, 
  though without explanation and indeed with curiously little confidence that the 
  new build actually does fix the problem. In what I downloaded from this link yesterday, 
  18th August, 2018, the NETWTW06.SYS driver has version 20.60.0.7. </p>
  <p>Of course, I do not say the problem goes away in version 20.60.0.7 merely because 
  I installed it and have found that the problem does not recur for me. No, I say 
  with certainty that the problem has gone away in this build because I know from 
  inspecting the binary that in some build between the 20.50.1.1 which I had been 
  using and the newly obtained 20.60.0.7, <span class="highlight">Intel removed 
  the one C++ statement that had the driver write event 7023 to the System log.</span>
  </p>
  <p>If you’re not a reverse engineer, then you can get some (much) lesser assurance 
  by searching these versions of the driver for “7023 - Intel proprietary” as Unicode 
  text. It’s gone from the new driver’s resources. And if that’s too much trouble, 
  then just install the new driver and make do with the observation, which hits 
  us all, that those tens of thousands of Netwtw06 events with Event ID 7023 that 
  were put into your System log by the old driver now come with complaints of how 
  “The description for Event ID 7023 from source Netwtw06 cannot be found.” Yes, 
  having spammed your System log with events that say nothing more helpful than 
  “Intel proprietary”, Intel “fixes” it by making all the existing events be even 
  more unhelpful. Were Intel not one of the innovators of integrated circuits and 
  still the market leader, you might reasonably wonder if they’re incompetent. What 
  we have instead is worse: disregard. </p>
  <p>Note also that I venture only that the <span class="emphasis">immediate</span> 
  problem goes away. Whatever caused earlier versions of the driver to write event 
  7023 to the System log very possibly still occurs. As I explain below, event 7023 
  means little more than that the driver received a network request from an Independent 
  Hardware Vendor (IHV) extensibility module. For all but a few of the many types 
  of these IHV requests, Intel’s driver writes event 7023. It’s at least a sound 
  proposition that different users were seeing the event from having received different 
  types of these requests and that some were seeing it from multiple types. It’s 
  possible, of course, that Intel has found some sources of these requests and has 
  reduced them or even eliminated them. It may also be possible that IHV requests 
  can be received from sources that have nothing directly to do with Intel or aren’t 
  even Intel’s to control. Either way, the one and only reason that you or anyone 
  else ever got Netwtw06 event 7023 in the System log is that Intel’s Netwtw06 put 
  it there, and the one and only reason that neither you nor anyone else can ever 
  see any repeat of event 7023 after updating to version 20.60.0.7 is that
  <span class="highlight">this build simply has no code for writing this event</span>.
  </p>
  <p>The wonder, of course, is that back at the coal face of customer support the 
  new build was presented only as something to try and see: “let us know if the 
  events keep showing up with the same frequency”. Intel’s programmers who work 
  on Netwtw06.sys must have known that the new version removes the code and cannot 
  write the event. That’s as conclusive as things ever are in software, so how could 
  such definiteness not feed back to the affected customers? Again, Intel, please 
  lift your game! </p>
  <h2>Explanation </h2>
  <p>The removed C++ statement is in a routine that Intel apparently names
  <span class="routine">osal::CCmdPropIhvRequest::execute</span>. This name is known 
  because Intel’s programmers carelessly leave it and many others in plain sight 
  as text for Windows Pre-Processor (WPP) tracing. This is remarkable because one 
  of the main attractions of WPP tracing is that the format strings of the trace 
  statements do not bloat the binary. They instead become annotations in the Program 
  Database (PDB) file, which is more commonly referred to as the symbol file. That 
  any one trace statement is at line number <span class="placeholder">x</span> in 
  some source file <span class="placeholder">y</span> and is within some routine
  <span class="placeholder">z</span> is in the symbol file, safely removed from 
  the prying eyes of reverse engineers. Yet here is an Intel driver in which many 
  of the WPP trace statements pass the name of the containing routine as an argument. 
  I don’t complain about the help, but I do observe that it’s misplaced: if Intel 
  wants to help, then ordinary users are more deserving than reverse engineers.
  </p>
  <p>Of course, that Intel names the routine to suggest execution for an IHV request 
  doesn’t mean that this is what the routine actually does, but inspection establishes 
  a flow of execution from the routine that Intel names <span class="routine">osal::CNdis::miniportOidRequest</span> 
  and which Netwtw06 registers with NDIS as its
  <span class="placeholder routine">
  <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/content/ndis/nc-ndis-miniport_oid_request">
  MiniportOidRequest</a></span> routine for handling what Microsoft’s NDIS documentation 
  refers to as an OID request, and the path from this entry point to
  <span class="routine">osal::CCmdPropIhvRequest::execute</span> is specifically 
  for handling requests whose <span class="member">Oid</span> in the
  <span class="struct">NDIS_OID_REQUEST</span> structure is
  <span class="constant">OID_WDI_IHV_REQUEST</span> (0xE440005D). </p>
  <p>This <span class="constant">OID_WDI_IHV_REQUEST</span> is intended as distinguishing 
  requests that an IHV extensibility DLL in user mode sends to a WLAN Device Driver 
  Interface (WDI) miniport driver in kernel mode. It’s new for Windows 10. My take 
  on it is that it continues Microsoft’s tidying of an old free-for-all of vendor-specific 
  OIDs in competition wiith system-defined OIDs, though for this purpose it seems 
  curiously under-documented by Microsoft and as much under-discussed in public 
  by others. (A Google search for <span class="constant">OID_WDI_IHV_REQUEST</span> 
  today, 26th August, turns up just three matches.) </p>
  <p>Though a WDI miniport driver for Windows 10 does not receive vendor-specific 
  OIDs directly in requests to its <span class="placeholder routine">MiniportOidRequest</span> 
  routine, it can keep to any old scheme of vendor-specific OIDs by packaging them 
  into the vendor-specific information that they pass with the system-defined
  <span class="constant">OID_WDI_IHV_REQUEST</span>. Thus do we get to the initial 
  work of <span class="routine">osal::CCmdPropIhvRequest::execute</span>, first 
  with the help of a member function named <span class="routine">prepareNicSpecificOidFromWdiIhvRequest</span> 
  to unpack the IHV request into the form of a request whose OID is the less new
  <span class="constant">OID_DOT811_NIC_SPECIFIC_EXTENSION</span>, and then with 
  the help of a routine named <span class="routine">oscMiniportTranslateProprietaryOid</span> 
  to unpack the request as Intel presumably intended all along. </p>
  <p>The very long table that follows lists the several hundred different OIDs that 
  Netwtw06 explicitly recognises in the unpacking of an IHV request. That I list 
  all these many OIDs is because I want you to take in the scale and variety, if 
  only as you scroll rapidly past. </p>
  <h3>Expected OIDs </h3>
  <p>For each OID in the table, an IHV request that has this OID gets non-trivial 
  OID-specific handling from Netwt06. For a relative handful that are marked “no” 
  in the right-hand column, Netwtw06 proceeds directly to this OID-specific handling. 
  For all the many others in the table, Netwtw06 first writes event 7023 to the 
  System event log. For any IHV request that Netwtw06 receives but whose unpacked 
  OID is not in the table, Netwtw06 also writes event 7023 to the System event log 
  but then fails the request as unsupported (specifically by returning the error 
  code <span class="constant">NDIS_STATUS_NOT_SUPPORTED</span>). </p>
  <table>
    <tr>
      <th>OID </th>
      <th>Symbol </th>
      <th>Event 7023 </th>
    </tr>
    <tr>
      <td>0x00010104 </td>
      <td><span class="constant">OID_GEN_MEDIA_IN_USE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x00010107 </td>
      <td><span class="constant">OID_GEN_LINK_SPEED</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0x01010101 </td>
      <td><span class="constant">OID_802_3_PERMANENT_ADDRESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x01010102 </td>
      <td><span class="constant">OID_802_3_CURRENT_ADDRESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010101 </td>
      <td><span class="constant">OID_802_11_BSSID</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010113 </td>
      <td><span class="constant">OID_802_11_ADD_WEP</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010114 </td>
      <td><span class="constant">OID_802_11_REMOVE_WEP</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010118 </td>
      <td><span class="constant">OID_802_11_AUTHENTICATION_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01011A </td>
      <td><span class="constant">OID_802_11_BSSID_LIST_SCAN</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01011B </td>
      <td><span class="constant">OID_802_11_ENCRYPTION_STATUS</span> <br>
      <span class="constant">OID_802_11_WEP_STATUS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01011C </td>
      <td><span class="constant">OID_802_11_RELOAD_DEFAULTS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01011D </td>
      <td><span class="constant">OID_802_11_ADD_KEY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01011E </td>
      <td><span class="constant">OID_802_11_REMOVE_KEY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01011F </td>
      <td><span class="constant">OID_802_11_ASSOCATION_INFORMATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010120 </td>
      <td><span class="constant">OID_802_11_TEST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010121 </td>
      <td><span class="constant">OID_802_11_MEDIA_STREAM_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010122 </td>
      <td><span class="constant">OID_802_11_CAPABILITY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010123 </td>
      <td><span class="constant">OID_802_11_PMKID</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010203 </td>
      <td><span class="constant">OID_802_11_NETWORK_TYPES_SUPPORTED</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010204 </td>
      <td><span class="constant">OID_802_11_NETWORK_TYPE_IN_USE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010206 </td>
      <td><span class="constant">OID_802_11_RSSI</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010207 </td>
      <td><span class="constant">OID_802_11_RSSI_TRIGGER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010209 </td>
      <td><span class="constant">OID_802_11_FRAGMENTATION_THRESHOLD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01020A </td>
      <td><span class="constant">OID_802_11_RTS_THRESHOLD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01020B </td>
      <td><span class="constant">OID_802_11_NUMBER_OF_ANTENNAS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01020C </td>
      <td><span class="constant">OID_802_11_RX_ANTENNA_SELECTED</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01020D </td>
      <td><span class="constant">OID_802_11_TX_ANTENNA_SELECTED</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01020E </td>
      <td><span class="constant">OID_802_11_SUPPORTED_RATES</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010210 </td>
      <td><span class="constant">OID_802_11_DESIRED_RATES</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010211 </td>
      <td><span class="constant">OID_802_11_CONFIGURATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010216 </td>
      <td><span class="constant">OID_802_11_POWER_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010217 </td>
      <td><span class="constant">OID_802_11_BSSID_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D01031E </td>
      <td><span class="constant">OID_DOT11_MAC_ADDRESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010702 </td>
      <td><span class="constant">OID_DOT11_CURRENT_ADDRESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0D010703 </td>
      <td><span class="constant">OID_DOT11_PERMANENT_ADDRESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x0E010280 </td>
      <td><span class="constant">OID_DOT11_PMKID_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF00070E </td>
      <td><span class="constant">OID_IWLAN_INITIATOR_DELBA_REQ</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF00070F </td>
      <td><span class="constant">OID_IWLAN_RECIPIENT_DELBA_REQ</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000711 </td>
      <td><span class="constant">OID_IWLAN_MMAC_ADDBA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000712 </td>
      <td><span class="constant">OID_IWLAN_MMAC_INITIATOR_DELBA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000713 </td>
      <td><span class="constant">OID_IWLAN_MMAC_REMOTE_BA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000714 </td>
      <td><span class="constant">OID_IWLAN_RX_BACK_DISABLED</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000715 </td>
      <td><span class="constant">OID_IWLAN_CALC_FRAME_DURATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000805 </td>
      <td><span class="constant">OID_IWLAN_SEND_MIMO_PS_HT_ACTION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000806 </td>
      <td><span class="constant">OID_IWLAN_SEND_TX_CHANNEL_WIDTH_HT_ACTION</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF000C06 </td>
      <td><span class="constant">OID_IWLAN_SET_UAPSD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF030FF0 </td>
      <td><span class="constant">OID_WIFI_SEND_MGMT_FRAME</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100000 </td>
      <td><span class="constant">OID_WIFI_ANTENNA_DIVERSITY</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100002 </td>
      <td><span class="constant">OID_WIFI_AP_BSS_ID</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100004 </td>
      <td><span class="constant">OID_WIFI_CHANNEL_ID</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100006 </td>
      <td><span class="constant">OID_WIFI_PROTOCOL_TYPE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100007 </td>
      <td><span class="constant">OID_WIFI_ADAPTER_DATA_RATES</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100008 </td>
      <td><span class="constant">OID_WIFI_BSS_PROBE_REQ_ADDTIONAL_IES</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100009 </td>
      <td><span class="constant">OID_WIFI_ASSOCIATION_STATUS</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF10000C </td>
      <td><span class="constant">OID_WIFI_DISASSOCIATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10000F </td>
      <td><span class="constant">OID_WIFI_POWER_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100010 </td>
      <td><span class="constant">OID_WIFI_TX_POWER_CONTROL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100011 </td>
      <td><span class="constant">OID_WIFI_POWER_SOURCE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100012 </td>
      <td><span class="constant">OID_WIFI_ADAPTER_STATISTICS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100013 </td>
      <td><span class="constant">OID_WIFI_FIRMWARE_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100014 </td>
      <td><span class="constant">OID_WIFI_ADAPTER_CONFIGURATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100015 </td>
      <td><span class="constant">OID_WIFI_DEVICE_INFORMATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100016 </td>
      <td><span class="constant">OID_WIFI_ADHOC_CHANNELS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100017 </td>
      <td><span class="constant">OID_WIFI_HARDWARE_RADIO_SWITCH</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100018 </td>
      <td><span class="constant">OID_WIFI_REGISTER_PROFILE_SERVICE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100019 </td>
      <td><span class="constant">OID_WIFI_CURRENT_PROFILE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10001A </td>
      <td><span class="constant">OID_WIFI_PROTOCOL_PREFERENCE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10001B </td>
      <td><span class="constant">OID_WIFI_BAND_PREFERENCE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10001F </td>
      <td><span class="constant">OID_WIFI_FEATURES_SUPPORTED</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100020 </td>
      <td><span class="constant">OID_WIFI_BSS_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100022 </td>
      <td><span class="constant">OID_SV_ANT_SAD_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100026 </td>
      <td><span class="constant">OID_WIFI_AUTHENTICATION_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100027 </td>
      <td><span class="constant">OID_WIFI_ENCRYPTION_STATUS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100028 </td>
      <td><span class="constant">OID_WIFI_CTS_TO_SELF</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100029 </td>
      <td><span class="constant">OID_WIFI_PREAMBLE_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100030 </td>
      <td><span class="constant">OID_WIFI_INTEL_PACKET_BURST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100031 </td>
      <td><span class="constant">OID_WIFI_ATIM_WINDOW_SIZE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100032 </td>
      <td><span class="constant">OID_WIFI_CURRENT_BAND</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100034 </td>
      <td><span class="constant">OID_WIFI_CISCO_LEAP_ROGUE_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100037 </td>
      <td><span class="constant">OID_WIFI_IS_INTEL_CARD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100038 </td>
      <td><span class="constant">OID_WIFI_CISCO_ENCRYPT_EAP_PKTS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100039 </td>
      <td><span class="constant">OID_WIFI_CISCO_CWMIN_CWMAX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10003A </td>
      <td><span class="constant">OID_WIFI_PLATFORM_MOTION_DETECTOR_STATE</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10003B </td>
      <td><span class="constant">OID_WIFI_PLATFORM_MOTION_DETECTION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100040 </td>
      <td><span class="constant">OID_WIFI_CISCO_MIXED_CELLS_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100041 </td>
      <td><span class="constant">OID_WIFI_CISCO_TPC</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100042 </td>
      <td><span class="constant">OID_WIFI_CISCO_ASSISTED_ROAMING</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100043 </td>
      <td><span class="constant">OID_WIFI_PROFILE_SECURITY_SETTINGS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100044 </td>
      <td><span class="constant">OID_WIFI_CISCO_RADIO_MEASURMENTS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100045 </td>
      <td><span class="constant">OID_WIFI_CISCO_CCX_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100046 </td>
      <td><span class="constant">OID_WIFI_CISCO_QoS_PARAMETER_SET_IE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100047 </td>
      <td><span class="constant">OID_WIFI_PROP_AUTHENTICATION_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100048 </td>
      <td><span class="constant">OID_WIFI_PROP_ENCRYPTION_STATUS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100049 </td>
      <td><span class="constant">OID_WIFI_ROAM_AGGRESSIVENESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100051 </td>
      <td><span class="constant">OID_WIFI_GET_CURRENT_POWER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100052 </td>
      <td><span class="constant">OID_WIFI_GET_POWER_LEVEL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100053 </td>
      <td><span class="constant">OID_WIFI_GET_CISCO_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100055 </td>
      <td><span class="constant">OID_WIFI_GET_CISCOACU_PARAMS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100056 </td>
      <td><span class="constant">OID_WIFI_SET_CLNTNAME_CISCOAP</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100110 </td>
      <td><span class="constant">OID_WIFI_GET_IWA_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100111 </td>
      <td><span class="constant">OID_WIFI_GET_EXCLUDE_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100112 </td>
      <td><span class="constant">OID_WIFI_ADD_EXCLUDED_AP</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100113 </td>
      <td><span class="constant">OID_WIFI_REMOVE_AP_FROM_EXCLUDE_LIST</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100114 </td>
      <td><span class="constant">OID_WIFI_CLEAR_EXCLUDE_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100115 </td>
      <td><span class="constant">OID_WIFI_EXCLUDE_ENABLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100116 </td>
      <td><span class="constant">OID_WIFI_11K_RADIO_MEASURMENTS_STATE</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100117 </td>
      <td><span class="constant">OID_WIFI_11K_RADIO_MEASURMENTS_REQUEST</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100118 </td>
      <td><span class="constant">OID_WIFI_AD_HOC_CONNECTION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100119 </td>
      <td><span class="constant">OID_WIFI_ACK_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100120 </td>
      <td><span class="constant">OID_WIFI_IBSS_QOS_STYLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100121 </td>
      <td><span class="constant">OID_WIFI_ANT_RSSI</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100122 </td>
      <td><span class="constant">OID_WIFI_CURR_RSSI_ACTIVE_AP</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100123 </td>
      <td><span class="constant">OID_WIFI_NMPR_STATS_STATUS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100124 </td>
      <td><span class="constant">OID_WIFI_NMPR_CLOCK_SYNC_STATUS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100132 </td>
      <td><span class="constant">OID_WIFI_VOW_FEATURES_SUPPORT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100133 </td>
      <td><span class="constant">OID_WIFI_MAIN_UPDATE_IES</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100134 </td>
      <td><span class="constant">OID_WIFI_GET_IWT_NOISE_DATA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100135 </td>
      <td><span class="constant">OID_WIFI_SET_IWT_SAMPLE_VALID_PERIOD</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100136 </td>
      <td><span class="constant">OID_WIFI_APP_DRV_INTERFACE_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100137 </td>
      <td><span class="constant">OID_WIFI_ISV_SNIFFER_STATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10013A </td>
      <td><span class="constant">OID_WIFI_11N_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10013B </td>
      <td><span class="constant">OID_WIFI_11N_CHANNEL_MODE_52</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10013C </td>
      <td><span class="constant">OID_WIFI_11N_FAT_CHANNEL_INTOLERANT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100140 </td>
      <td><span class="constant">OID_WIFI_APP_SET_ASSOC_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100141 </td>
      <td><span class="constant">OID_WIFI_CCX_SDK_KEEP_ALIVE_REFRESH</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100142 </td>
      <td><span class="constant">OID_WIFI_CCX_SDK_SEND_PACKET</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100143 </td>
      <td><span class="constant">OID_WIFI_CCX_SDK_NEIGHBOR_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100144 </td>
      <td><span class="constant">OID_WIFI_CCX_SDK_DIRECTED_ROAM</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100145 </td>
      <td><span class="constant">OID_WIFI_CCX_SDK_RM_REQUEST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100150 </td>
      <td><span class="constant">OID_WIFI_CCX_SDK_TSF</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100152 </td>
      <td><span class="constant">OID_WIFI_CCX_SDK_LAST_BCN_TIME</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100153 </td>
      <td><span class="constant">OID_WIFI_11N_CHANNEL_MODE_24</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100301 </td>
      <td><span class="constant">OID_WIFI_COEX_SDK_SCAN_ERROR_CODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100302 </td>
      <td><span class="constant">OID_WIFI_BT_COEX_BT_ACTIVE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100303 </td>
      <td><span class="constant">OID_WIFI_BT_COEX_WLAN_ACTIVE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100304 </td>
      <td><span class="constant">OID_WIFI_BT_COEX_FORCE_SHARED_ANT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100305 </td>
      <td><span class="constant">OID_WIFI_SET_PTA_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100355 </td>
      <td><span class="constant">OID_WIFI_TIMINGMSMT_RQ_REQUEST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100356 </td>
      <td><span class="constant">OID_WIFI_TIMINGMSMT_REQUEST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100357 </td>
      <td><span class="constant">OID_WIFI_TIMINGMSMT_PTM_WA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100380 </td>
      <td><span class="constant">OID_WIFI_AP_AVERAGE_BEACON_RSSI</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100381 </td>
      <td><span class="constant">OID_WIFI_DEVICE_SENSITIVITY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100382 </td>
      <td><span class="constant">OID_WIFI_DEVICE_SENSITIVITY_SETTINGS</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100400 </td>
      <td><span class="constant">OID_WIFI_GENERIC_DEBUG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100450 </td>
      <td><span class="constant">OID_WIFI_MCC_API_TEST_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100451 </td>
      <td><span class="constant">OID_WIFI_MCC_CONFIGURATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100460 </td>
      <td><span class="constant">OID_WIFI_SAR_CONFIGURATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100461 </td>
      <td><span class="constant">OID_WIFI_GEO_OFFSET_CONFIGURATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100462 </td>
      <td><span class="constant">OID_WIFI_SAR_CONFIG_BIOS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100463 </td>
      <td><span class="constant">OID_WIFI_SAR_CONFIG_PSENSOR</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100464 </td>
      <td><span class="constant">OID_WIFI_GEO_OFFSET_CONFIG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100465 </td>
      <td><span class="constant">OID_WIFI_SAR_CONFIG_PSENSOR_VER_2</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100524 </td>
      <td><span class="constant">OID_WIFI_RX_FILTER_CONFIG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100525 </td>
      <td><span class="constant">OID_WIFI_BEACON_CHANGE_IND_CONFIG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100530 </td>
      <td><span class="constant">OID_WIFI_PEER_STAT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100540 </td>
      <td><span class="constant">OID_WIFI_NETDETECT_PROFILES_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100541 </td>
      <td><span class="constant">OID_WIFI_WAKE_REASON</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100542 </td>
      <td><span class="constant">OID_WIFI_NETDETECT_HOTSPOTS_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100543 </td>
      <td><span class="constant">OID_WIFI_REMOTE_WAKE_CONFIG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100544 </td>
      <td><span class="constant">OID_WIFI_ARP_OFFLOAD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100546 </td>
      <td><span class="constant">OID_WIFI_REMOTE_WAKE_API_VS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100550 </td>
      <td><span class="constant">OID_WIFI_INSTANT_CONNECT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100600 </td>
      <td><span class="constant">OID_WIFI_11AC_NIC_CAPABILITIES</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10060B </td>
      <td><span class="constant">OID_WFDE_SET_PREFERRED_OPERATING_CHANEL</span>
      </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF10060D </td>
      <td><span class="constant">OID_WFDE_WFA_SIGMA_SET_GO_NOA_PARAMETERS</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100800 </td>
      <td><span class="constant">OID_WIFI_WAPI_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100801 </td>
      <td><span class="constant">OID_WIFI_WAPI_SET_ADD_CIPHER_KEYS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100802 </td>
      <td><span class="constant">OID_WIFI_SET_KEEPALIVE_PACKET</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100803 </td>
      <td><span class="constant">OID_WIFI_WAKE_ON_TUNNEL_PACKET</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100804 </td>
      <td><span class="constant">OID_WIFI_SET_ORBWEB_PACKETS</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100805 </td>
      <td><span class="constant">OID_WIFI_APP_SET_WOWLAN_CONFIGURATION</span>
      </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100806 </td>
      <td><span class="constant">OID_WIFI_APP_GET_WOWLAN_CONFIGURATION</span>
      </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100807 </td>
      <td><span class="constant">OID_WIFI_APP_GET_WAKE_DATA</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100808 </td>
      <td><span class="constant">OID_WIFI_P2P_GO_PREFERRED_CHANNEL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100809 </td>
      <td><span class="constant">OID_WIFI_P2P_GO_RESET_PREFERRED_CHANNEL</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10080A </td>
      <td><span class="constant">OID_WIFI_P2P_GO_QUERY_OPERATING_CHANNEL</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10080B </td>
      <td><span class="constant">OID_WIFI_P2P_GO_QUERY_SUPPORTED_CHANNELS</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10080C </td>
      <td><span class="constant">OID_WIFI_P2P_DISCOVER_FILTER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10080D </td>
      <td><span class="constant">OID_WIFI_P2P_REMOVE_DISCOVER_FILTER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10080E </td>
      <td><span class="constant">OID_WIFI_LEGACY_GO_SCAN_FILTER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF10080F </td>
      <td><span class="constant">OID_WIFI_RESET_LEGACY_GO_SCAN_FILTER</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100810 </td>
      <td><span class="constant">OID_WIFI_S5_CONFIG</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100811 </td>
      <td><span class="constant">OID_WIFI_SCAN_OPTIMIZATIONS_CONFIG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100812 </td>
      <td><span class="constant">OID_WIFI_BSS_LINK_STATISTICS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100E20 </td>
      <td><span class="constant">OID_PSM_CORE_SET_P_STATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100E21 </td>
      <td><span class="constant">OID_PSM_CORE_GET_TEMPERATURE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100E22 </td>
      <td><span class="constant">OID_PSM_CORE_GET_CURRENT_P_STATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100E23 </td>
      <td><span class="constant">OID_PSM_CORE_GET_SUPPORTED_P_STATES</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100E24 </td>
      <td><span class="constant">OID_PSM_CORE_TEMPERATURE_BOUNDARIES</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100E29 </td>
      <td><span class="constant">OID_TT_SIMULATOR</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F02 </td>
      <td><span class="constant">OID_WIFI_ALLOWED_TX_ANTENNAS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F04 </td>
      <td><span class="constant">OID_WIFI_WEB_ENABLED</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF100F05 </td>
      <td><span class="constant">OID_WIFI_COEX_20_40_SEND_REPORT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F06 </td>
      <td><span class="constant">OID_WIFI_DPPM</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F07 </td>
      <td><span class="constant">OID_WIFI_ADAPTER_MAXIMUM_TXPOWER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F08 </td>
      <td><span class="constant">OID_WIFI_SAR_PSENSOR_EXTENDED_HID</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F11 </td>
      <td><span class="constant">OID_INTEL_LTE_COEX_MODEM_STATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F12 </td>
      <td><span class="constant">OID_INTEL_LTE_COEX_CONFIG_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F13 </td>
      <td><span class="constant">OID_INTEL_LTE_COEX_DYNAMIC_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F14 </td>
      <td><span class="constant">OID_INTEL_LTE_COEX_REPORTED_CHANNEL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F15 </td>
      <td><span class="constant">OID_INTEL_LTE_COEX_SPS_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F16 </td>
      <td><span class="constant">OID_INTEL_LTE_COEX_WIFI_PREFERRED_CHANNELS</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF100F17 </td>
      <td><span class="constant">OID_INTEL_LTE_COEX_GET_ASSOC_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400000 </td>
      <td><span class="constant">OID_SV_API_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400001 </td>
      <td><span class="constant">OID_SV_DIRECT_ACCESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400002 </td>
      <td><span class="constant">OID_SV_INDIRECT_ACCESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400003 </td>
      <td><span class="constant">OID_SV_PCI_CFG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400004 </td>
      <td><span class="constant">OID_SV_EEPROM</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400005 </td>
      <td><span class="constant">OID_SV_LOG_LEVEL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400006 </td>
      <td><span class="constant">OID_SV_LOG_BUFFER_DESC</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400007 </td>
      <td><span class="constant">OID_SV_COMMAND</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400008 </td>
      <td><span class="constant">OID_SV_RESPONSE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400009 </td>
      <td><span class="constant">OID_SV_RESET_DRIVER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40000A </td>
      <td><span class="constant">OID_SV_DRV_OBJ_ADDR</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40000B </td>
      <td><span class="constant">OID_SV_DRV_MEM</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40000E </td>
      <td><span class="constant">OID_SV_CONTINUOUS_TX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40000F </td>
      <td><span class="constant">OID_SV_RX_HDR_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400011 </td>
      <td><span class="constant">OID_SV_ORDINAL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400012 </td>
      <td><span class="constant">OID_SV_EEPROM_MAX_TX_POWER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400013 </td>
      <td><span class="constant">OID_SV_STA_CONFIGURATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400014 </td>
      <td><span class="constant">OID_SV_SET_STA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400015 </td>
      <td><span class="constant">OID_SV_RX_ON_STATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400016 </td>
      <td><span class="constant">OID_SV_SNR</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400017 </td>
      <td><span class="constant">OID_SV_TX_CMD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400019 </td>
      <td><span class="constant">OID_SV_POWER_TARGET_CONTROL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40001A </td>
      <td><span class="constant">OID_SV_RADAR_THRESHOLD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40001D </td>
      <td><span class="constant">OID_SV_RELOAD_CHANNELS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40001F </td>
      <td><span class="constant">OID_SV_JAWS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400021 </td>
      <td><span class="constant">OID_SV_CONNECTION_PRIORITY_SWITCH</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400022 </td>
      <td><span class="constant">OID_SV_SET_STA_FLAGS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400023 </td>
      <td><span class="constant">OID_SV_TLC_THRESHOLDS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400024 </td>
      <td><span class="constant">OID_SV_TLC_PARAMETERS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400028 </td>
      <td><span class="constant">OID_SV_VHT_OPERATING_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400029 </td>
      <td><span class="constant">OID_SV_RLC_PARAMETERS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40002A </td>
      <td><span class="constant">OID_SV_OID_BA_HISTORY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40002B </td>
      <td><span class="constant">OID_SV_LINK_QUAL_CMD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40002C </td>
      <td><span class="constant">OID_SV_EEPROM_BURN_QUERY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40002D </td>
      <td><span class="constant">OID_SV_LOG_MODULE_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40002E </td>
      <td><span class="constant">OID_SV_TX_LOOP</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40002F </td>
      <td><span class="constant">OID_SV_STA_CONFIG_NEW</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40003A </td>
      <td><span class="constant">OID_SV_THERMAL_MANAGEMENT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40003C </td>
      <td><span class="constant">OID_SV_DRV_API_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40003D </td>
      <td><span class="constant">OID_SV_DEVICE_SW_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400044 </td>
      <td><span class="constant">OID_SV_SET_RATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400050 </td>
      <td><span class="constant">OID_SV_READ_EEPROM</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400051 </td>
      <td><span class="constant">OID_SV_EEPROM_COMMIT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400052 </td>
      <td><span class="constant">OID_SV_NVM_TYPE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400053 </td>
      <td><span class="constant">OID_SV_EEPROM_HIGH</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400054 </td>
      <td><span class="constant">OID_SV_EEPROM_COMMIT_HIGH</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400060 </td>
      <td><span class="constant">OID_SV_TX_FILTER_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400061 </td>
      <td><span class="constant">OID_SV_TX_LINEARITY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400070 </td>
      <td><span class="constant">OID_SV_BF_TRIGGER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400071 </td>
      <td><span class="constant">OID_SV_BF_RESULT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400072 </td>
      <td><span class="constant">OID_SV_READ_BFEE_MATRIX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400073 </td>
      <td><span class="constant">OID_SV_UPLOAD_BFEE_MATRIX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400080 </td>
      <td><span class="constant">OID_SV_XVT_GET_CALIB_DATA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400083 </td>
      <td><span class="constant">OID_SV_SEND_TX_TEMP_GAIN_TABLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400084 </td>
      <td><span class="constant">OID_SV_ADD_CH_CALIB_DATA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400085 </td>
      <td><span class="constant">OID_SV_PHY_CTX_SWITCH</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400086 </td>
      <td><span class="constant">OID_SV_TRIGGER_ADC_SAMPLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400087 </td>
      <td><span class="constant">OID_SV_ADC_SAMPLE_QUERY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400088 </td>
      <td><span class="constant">OID_SV_DTS_TRIGGER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400089 </td>
      <td><span class="constant">OID_SV_GET_SUPPORTED_CALIBRATIONS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40008A </td>
      <td><span class="constant">OID_SV_USE_DEFAULT_TXPWR_TABLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40008B </td>
      <td><span class="constant">OID_SV_DIAGNOSTICS_EVENTS</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF400090 </td>
      <td><span class="constant">OID_SV_SYSTEM_MONITOR_CONFIG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400091 </td>
      <td><span class="constant">OID_SV_SYSTEM_MONITOR_DATA_REQ</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400092 </td>
      <td><span class="constant">OID_SV_DRIVER_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400093 </td>
      <td><span class="constant">OID_SV_REGULATORY_DATA_QUERY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400094 </td>
      <td><span class="constant">OID_SV_DTS_TRIGGER_DRIVER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400100 </td>
      <td><span class="constant">OID_SV_STA_TBL_FLD_TX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400102 </td>
      <td><span class="constant">OID_SV_STA_TBL_FLD_SECURITY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400103 </td>
      <td><span class="constant">OID_SV_BSS_TBL_FLD_SECURITY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400104 </td>
      <td><span class="constant">OID_SV_KEY_TBL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400106 </td>
      <td><span class="constant">OID_SV_BSS_TBL_FLD_POLICY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400108 </td>
      <td><span class="constant">OID_SV_QOS_PER_STA_PER_TID_DATA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400109 </td>
      <td><span class="constant">OID_SV_CHANNEL_TBL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400110 </td>
      <td><span class="constant">OID_SV_BT_COEX_PROFILE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400111 </td>
      <td><span class="constant">OID_SV_BT_PROFILE_NOTIFICATION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400120 </td>
      <td><span class="constant">OID_SV_UCODE_TRACE_STOP_SAMPLING</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400121 </td>
      <td><span class="constant">OID_SV_CLOCKS_INIT_OFDM_MIB</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400122 </td>
      <td><span class="constant">OID_SV_CLOCKS_INIT_CCK_MIB</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400123 </td>
      <td><span class="constant">OID_SV_CLOCKS_INIT_ANALOG_MIB</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400126 </td>
      <td><span class="constant">OID_SV_PM_ADD_WOL_PATTERN</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400127 </td>
      <td><span class="constant">OID_SV_PM_ADD_PROTOCOL_OFFLOAD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400129 </td>
      <td><span class="constant">OID_SV_ND_HOTSPOTS_DEBUG_QUERY_DATA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40012A </td>
      <td><span class="constant">OID_SV_START_PSEUDO_S3</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40012C </td>
      <td><span class="constant">OID_SV_SET_POWER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40012D </td>
      <td><span class="constant">OID_SV_PM_PARAMETERS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40012E </td>
      <td><span class="constant">OID_SV_D3_MANAGER_DEBUG_CONFIG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40012F </td>
      <td><span class="constant">OID_SV_NET_DETECT_DEBUG_QUERY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400130 </td>
      <td><span class="constant">OID_SV_QUERY_ERROR_LOG</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400131 </td>
      <td><span class="constant">OID_SV_ERROR_LOG_ENABLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400132 </td>
      <td><span class="constant">OID_SV_QUERY_MMAC_DEBUG_DUMP</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400136 </td>
      <td><span class="constant">OID_SV_D3_MANGER_DEBUG_QUERY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40013A </td>
      <td><span class="constant">OID_SV_ENABLE_INDICATIONS_TO_SV</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40013B </td>
      <td><span class="constant">OID_SV_QUERY_TFD_QUEUES_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40013E </td>
      <td><span class="constant">OID_SV_OVERRIDE_TARGET_TX_POWER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40013F </td>
      <td><span class="constant">OID_SV_OVERRIDE_TX_POWER_RADIO_CONFIG</span>
      </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400140 </td>
      <td><span class="constant">OID_SV_GET_TX_POWER_INFO</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400144 </td>
      <td><span class="constant">OID_SV_SET_LPRX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400146 </td>
      <td><span class="constant">OID_SV_CONTINUOUS_WAVE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400148 </td>
      <td><span class="constant">OID_GENERAL_PURPOSE_UT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400190 </td>
      <td><span class="constant">OID_SV_FLUSH_DDD_RECORDS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400191 </td>
      <td><span class="constant">OID_SV_DDD_INSERT_PLAYER_BREAKPOINT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400200 </td>
      <td><span class="constant">OID_SV_WIFI_CORE_RESET</span> <br>
      <span class="constant">OID_SV_SET_DATA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400201 </td>
      <td><span class="constant">OID_SV_INDIRECT_ACCESS_EX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400202 </td>
      <td><span class="constant">OID_SV_NVM_CACHE_WRITE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400203 </td>
      <td><span class="constant">OID_SV_NVM_CACHE_COMMIT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400204 </td>
      <td><span class="constant">OID_SV_NVM_CACHE_READ</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400205 </td>
      <td><span class="constant">OID_SV_OTP_TEST_AREA</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400206 </td>
      <td><span class="constant">OID_SV_GET_SET_PHY_DB</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400207 </td>
      <td><span class="constant">OID_SV_LMAC_BUS_ACCESS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400208 </td>
      <td><span class="constant">OID_SV_EVM_METER_MEASUREMENT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400209 </td>
      <td><span class="constant">OID_SV_RUNTIME_CAL_HANDLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40020A </td>
      <td><span class="constant">OID_SV_NVM_CACHE_GETSIZE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40020B </td>
      <td><span class="constant">OID_SV_MOTION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40020E </td>
      <td><span class="constant">OID_SV_RX_PACKET_FILTER</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF40020F </td>
      <td><span class="constant">OID_SV_RLG_FLUSH_LOG_FILE</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF400210 </td>
      <td><span class="constant">OID_SV_APPLICATION_PRINT</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF400220 </td>
      <td><span class="constant">OID_SV_ANT_DRV_API_VERSION</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400221 </td>
      <td><span class="constant">OID_SV_ANT_COUPLING</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400302 </td>
      <td><span class="constant">OID_SV_EXECUTE_SNIFFER_CMD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400303 </td>
      <td><span class="constant">OID_SV_CONFIG_FW_DEBUG_CAP</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF400650 </td>
      <td><span class="constant">OID_SV_WFD_ROLES_INFO</span> </td>
      <td>no </td>
    </tr>
    <tr>
      <td>0xFF600101 </td>
      <td><span class="constant">OID_INTEL_ISV_PMODE_ENABLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF600102 </td>
      <td><span class="constant">OID_INTEL_ISV_PMODE_DISABLE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF600103 </td>
      <td><span class="constant">OID_INTEL_ISV_CHANNEL_LIST</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF600104 </td>
      <td><span class="constant">OID_INTEL_ISV_PMODE_BAND_CHANNEL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF600105 </td>
      <td><span class="constant">OID_INTEL_ISV_ASSOCIATION_STATUS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF600106 </td>
      <td><span class="constant">OID_INTEL_ISV_PMODE_PACKET_SLICE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF600107 </td>
      <td><span class="constant">OID_INTEL_ISV_CURRENT_BAND_CHANNEL</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF600108 </td>
      <td><span class="constant">OID_INTEL_ISV_PMODE_BAND_CHANNEL_EX</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF700000 </td>
      <td><span class="constant">OID_SV_TLC_FIXED_RATE_UPDATE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFF800000 </td>
      <td><span class="constant">OID_XVT_IWL_CMD_HCMD</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFA0070A </td>
      <td><span class="constant">OID_IWLAN_QOS_UAPSD_DEEP_SLEEP_MODE</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC101 </td>
      <td><span class="constant">MH_OID_CCX_RAP_STATUS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC103 </td>
      <td><span class="constant">MH_OID_CCX_MIXED_CELLS</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC105 </td>
      <td><span class="constant">MH_OID_CCX_8021X</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC106 </td>
      <td><span class="constant">MH_OID_CCX_8021X_RESULT</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC107 </td>
      <td><span class="constant">MH_OID_CCX_ADD_KRK</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC108 </td>
      <td><span class="constant">MH_OID_CCX_REMOVE_KRK</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC180 </td>
      <td><span class="constant">MH_OID_KEY_CAPABILITY</span> </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0xFFEDC182 </td>
      <td><span class="constant">MH_OID_KEY_MATERIAL</span> </td>
      <td>&nbsp;</td>
    </tr>
  </table>
  <p>The symbols are Intel’s, from two tables that Netwtw06 has specifically for 
  OIDs that are unpacked from IHV requests. For the low-numbered OIDs, these names 
  are the same as defined in Microsoft’s NTDDNDIS.H and WINDOT11.H headers. OIDs 
  whose high byte is 0xFF are vendor-specific. For these, the only known symbols 
  are Intel’s. MEASURMENTS is reproduced correctly: if it is a mis-spelling, it 
  is Intel’s. The driver’s tables of OIDs for IHV requests repeat each OID 0x0D01011B 
  and 0xFF400200, and give two symbolic names each. The OIDs 0xFF400144 and 0xFF400190 
  also appear twice each in the tables, but with only one name each. </p>
  <p>By the way, the list above looks to be the first publication of Intel’s names 
  for its vendor-specific OIDs. More than few suggest interesting functionality 
  that might usefully be examined for exploitability. That they are published here 
  is not to help with that but is just for critical analysis of the nuisance that 
  Intel made of writing its event 7023 into the System log in such unjustifiable 
  quantity. </p>
  <h3>Writing Event 7023 </h3>
  <p>Please take in the table and its interpretation: Netwtw06 event 7023 in the 
  System event log means just that the Netwtw06 driver received an IHV request—or, 
  if you like, an “Intel proprietary” request—that wasn’t one of a handful of types 
  that are presumably too frequent or unremarkable to be worth logging. </p>
  <p>Take in this notion of worth. Intel’s programmers perhaps don’t think that 
  an event in the System log has any cost or needs to pull its weight, but neither 
  can they have believed that mere receipt of each of these very many different 
  types of IHV request has any sort of system-wide significance. Still, let’s be 
  generous. We might, just about, accept a driver writing something of no system-wide 
  significance to the System log, and even writing the same thing over and over 
  to the System log, if the event data at least recorded something distinctive about 
  the cause so that it has diagnostic value. </p>
  <p>Do we get at least this diagnostic value for Intel in exchange for Intel’s 
  spamming of our System log? No, different types of IHV request are distinguished 
  by different OIDs, which are only 32-bit, yet Intel’s programmers somehow didn’t 
  trouble to include the OID with the event data. They could have easily enough. 
  They just didn’t. The way that Netwtw06 writes event 7023 to the System log is 
  by calling the documented NDIS function <span class="function">
  <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/content/ndis/nf-ndis-ndiswriteerrorlogentry">
  NdisWriteErrorLogEntry</a></span>. This provides for passing one of 15 defined 
  error codes and some number (up to some limit) of arbitrary unsigned 32-bit values. 
  How many and what they mean is up to the caller. Netwtw06 passes exactly one extra 
  value. You can see it at the end of the EventData for every event 7023. It’s always 
  the same in all your tens of thousands of these events because it’s hard-coded 
  into the driver: 0x56524457 as an integer or WDRV as text. So, not only does Netwtw06 
  event 7023 in the System event log mean just that the Netwtw06 driver received 
  pretty much any IHV request, but it doesn't even have the (minimal) diagnostic 
  value of recording which type! </p>
  <p>Again, we might be generous. Hard-working programmers missed that the function 
  they call provides an opportunity for increased diagnostic value. Not everyone 
  sees everything. But Intel’s programmers don’t have just the sin of omission, 
  having missed what the function might have done for them: they also have a sin 
  of commission, having stretched what the function is meant to do. Think again 
  of those 15 defined error codes. Microsoft doesn’t have the function enforce that 
  only those 15 are permitted. Microsoft’s documentation didn’t start specifying 
  just these 15 until the Windows Driver Kit (WDK) for Windows 7, a decade ago. 
  But it is conspicuous that all 15 are error codes. As events every one of them 
  is at the Error level, not Warning and certainly not Information, let alone Verbose. 
  Although earlier documentation does suggest that the error code for
  <span class="function">NdisWriteErrorLogEntry</span> can be any “<span class="constant">NDIS_STATUS_<span class="placeholder">XXX</span></span> 
  code describing the I/O error”, Intel’s programmers don’t even keep to that. To 
  write event 7023, they make up their own error codes: in this case 0x40001B6F, 
  being the event ID in combination with 0x40000000 to indicate the Information 
  level. They must have known all along that they were abusing this function to 
  write to the System log things that were not as substantial as the function existed 
  to help with. And if they didn’t know it from stretching what the documentation 
  might mean by an error code or by an “<span class="constant">NDIS_STATUS_<span class="placeholder">XXX</span></span> 
  code”, they surely ought to have known from the documentation’s Comments. A lot 
  of Microsoft’s documentation barely adds to the prototypes from the C-language 
  headers, which is very poor of Microsoft, but on the plus side is that where Microsoft 
  does provide comments and remarks of any substance, they mostly are worth heeding. 
  Microsoft’s documentation of <span class="function">NdisWriteErrorLogEntry</span> 
  from at least as far back as the MSDN Library dated January 1999 is very plain:
  </p>
  <blockquote>
    Logging an I/O error at every possible opportunity is not particularly helpful 
    to users either, so a miniport should log only critical I/O errors that can 
    help a user or system administrator to debug a network failure for which the 
    NIC is responsible on a particular machine or a configuration resource conflict 
    discovered during driver initialization</blockquote>
  <p><span class="highlight">There is, of course, no sense in which Netwtw06 event 
  7023 is any sort of critical I/O error, even in one occurrence, let alone by the 
  hundreds and thousands.</span> If you’ve been spammed by Intel’s driver, then 
  I can’t see any reasonable disagreement that Intel owes you an apology. The bar 
  is so low in this industry, however, that many would count it a reasonable excuse 
  that Intel has been no worse than any other. Still, from the customer support 
  all the way back to the programming, Intel has put on a poor show. Please, Intel, 
  lift your game. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 19th
    <a href="../../../../new/18/08.htm">August 2018</a> and was last modified on 
    30th March 2020. </p>
    <!--webbot bot="Include" U-Include="../../../_include/c1820.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2018-2020. Geoff Chappell. All rights reserved. 
<a href="../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="49200" -->
  </div>
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>PROCESSOR_POWER_STATE</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>PROCESSOR_POWER_STATE </h1>
  <p>Starting with Windows 2000, a <span class="struct">PROCESSOR_POWER_STATE</span> 
  structure (formally <span class="struct">_PROCESSOR_POWER_STATE</span>) is nested 
  within the <span class="struct"><a href="../kprcb.htm">KPRCB</a></span> for each 
  logical processor. It is thought to have no self-standing existence. </p>
  <p>The <span class="struct">PROCESSOR_POWER_STATE</span> is a highly variable 
  implementation detail for the kernel. It might ordinarily be worth attention only 
  as an aid to debugging very particular sorts of problems, except for the very 
  curious point that Microsoft seems to have regarded it initially as not internal.
  </p>
  <h2>Documentation Status </h2>
  <p>A C-language definition appeared in NTPOAPI.H from the Device Driver Kit (DDK) 
  for Windows XP, albeit in a directory of headers that are specific to targeting 
  Windows 2000 (and in another for Windows Me, which is a different operating system 
  of no concern here). What’s noteworthy is not just that this definition for Windows 
  2000 is the only definition that Microsoft has ever disclosed but also that Microsoft 
  keeps disclosing it. Even as late as the Windows Driver Kit (WDK) for Windows 
  10, which to a large extent forces programmers to target nothing older than Windows 
  7, NTPOAPI.H has the C-language definition of <span class="struct">PROCESSOR_POWER_STATE</span> 
  for Windows 2000. It’s in a conditional compilation block with a comment “win2k 
  only”, but why does it remain? Why, even, did Microsoft ever publish it? </p>
  <p>Though Microsoft is not known to have published a C-language definition of 
  the <span class="struct">PROCESSOR_POWER_STATE</span> for any other version, the 
  practical equivalent for all versions starting with Windows 2000 SP3 is readily 
  available as type information in public symbol files for the kernel. </p>
  <h2>Variability </h2>
  <p>Whatever wider use may have been intended for the <span class="struct">PROCESSOR_POWER_STATE</span> 
  in Windows 2000, or even while preparing the DDK for Windows XP, the structure 
  was evidently soon regarded as internal in the sense that nothing of its layout 
  need be preserved from one build to another. Indeed, it was all but completely 
  redesigned as soon as Windows Vista, and nearly as much again for Windows 7.
  </p>
  <p>In the following table which summarises the variability just from its changing 
  size, different builds of the same version are distinguished as early and late 
  because they are known to vary the structure even if they don’t change the size. 
  These descriptions, as early and late, are then used throughout the article as 
  a shorthand. Even this does not suffice for versions 5.1 and 5.2, whose last service 
  packs (SP3 and SP2, respectively) brought their own small variations. </p>
  <table class="Sizes">
    <colgroup>
      <col class="Version"><col class="Size" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Version </th>
        <th>Size (x86) </th>
        <th>Size (x64) </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>5.0 </td>
        <td>0x88 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>early 5.1 (before SP2); <br>
        late 5.1 ; <br>
        early 5.2 (before SP1); <br>
        late 5.2 </td>
        <td>0x0120 </td>
        <td>0x0170 </td>
      </tr>
      <tr>
        <td>early 6.0 (before SP1) </td>
        <td>0xE0 </td>
        <td>0x0138 </td>
      </tr>
      <tr>
        <td>late 6.0 </td>
        <td>0xC8 </td>
        <td>0x0118 </td>
      </tr>
      <tr>
        <td>6.1 </td>
        <td>0xC8 </td>
        <td>0x0100 </td>
      </tr>
      <tr>
        <td>6.2 </td>
        <td>0x0180 </td>
        <td>0x01C8 </td>
      </tr>
      <tr>
        <td>6.3 </td>
        <td>0x0190 </td>
        <td>0x01E0 </td>
      </tr>
      <tr>
        <td>10.0 to 1607 </td>
        <td>0x0180 </td>
        <td>0x01D0 </td>
      </tr>
      <tr>
        <td>1703 </td>
        <td>0x0180 </td>
        <td>0x01D8 </td>
      </tr>
      <tr>
        <td>1709 to 2004 </td>
        <td>0x01A8 </td>
        <td>0x0200 </td>
      </tr>
    </tbody>
  </table>
  <h2>Layout </h2>
  <p>The changes in size do not even hint at the scale of reorganisation within. 
  The <span class="struct">PROCESSOR_POWER_STATE</span> is here taken as three different 
  structures. Through all the tables that follow, names, types and offsets are from 
  public symbol files. </p>
  <h3>Original (Before Windows Vista) </h3>
  <p>For some sense of how much the structure (and thus processor power management 
  as a feature) was reworked for Windows Vista, look for how few of the members 
  that are defined for version 5.0 are still in the structure for version 6.0.
  </p>
  <table class="Struct">
    <colgroup>
      <col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>
        <pre class="source">VOID 
(FASTCALL *IdleFunction) (
    PROCESSOR_POWER_STATE *);</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>next at 0x00 </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>0x08 </td>
        <td>
        <pre class="source">ULONG Idle0KernelTimeLimit;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>0x0C </td>
        <td>
        <pre class="source">ULONG Idle0LastTime;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>0x10 </td>
        <td>
        <pre class="source">PVOID IdleHandlers;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0C (5.0); <br>
        0x10 </td>
        <td>0x18 </td>
        <td>
        <pre class="source">PVOID IdleState;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x14 </td>
        <td>0x20 </td>
        <td>
        <pre class="source">ULONG IdleHandlersCount;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x10 (5.0); <br>
        0x18 </td>
        <td>0x28 </td>
        <td>
        <pre class="source">ULONGLONG LastCheck;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x18 (5.0); <br>
        0x20 </td>
        <td>0x30 </td>
        <td>
        <pre class="source">PROCESSOR_IDLE_TIMES IdleTimes;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>next at 0x18 and 0x20 </td>
      </tr>
      <tr>
        <td>0x38 (5.0); <br>
        0x40 </td>
        <td>0x50 </td>
        <td>
        <pre class="source">ULONG IdleTime1;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x3C (5.0); <br>
        0x44 </td>
        <td>0x54 </td>
        <td>
        <pre class="source">ULONG PromotionCheck;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x40 (5.0); <br>
        0x48 </td>
        <td>0x58 </td>
        <td>
        <pre class="source">ULONG IdleTime2;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x44 (5.0); <br>
        0x4C </td>
        <td>0x5C </td>
        <td>
        <pre class="source">UCHAR CurrentThrottle;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x45 (5.0); <br>
        0x4D </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">UCHAR ThrottleLimit;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x5D </td>
        <td>
        <pre class="source">UCHAR ThermalThrottleLimit;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x46 (5.0); <br>
        0x4E </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">UCHAR Spare1 [2];</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x5E </td>
        <td>
        <pre class="source">UCHAR CurrentThrottleIndex;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x4F </td>
        <td>0x5F </td>
        <td>
        <pre class="source">UCHAR ThermalThrottleIndex;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="3">0x48 (5.0); <br>
        0x50 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG SetMember;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG PerfSystemTime;</pre>
        </td>
        <td>early 5.1; <br>
        early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x60 </td>
        <td>
        <pre class="source">ULONG LastKernelUserTime;</pre>
        </td>
        <td>late 5.1; <br>
        late 5.2 </td>
        <td>next at 0x40 and 0x50 </td>
      </tr>
      <tr>
        <td rowspan="3">0x54 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">PVOID AbortThrottle;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x64 </td>
        <td>
        <pre class="source">ULONG PerfIdleTime;</pre>
        </td>
        <td>5.1 before SP3; <br>
        5.2 before SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG LastIdleThreadKernelTime;</pre>
        </td>
        <td>5.1 SP3; <br>
        5.2 SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x50 (5.0); <br>
        0x58 </td>
        <td rowspan="2">0x68 </td>
        <td>
        <pre class="source">ULONGLONG DebugDelta;</pre>
        </td>
        <td>5.0; <br>
        5.1 before SP3; <br>
        5.2 before SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG PackageIdleStartTime;</pre>
        </td>
        <td>5.1 SP3; <br>
        5.2 SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x5C </td>
        <td>0x6C </td>
        <td>
        <pre class="source">ULONG PackageIdleTime;</pre>
        </td>
        <td>5.1 SP3; <br>
        5.2 SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x58 (5.0); <br>
        0x60 </td>
        <td>0x70 </td>
        <td>
        <pre class="source">ULONG DebugCount;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x5C (5.0); <br>
        0x64 </td>
        <td>0x74 </td>
        <td>
        <pre class="source">ULONG LastSysTime;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>next at 0xA8 and 0xF0 </td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="member">IdleFunction</span> is called whenever the kernel 
  is in its idle loop but the processor has no <span class="member">NextThread</span> 
  to run. NTPOAPI.H defines <span class="type">PROCESSOR_IDLE_FUNCTION</span> for 
  such a function’s prototype. </p>
  <p>Though <span class="member">IdleHandlers</span> is defined as a pointer to
  <span class="type">void</span>, what it points to is an array of
  <span class="struct">POP_IDLE_HANDLER</span> structures. These are built from 
  information that can be supplied from outside the kernel through the
  <span class="function">ZwPowerInformation</span> function when given
  <span class="constant">ProcessorStateHandler</span> or <span class="constant">
  ProcessorStateHandler2</span> (starting in version 5.1) as its information level. 
  Both these information levels are failed trivially in version 6.0 and higher.
  </p>
  <p>The <span class="member">LastSysTime</span> is the only original member that 
  survives even to Windows 7. </p>
  <p>Version 5.0 ends the structure with 0x28 spare bytes, presumably to allow for 
  expansion. This turns out to have been far too small. it got used for two arrays, 
  beyond which the structures gets many new members. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2">0x60 (5.0); <br>
        0x68 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG Spare2 [10];</pre>
        </td>
        <td>5.0 only </td>
      </tr>
      <tr>
        <td>0x78 </td>
        <td>
        <pre class="source">ULONGLONG TotalIdleStateTime [3];</pre>
        </td>
        <td>5.1 to 5.2 </td>
      </tr>
      <tr>
        <td>0x80 </td>
        <td>0x90 </td>
        <td>
        <pre class="source">ULONG TotalIdleTransitions [3];</pre>
        </td>
        <td>5.1 to 5.2 </td>
      </tr>
    </tbody>
  </table>
  <h4>Appended for Windows XP </h4>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x90 </td>
        <td>0xA0 </td>
        <td>
        <pre class="source">ULONGLONG PreviousC3StateTime;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x98 </td>
        <td>0xA8 </td>
        <td>
        <pre class="source">UCHAR KneeThrottleIndex;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x99 </td>
        <td>0xA9 </td>
        <td>
        <pre class="source">UCHAR ThrottleLimitIndex;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x9A </td>
        <td>0xAA </td>
        <td>
        <pre class="source">UCHAR PerfStatesCount;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x9B </td>
        <td>0xAB </td>
        <td>
        <pre class="source">UCHAR ProcessorMinThrottle;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x9C </td>
        <td>0xAC </td>
        <td>
        <pre class="source">UCHAR ProcessorMaxThrottle;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x9D </td>
        <td rowspan="2">0xAD </td>
        <td>
        <pre class="source">UCHAR LastBusyPercentage;</pre>
        </td>
        <td>5.1 before SP3; <br>
        5.2 before SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR EnableIdleAccounting;</pre>
        </td>
        <td>5.1 SP3; <br>
        5.2 SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x9E </td>
        <td>0xAE </td>
        <td>
        <pre class="source">UCHAR LastC3Percentage;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x9F </td>
        <td>0xAF </td>
        <td>
        <pre class="source">UCHAR LastAdjustedBusyPercentage;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xA0 </td>
        <td>0xB0 </td>
        <td>
        <pre class="source">ULONG PromotionCount;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xA4 </td>
        <td>0xB4 </td>
        <td>
        <pre class="source">ULONG DemotionCount;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xA8 </td>
        <td>0xB8 </td>
        <td>
        <pre class="source">ULONG ErrorCount;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xAC </td>
        <td>0xBC </td>
        <td>
        <pre class="source">ULONG RetryCount;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB0 </td>
        <td>0xC0 </td>
        <td>
        <pre class="source">ULONG Flags;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB8 </td>
        <td>0xC8 </td>
        <td>
        <pre class="source">LARGE_INTEGER PerfCounterFrequency;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xC0 </td>
        <td>0xD0 </td>
        <td>
        <pre class="source">ULONG PerfTickCount;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xC8 </td>
        <td>0xD8 </td>
        <td>
        <pre class="source">KTIMER PerfTimer;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>next at 0x60 and 0x70 </td>
      </tr>
      <tr>
        <td>0xF0 </td>
        <td>0x0118 </td>
        <td>
        <pre class="source">KDPC PerfDpc;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>next at 0x88 and 0xB0 </td>
      </tr>
      <tr>
        <td>0x0110 </td>
        <td>0x0158 </td>
        <td>
        <pre class="source">PROCESSOR_PERF_STATE *PerfStates;</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>next (with type change) at 0x3C and 0x48 </td>
      </tr>
      <tr>
        <td>0x0114 </td>
        <td>0x0160 </td>
        <td>
        <pre class="source">NTSTATUS 
(FASTCALL *PerfSetThrottle) (
    UCHAR);</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0118 </td>
        <td>0x0168 </td>
        <td>
        <pre class="source">ULONG LastC3KernelUserTime;</pre>
        </td>
        <td>late 5.1; <br>
        late 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x0118 (early 5.1, early 5.2); <br>
        0x011C (5.1 SP2, 5.2 SP1) </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG Spare1 [2];</pre>
        </td>
        <td>early 5.1; <br>
        early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x016C </td>
        <td>
        <pre class="source">ULONG Spare1 [1];</pre>
        </td>
        <td>5.1 SP2; <br>
        5.2 SP1 l</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x011C </td>
        <td>0x016C </td>
        <td>
        <pre class="source">ULONG LastPackageIdleTime;</pre>
        </td>
        <td>5.1 SP3; <br>
        5.2 SP2 </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3>Windows Vista </h3>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 (early 6.0) </td>
        <td>0x00 (early 6.0) </td>
        <td>
        <pre class="source">VOID 
(FASTCALL *IdleFunction) (
    PROCESSOR_POWER_STATE *);</pre>
        </td>
        <td>early 6.0 </td>
        <td>previously at 0x00 </td>
      </tr>
      <tr>
        <td>0x04 (early (6.0); <br>
        0x00 </td>
        <td>0x08 (early 6.0); <br>
        0x00 </td>
        <td>
        <pre class="source">PPM_IDLE_STATES *IdleStates;</pre>
        </td>
        <td>6.0 </td>
        <td>next at 0x00 </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>0x10 (early 6.0); <br>
        0x08 </td>
        <td>
        <pre class="source">ULONGLONG LastTimeCheck;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x10 </td>
        <td rowspan="2">0x18 (early 6.0); <br>
        0x10 </td>
        <td>
        <pre class="source">ULONGLONG LastIdleTime;</pre>
        </td>
        <td>early 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONGLONG IdleTimeAccumulated;</pre>
        </td>
        <td>late 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x18 </td>
        <td rowspan="2">0x20 (early 6.0); <br>
        0x18 </td>
        <td>
        <pre class="source">PROCESSOR_IDLE_TIMES IdleTimes;</pre>
        </td>
        <td>early 6.0 </td>
        <td>previously at 0x20 and 0x30 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    struct {
        ULONGLONG IdleTransitionTime;
    } Native;
    struct {
        ULONGLONG LastIdleCheck;
    } Hv;
};</pre>
        </td>
        <td>late 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x38 (early 6.0); <br>
        0x20 </td>
        <td>0x40 (early 6.0); <br>
        0x20 </td>
        <td>
        <pre class="source">PPM_IDLE_ACCOUNTING *IdleAccounting;</pre>
        </td>
        <td>6.0 </td>
        <td>next (with type change) at 0x04 and 0x08 </td>
      </tr>
      <tr>
        <td>0x3C (early 6.0); <br>
        0x24 </td>
        <td>0x48 (early 6.0); <br>
        0x28 </td>
        <td>
        <pre class="source">PPM_PERF_STATES *PerfStates;</pre>
        </td>
        <td>6.0 </td>
        <td>previously (with type change) at 0x0110 and 0x0158 </td>
      </tr>
      <tr>
        <td>0x40 (early 6.0); <br>
        0x28 </td>
        <td>0x50 (early 6.0); <br>
        0x30 </td>
        <td>
        <pre class="source">ULONG LastKernelUserTime;</pre>
        </td>
        <td>6.0 </td>
        <td>previously at 0x50 and 0x60 </td>
      </tr>
      <tr>
        <td>0x44 (early 6.0); <br>
        0x2C </td>
        <td>0x54 (early 6.0); <br>
        0x34 </td>
        <td>
        <pre class="source">ULONG LastIdleThreadKTime;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x48 (early 6.0); <br>
        0x30 </td>
        <td>0x58 (early 6.0); <br>
        0x38 </td>
        <td>
        <pre class="source">ULONGLONG LastGlobalTimeHv;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x50 (early 6.0); <br>
        0x38 </td>
        <td>0x60 (early 6.0); <br>
        0x40 </td>
        <td>
        <pre class="source">ULONGLONG LastProcessorTimeHv;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x58 (early 6.0); <br>
        0x40 </td>
        <td>0x68 (early 6.0); <br>
        0x48 </td>
        <td>
        <pre class="source">UCHAR ThermalConstraint;</pre>
        </td>
        <td>6.0 </td>
        <td>next at 0x2C and 0x30 </td>
      </tr>
      <tr>
        <td>0x59 (early 6.0); <br>
        0x41 </td>
        <td>0x69 (early 6.0); <br>
        0x49 </td>
        <td>
        <pre class="source">UCHAR LastBusyPercentage;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x5A (early 6.0); <br>
        0x42 </td>
        <td>0x6A (early 6.0); <br>
        0x4A </td>
        <td>
        <pre class="source">union {
    USHORT AsUSHORT;
    struct {
        USHORT PStateDomain : 1;                // 0x0001
        USHORT PStateDomainIdleAccounting : 1;  // 0x0002
        USHORT Reserved : 14;
    };
} Flags;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x60 (early 6.0); <br>
        0x48 </td>
        <td>0x70 (early 6.0); <br>
        0x50 </td>
        <td>
        <pre class="source">KTIMER PerfTimer;</pre>
        </td>
        <td>6.0 </td>
        <td>previously at 0xC8 and 0xD8 </td>
      </tr>
      <tr>
        <td>0x88 (early 6.0); <br>
        0x70 </td>
        <td>0xB0 (early 6.0); <br>
        0x90 </td>
        <td>
        <pre class="source">KDPC PerfDpc;</pre>
        </td>
        <td>6.0 </td>
        <td>previously at 0xF0 and 0x0118 </td>
      </tr>
      <tr>
        <td>0xA8 (early 6.0); <br>
        0x90 </td>
        <td>0xF0 (early 6.0); <br>
        0xD0 </td>
        <td>
        <pre class="source">ULONG LastSysTime;</pre>
        </td>
        <td>6.0 </td>
        <td>previously at 0x64 and 0x74; <br>
        next at 0x30 and 0x34 </td>
      </tr>
      <tr>
        <td>0xAC (early 6.0); <br>
        0x94 </td>
        <td>0xF8 (early 6.0); <br>
        0xD8 </td>
        <td>
        <pre class="source">KPRCB *PStateMaster;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB0 (early 6.0); <br>
        0x98 </td>
        <td>0x0100 (early 6.0); <br>
        0xE0 </td>
        <td>
        <pre class="source">ULONG_PTR PStateSet;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB4 (early 6.0); <br>
        0x9C </td>
        <td>0x0108 (early 6.0); <br>
        0xE8 </td>
        <td>
        <pre class="source">ULONG CurrentPState;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB8 (early 6.0) </td>
        <td>0x010C </td>
        <td>
        <pre class="source">ULONG Reserved0;</pre>
        </td>
        <td>early 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xBC (early 6.0); <br>
        0xA0 </td>
        <td>0x0110 (early 6.0); <br>
        0xEC </td>
        <td>
        <pre class="source">ULONG DesiredPState;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xC0 (early 6.0) </td>
        <td>0x0114 </td>
        <td>
        <pre class="source">ULONG Reserved1;</pre>
        </td>
        <td>early 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xC4 (early 6.0); <br>
        0xA4 </td>
        <td>0x0118 (early 6.0); <br>
        0xF0 </td>
        <td>
        <pre class="source">ULONG volatile PStateIdleStartTime;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xC8 (early 6.0); <br>
        0xA8 </td>
        <td>0x011C (early 6.0); <br>
        0xF4 </td>
        <td>
        <pre class="source">ULONG PStateIdleTime;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xCC (early 6.0); <br>
        0xAC </td>
        <td>0x0120 (early 6.0); <br>
        0xF8 </td>
        <td>
        <pre class="source">ULONG LastPStateIdleTime;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xD0 (early 6.0); <br>
        0xB0 </td>
        <td>0x0124 (early 6.0); <br>
        0xFC </td>
        <td>
        <pre class="source">ULONG PStateStartTime;</pre>
        </td>
        <td>6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB4 </td>
        <td>0x0100 </td>
        <td>
        <pre class="source">ULONG DiaIndex;</pre>
        </td>
        <td>late 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB8 </td>
        <td>0x0104 </td>
        <td>
        <pre class="source">ULONG Reserved0;</pre>
        </td>
        <td>late 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xD4 (early 6.0); <br>
        0xBC </td>
        <td>0x0128 (early 6.0); <br>
        0x0108 </td>
        <td>
        <pre class="source">ULONG_PTR WmiDispatchPtr;</pre>
        </td>
        <td>6.0 </td>
        <td>next at 0x34 and 0x38 </td>
      </tr>
      <tr>
        <td>0xD8 (early 6.0); <br>
        0xC0 </td>
        <td>0x0130 (early 6.0); <br>
        0x0110 </td>
        <td>
        <pre class="source">LONG WmiInterfaceEnabled;</pre>
        </td>
        <td>6.0 </td>
        <td>next at 0x38 and 0x40 </td>
      </tr>
    </tbody>
  </table>
  <h3>Windows 7 and Higher </h3>
  <p>Changes since Windows 7 have mostly been a matter of inserting, redefining 
  or appending. There has been some reordering, however: see that
  <span class="member">IdleAccounting</span> got moved forward for Windows 8.
  </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>
        <pre class="source">PPM_IDLE_STATES *IdleStates;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>prevously at 0x04 and 0x08 </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>0x08 </td>
        <td>
        <pre class="source">PROC_IDLE_ACCOUNTING *IdleAccounting;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>previously at 0x20 </td>
      </tr>
      <tr>
        <td>0x08 (6.2) </td>
        <td>0x10 (6.2) </td>
        <td>
        <pre class="source">PLATFORM_IDLE_ACCOUNTING *PlatformIdleAccounting;</pre>
        </td>
        <td>6.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x08 (6.1); <br>
        0x10 (6.2); <br>
        0x08 </td>
        <td>0x08 (6.1); <br>
        0x18 (6.2); <br>
        0x10 </td>
        <td>
        <pre class="source">ULONGLONG IdleTimeLast;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x10 (6.1); <br>
        0x18 (6.2); <br>
        0x10 </td>
        <td>0x10 (6.1); <br>
        0x20 (6.2); <br>
        0x18 </td>
        <td>
        <pre class="source">ULONGLONG IdleTimeTotal;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x18 (6.1); <br>
        0x20 (6.2); <br>
        0x18 </td>
        <td>0x18 (6.1); <br>
        0x28 (6.2); <br>
        0x20 </td>
        <td>
        <pre class="source">ULONGLONG IdleTimeEntry;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x20 (6.1) </td>
        <td>0x20 (6.1) </td>
        <td>
        <pre class="source">PROC_IDLE_ACCOUNTING *IdleAccounting;</pre>
        </td>
        <td>6.1 only </td>
        <td>previously (with type change) at 0x20; <br>
        next at 0x04 and 0x08 </td>
      </tr>
      <tr>
        <td rowspan="2">0x28 (6.2); <br>
        0x20 </td>
        <td rowspan="2">0x30 (6.2); <br>
        0x28 </td>
        <td>
        <pre class="source">ULONGLONG Reserved;</pre>
        </td>
        <td>6.2 to 6.3 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONGLONG IdleTimeExpiration;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x28 </td>
        <td>0x30 </td>
        <td>
        <pre class="source">UCHAR NonInterruptibleTransition;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x29 </td>
        <td>0x31 </td>
        <td>
        <pre class="source">UCHAR PepWokenTransition;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="3">0x2A </td>
        <td rowspan="3">0x32 </td>
        <td>
        <pre class="source">UCHAR Class;</pre>
        </td>
        <td>10.0 to 1511 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR EfficiencyClass;</pre>
        </td>
        <td>1607 to 1803 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR HvTargetState;</pre>
        </td>
        <td>1809 and higher </td>
        <td>previously at 0x014D and 0x01A1 </td>
      </tr>
      <tr>
        <td rowspan="3">0x2B </td>
        <td rowspan="3">0x33 </td>
        <td>
        <pre class="source">UCHAR SchedulingClass;</pre>
        </td>
        <td>1607 to 1803 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Reserved;</pre>
        </td>
        <td>1809 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR SoftParked;</pre>
        </td>
        <td>2004 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x2C </td>
        <td>0x34 </td>
        <td>
        <pre class="source">ULONG TargetIdleState;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x30 (6.2); <br>
        0x28 (6.3); <br>
        0x30 </td>
        <td>0x38 (6.2); <br>
        0x30 (6.3); <br>
        0x38 </td>
        <td>
        <pre class="source">PROC_IDLE_POLICY IdlePolicy;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x38 (6.2); <br>
        0x30 (6.3); <br>
        0x38 </td>
        <td>0x40 (6.2); <br>
        0x38 (6.3); <br>
        0x40 </td>
        <td>
        <pre class="source">PPM_IDLE_SYNCHRONIZATION_STATE volatile Synchronization;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x40 (6.2); <br>
        0x38 (6.3); <br>
        0x40 </td>
        <td>0x48 (6.2); <br>
        0x40 (6.3); <br>
        0x48 </td>
        <td>
        <pre class="source">PROC_FEEDBACK PerfFeedback;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x24 (6.1); <br>
        0xA8 (6.2); <br>
        0xA0 (6.3); <br>
        0xC8 </td>
        <td>0x28 (6.1); <br>
        0xB8 (6.2); <br>
        0xB0 (6.3); <br>
        0xD8 </td>
        <td>
        <pre class="source">PROC_HYPERVISOR_STATE Hypervisor;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x28 (6.1) </td>
        <td>0x2C (6.1) </td>
        <td>
        <pre class="source">ULONG PerfHistoryTotal;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x2C (6.1) </td>
        <td>0x30 (6.1) </td>
        <td>
        <pre class="source">UCHAR ThermalConstraint;</pre>
        </td>
        <td>6.1 only </td>
        <td>previously at 0x40 and 0x48 </td>
      </tr>
      <tr>
        <td>0x2D (6.1) </td>
        <td>0x31 (6.1) </td>
        <td>
        <pre class="source">UCHAR PerfHistoryCount;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x2E (6.1) </td>
        <td>0x32 (6.1) </td>
        <td>
        <pre class="source">UCHAR PerfHistorySlot;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x2F (6.1) </td>
        <td>0x33 (6.1) </td>
        <td>
        <pre class="source">UCHAR Reserved;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x30 (6.1); <br>
        0xAC (6.2); <br>
        0xA4 (6.3); <br>
        0xCC </td>
        <td>0x34 (6.1); <br>
        0xBC (6.2); <br>
        0xB4 (6.3); <br>
        0xDC </td>
        <td>
        <pre class="source">ULONG LastSysTime;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>previously at 0x90 and 0xD0 </td>
      </tr>
      <tr>
        <td>0x34 (6.1); <br>
        0xB0 (6.2); <br>
        0xA8 (6.3); <br>
        0xD0 </td>
        <td>0x38 (6.1); <br>
        0xC0 (6.2); <br>
        0xB8 (6.3); <br>
        0xE0 </td>
        <td>
        <pre class="source">ULONG_PTR WmiDispatchPtr;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>previously at 0xBC and 0x0108 </td>
      </tr>
      <tr>
        <td>0x38 (6.1); <br>
        0xB4 (6.2); <br>
        0xAC (6.3); <br>
        0xD4 </td>
        <td>0x40 (6.1); <br>
        0xC8 (6.2); <br>
        0xC0 (6.3); <br>
        0xE8 </td>
        <td>
        <pre class="source">LONG WmiInterfaceEnabled;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>previously at 0xC0 and 0x0110 </td>
      </tr>
      <tr>
        <td>0x40 (6.1); <br>
        0xB8 (6.2); <br>
        0xB0 (6.3); <br>
        0xD8 </td>
        <td>0x48 (6.1); <br>
        0xD0 (6.2); <br>
        0xC8 (6.3); <br>
        0xF0 </td>
        <td>
        <pre class="source">PPM_FFH_THROTTLE_STATE_INFO FFHThrottleStateInfo;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x60 (6.1); <br>
        0xD8 (6.2); <br>
        0xD0 (6.3); <br>
        0xF8 </td>
        <td>0x68 (6.1); <br>
        0xF0 (6.2); <br>
        0xE8 (6.3); <br>
        0x0110 </td>
        <td>
        <pre class="source">KDPC PerfActionDpc;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x80 (6.1); <br>
        0xF8 (6.2); <br>
        0xF0 (6.3); <br>
        0x0118 </td>
        <td>0xA8 (6.1); <br>
        0x0130 (6.2); <br>
        0x0128 (6.3); <br>
        0x0150 </td>
        <td>
        <pre class="source">LONG volatile PerfActionMask;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x88 (6.1); <br>
        0x0100 (6.2); <br>
        0xF8 (6.3); <br>
        0x0120 </td>
        <td rowspan="2">0xB0 (6.1); <br>
        0x0138 (6.2); <br>
        0x0130 (6.3); <br>
        0x0158 </td>
        <td>
        <pre class="source">PROC_IDLE_SNAP IdleCheck;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">PROC_IDLE_SNAP HvIdleCheck;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="4">0x98 (6.1); <br>
        0x0110 (6.2); <br>
        0x0108 (6.3); <br>
        0x0130 </td>
        <td rowspan="4">0xC0 (6.1); <br>
        0x0148 (6.2); <br>
        0x0140 (6.3); <br>
        0x0168 </td>
        <td>
        <pre class="source">PROC_IDLE_SNAP PerfCheck;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">PROC_PERF_SNAP PerfCheck;</pre>
        </td>
        <td>6.2 to 6.3 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">PROC_PERF_CHECK *PerfCheck;</pre>
        </td>
        <td>10.0 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">PROC_PERF_CHECK_CONTEXT CheckContext;</pre>
        </td>
        <td>2004 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xA8 (6.1); <br>
        0x0150 (6.2); <br>
        0x0148 (6.3); <br>
        0x0134 (10.0 to 1903) </td>
        <td>0xD0 (6.1); <br>
        0x0188 (6.2); <br>
        0x0180 (6.3); <br>
        0x0170 (10.0 to 1903) </td>
        <td>
        <pre class="source">PROC_PERF_DOMAIN *Domain;</pre>
        </td>
        <td>6.1 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xAC (6.1); <br>
        0x0154 (6.2); <br>
        0x014C (6.3); <br>
        0x0138 (10.0 to 1903) </td>
        <td>0xD8 (6.1); <br>
        0x0190 (6.2); <br>
        0x0188 (6.3); <br>
        0x0178 (10.0 to 1903) </td>
        <td>
        <pre class="source">PROC_PERF_CONSTRAINT *PerfConstraint;</pre>
        </td>
        <td>6.1 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0158 (6.2); <br>
        0x0150 (6.3); <br>
        0x013C (10.0 to 1903); <br>
        0x0158 </td>
        <td>0x0198 (6.2); <br>
        0x0190 (6.3); <br>
        0x0180 (10.0 to 1903); <br>
        0x01A8 </td>
        <td>
        <pre class="source">PPM_CONCURRENCY_ACCOUNTING *Concurrency;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0140 (1703 to 1903); <br>
        0x015C </td>
        <td>0x0188 (1703 to 1903); <br>
        0x01B0 </td>
        <td>
        <pre class="source">PPM_CONCURRENCY_ACCOUNTING *ClassConcurrency;</pre>
        </td>
        <td>1703 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB0 (6.1); <br>
        0x015C (6.2); <br>
        0x0154 (6.3); <br>
        0x0140 (10.0 to 1607); <br>
        0x0144 (1703 to 1903) </td>
        <td>0xE0 (6.1); <br>
        0x01A0 (6.2); <br>
        0x0198 (6.3); <br>
        0x0188 (10.0 to 1607); <br>
        0x0190 (1703 to 1903) </td>
        <td>
        <pre class="source">PROC_PERF_LOAD *Load;</pre>
        </td>
        <td>6.1 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xB4 (6.1); <br>
        0x0160 (6.2); <br>
        0x0158 (6.3); <br>
        0x0144 (10.0 to 1607); <br>
        0x0148 (1703 to 1903) </td>
        <td>0xE8 (6.1); <br>
        0x01A8 (6.2); <br>
        0x01A0 (6.3); <br>
        0x0190 (10.0 to 1607); <br>
        0x0198 (1703 to 1903) </td>
        <td>
        <pre class="source">PROC_HISTORY_ENTRY *PerfHistory;</pre>
        </td>
        <td>6.1 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x014C (1809 to 1903); <br>
        0x0160 </td>
        <td>0x01A0 (1809 to 1903); <br>
        0x01B8 </td>
        <td>
        <pre class="source">UCHAR ArchitecturalEfficiencyClass;</pre>
        </td>
        <td>1809 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x014D (1809 to 1903); <br>
        0x0161 </td>
        <td>0x01A1 (1809 to 1903); <br>
        0x01B9 </td>
        <td>
        <pre class="source">UCHAR PerformanceSchedulingClass;</pre>
        </td>
        <td>1809 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x014E (1809 to 1903); <br>
        0x0162 </td>
        <td>0x01A2 (1809 to 1903); <br>
        0x01BA </td>
        <td>
        <pre class="source">UCHAR EfficiencySchedulingClass;</pre>
        </td>
        <td>1809 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x0164 (6.2); <br>
        0x015C (6.3); <br>
        0x0148 (10.0 to 1607); <br>
        0x014C (1703 to 1803); <br>
        0x014F (1809 to 1903); <br>
        0x0163 </td>
        <td rowspan="2">0x01B0 (6.2); <br>
        0x01A8 (6.3); <br>
        0x0198 (10.0 to 1607); <br>
        0x01A0 (1703 to 1803); <br>
        0x01A3 (1809 to 1903); <br>
        0x01BB </td>
        <td>
        <pre class="source">UCHAR GuaranteedPerformancePercent;</pre>
        </td>
        <td>6.2 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Unused;</pre>
        </td>
        <td>2004 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0165 (6.2); <br>
        0x015D (6.3); <br>
        0x0149 (10.0 to 1607); <br>
        0x014D (1703 to 1803) </td>
        <td>0x01B1 (6.2); <br>
        0x01A9 (6.3); <br>
        0x0199 (10.0 to 1607); <br>
        0x01A1 (1703 to 1803) </td>
        <td>
        <pre class="source">UCHAR HvTargetState;</pre>
        </td>
        <td>6.2 to 1803 </td>
        <td>next at 0x2A and 0x32 </td>
      </tr>
      <tr>
        <td>0x0166 (6.2); <br>
        0x015E (6.3); <br>
        0x014A (10.0 to 1607); <br>
        0x014E (1703 to 1803); <br>
        0x0150 (1809 to 1903); <br>
        0x0164 </td>
        <td>0x01B2 (6.2); <br>
        0x01AA (6.3); <br>
        0x019A (10.0 to 1607); <br>
        0x01A2 (1703 to 1803); <br>
        0x01A4 (1809 to 1903); <br>
        0x01BC </td>
        <td>
        <pre class="source">UCHAR Parked;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0167 (6.2); <br>
        0x015F (6.3) </td>
        <td>0x01B3 (6.2); <br>
        0x01AB (6.3) </td>
        <td>
        <pre class="source">UCHAR OverUtilitized;</pre>
        </td>
        <td>6.2 to 6.3 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x014F (1709 to 1803); <br>
        0x0151 (1809 to 1903); <br>
        0x0165 </td>
        <td>0x01A3 (1709 to 1803); <br>
        0x01A5 (1809 to 1903); <br>
        0x01BD </td>
        <td>
        <pre class="source">UCHAR LongPriorQosPeriod;</pre>
        </td>
        <td>1709 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0152 (1809 to 1903) </td>
        <td>0x01A6 (1809 to 1903) </td>
        <td>
        <pre class="source">USHORT LatestAffinitizedPercent;</pre>
        </td>
        <td>1809 to 1903 </td>
        <td>previously <span class="type">ULONG</span> at 0x0158 and 0x01AC </td>
      </tr>
      <tr>
        <td>0x0168 (6.2); <br>
        0x0160 (6.3); <br>
        0x014C (10.0 to 1607); <br>
        0x0150 (1703 to 1803); <br>
        0x0154 (1809 to 1903) </td>
        <td>0x01B4 (6.2); <br>
        0x01AC (6.3); <br>
        0x019C (10.0 to 1607); <br>
        0x01A4 (1703 to 1803); <br>
        0x01A8 (1809 to 1903) </td>
        <td>
        <pre class="source">ULONG LatestPerformancePercent;</pre>
        </td>
        <td>6.2 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x016C (6.2); <br>
        0x0150 (10.0 to 1607); <br>
        0x0154 (1703 to 1803); <br>
        0x0158 (1809 to 1903) </td>
        <td>0x01B8 (6.2); <br>
        0x01A0 (10.0 to 1607); <br>
        0x01A8 (1703 to 1803); <br>
        0x01AC (1809 to 1903) </td>
        <td>
        <pre class="source">ULONG AveragePerformancePercent;</pre>
        </td>
        <td>6.2; <br>
        not 6.3; <br>
        10.0 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0170 (6.2); <br>
        0x0164 (6.3); <br>
        0x0154 (10.0 to 1607); <br>
        0x0158 (1703 to 1803) </td>
        <td>0x01BC (6.2); <br>
        0x01B0 (6.3); <br>
        0x01A4 (10.0 to 1607); <br>
        0x01AC (1703 to 1803) </td>
        <td>
        <pre class="source">ULONG LatestAffinitizedPercent;</pre>
        </td>
        <td>6.2 to 1803 </td>
        <td>next as <span class="type">USHORT</span> at 0x0152 and 0x01A6 </td>
      </tr>
      <tr>
        <td>0xB8 (6.1); <br>
        0x0174 (6.2) </td>
        <td>0xF0 (6.1); <br>
        0x01C0 (6.2) </td>
        <td>
        <pre class="source">ULONG Utility;</pre>
        </td>
        <td>6.1 to 6.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xBC (6.1) </td>
        <td>0xF4 (6.1) </td>
        <td>
        <pre class="source">ULONG OverUtilizedHistory;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xC0 (6.1) </td>
        <td>0xF8 (6.1) </td>
        <td>
        <pre class="source">ULONG volatile AffinityCount;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0xC4 (6.1) </td>
        <td>0xFC (6.1) </td>
        <td>
        <pre class="source">ULONG AffinityHistory;</pre>
        </td>
        <td>6.1 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0178 (6.2) </td>
        <td>0x01C4 (6.2) </td>
        <td>
        <pre class="source">ULONG AffinitizedUtility;</pre>
        </td>
        <td>6.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0168 (6.3) </td>
        <td>0x01B4 (6.3) </td>
        <td>
        <pre class="source">ULONG ExpectedUtility;</pre>
        </td>
        <td>6.3 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x016C (6.3) </td>
        <td>0x01B8 (6.3) </td>
        <td>
        <pre class="source">PROC_PERF_UTILITY Utility [3];</pre>
        </td>
        <td>6.3 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0158 (10.0 to 1607); <br>
        0x015C (1703 to 1903) </td>
        <td>0x01A8 (10.0 to 1607); <br>
        0x01B0 (1703 to 1903) </td>
        <td>
        <pre class="source">ULONG RelativePerformance;</pre>
        </td>
        <td>10.0 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x015C (10.0 to 1607); <br>
        0x0160 (1703 to 1903) </td>
        <td>0x01AC (10.0 to 1607); <br>
        0x01B4 (1703 to 1903) </td>
        <td>
        <pre class="source">ULONG Utility;</pre>
        </td>
        <td>10.0 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0160 (10.0 to 1607); <br>
        0x0164 (1703 to 1903) </td>
        <td>0x01B0 (10.0 to 1607); <br>
        0x01B8 (1703 to 1903) </td>
        <td>
        <pre class="source">ULONG AffinitizedUtility;</pre>
        </td>
        <td>10.0 to 1903 </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h4>Appended for Windows 10 </h4>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x0168 </td>
        <td>0x01B8 (10.0 to 1607); <br>
        0x01C0 </td>
        <td>
        <pre class="source">union {
    ULONGLONG SnapTimeLast;
    ULONGLONG EnergyConsumed;
};</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x0170 </td>
        <td>0x01C0 (10.0 to 1607); <br>
        0x01C8 </td>
        <td>
        <pre class="source">ULONGLONG ActiveTime;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x0178 </td>
        <td>0x01C8 (10.0 to 1607); <br>
        0x01D0 </td>
        <td>
        <pre class="source">ULONGLONG TotalTime;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <h4>Appended for Version 1709 </h4>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x0180 </td>
        <td>0x01D8 </td>
        <td>
        <pre class="source">POP_FX_DEVICE *FxDevice;</pre>
        </td>
        <td>1709 and higher </td>
      </tr>
      <tr>
        <td>0x0188 </td>
        <td>0x01E0 </td>
        <td>
        <pre class="source">ULONGLONG LastQosTranstionTsc;</pre>
        </td>
        <td>1709 and higher </td>
      </tr>
      <tr>
        <td>0x0190 </td>
        <td>0x01E8 </td>
        <td>
        <pre class="source">ULONGLONG QosTransitionHysteresis;</pre>
        </td>
        <td>1709 and higher </td>
      </tr>
      <tr>
        <td>0x0198 </td>
        <td>0x01F0 </td>
        <td>
        <pre class="source">KHETERO_CPU_QOS RequestedQosClass;</pre>
        </td>
        <td>1709 and higher </td>
      </tr>
      <tr>
        <td>0x019C </td>
        <td>0x01F4 </td>
        <td>
        <pre class="source">KHETERO_CPU_QOS ResolvedQosClass;</pre>
        </td>
        <td>1709 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x01A0 </td>
        <td rowspan="2">0x01F8 </td>
        <td>
        <pre class="source">ULONG QosEquivalencyMask;</pre>
        </td>
        <td>1709 to 1803 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">USHORT QosEquivalencyMask;</pre>
        </td>
        <td>1809 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>The misspelling in <span class="member">LastQosTranstionTsc</span> is Microsoft’s.
  </p>
  <h4>Appended for Version 1809 </h4>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x01A2 </td>
        <td>0x01FA </td>
        <td>
        <pre class="source">USHORT HwFeedbackTableIndex;</pre>
        </td>
        <td>1809 and higher </td>
      </tr>
      <tr>
        <td>0x01A4 </td>
        <td>0x01FC </td>
        <td>
        <pre class="source">UCHAR HwFeedbackParkHint;</pre>
        </td>
        <td>1809 and higher </td>
      </tr>
      <tr>
        <td>0x01A5 </td>
        <td>0x01FD </td>
        <td>
        <pre class="source">UCHAR HwFeedbackPerformanceClass;</pre>
        </td>
        <td>1809 and higher </td>
      </tr>
      <tr>
        <td>0x01A6 </td>
        <td>0x01FE </td>
        <td>
        <pre class="source">UCHAR HwFeedbackEfficiencyClass;</pre>
        </td>
        <td>1809 and higher </td>
      </tr>
      <tr>
        <td>0x01A7 </td>
        <td>0x01FF </td>
        <td>
        <pre class="source">UCHAR HeteroCoreType;</pre>
        </td>
        <td>1809 and higher </td>
      </tr>
    </tbody>
  </table>
  <div class="Footer">
    <p class="Dates">This page was created on 7th
    <a href="../../../../../../../new/16/06.htm">June 2016</a> and was last modified 
    on 4th November 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

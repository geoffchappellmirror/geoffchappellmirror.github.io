<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Macros</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<!--webbot bot="Include" U-Include="../../../_include/sketch.htm" TAG="BODY" startspan -->

<p class="alert">SKETCH OF HOW RESEARCH MIGHT CONTINUE AND RESULTS BE PRESENTED 
- PREVIEW ONLY </p>

<!--webbot bot="Include" i-checksum="42246" endspan -->
<h1>Macros </h1>
<p>The C++ language provides a limited facility for text substitution during preprocessing. 
Very nearly any token that is acceptable as an identifier may be defined as a
<span class="definition">macro</span>. The definition associates the identifier, 
which is the macro’s <span class="definition">name</span>, with formal
<span class="definition">arguments</span> and with a macro
<span class="definition">body</span> which may refer to those arguments. The arguments 
are optional. The body may be empty. The general idea is that each occurrence of 
the identifier is treated as if the corresponding macro body had been there instead. 
If the identifier is followed by an argument list, then each argument passes into 
the macro body as an actual argument taking the place of each occurrence of the 
corresponding formal argument. Because the macro body is most usefully (but certainly 
not necessarily) larger than the macro itself, this substitution is often called 
macro <span class="definition">expansion</span>. </p>
<div class="Footer">
  <!--webbot bot="Include" U-Include="../../../_include/c0610.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2006-2010. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62416" endspan -->
</div>

</body>

</html>

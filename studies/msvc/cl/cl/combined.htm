<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Combined CL.EXE Options</title>
<link rel="stylesheet" type="text/css" href="../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/msvc.css">
<script type="text/javascript" src="../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="22580" endspan -->
<h1>Combined CL.EXE Options </h1>
<p>Many CL options can be grouped meaningfully according to the first letter (or 
letters) after the switch character. Indeed, the example is set by CL itself in 
the output produced for the <span class="switch"><a href="options/help.htm">
/help</a></span> 
option. The options shown under the heading Optimisation all begin with
<span class="switch">/O</span>. Those for Code Generation mostly begin with
<span class="switch">/G</span>, along with some specialisations for exception 
handling (<span class="switch">/EH</span>) and run-time checking (<span class="switch">/RTC</span>). 
Those shown under the heading Output Files all start as <span class="switch">/F</span> 
and most shown under the heading Language start as <span class="switch">/Z</span>.
</p>
<p>CL supports a shorthand in which options in the same “group” can be given in 
one command-line token. Again, the <span class="switch">/help</span> text 
provides examples. The explanatory text for <span class="switch">
<a href="options/o$x.htm">/Ox</a></span> suggests in brackets an equivalence 
with
<span class="switch">/Ogityb2 /Gs</span>. The option <span class="switch">
<a href="options/gx.htm">/GX</a></span> is said to be the “same as
<span class="switch">/EHsc</span>” and <span class="switch">
<a href="options/rtc1.htm">/RTC1</a></span> is equated in brackets with
<span class="switch">/RTCsu</span>. In each case, the second option is a 
shorthand. For instance, <span class="switch">/Ogityb2</span> is understood as 
expanding to
<span class="switch">/Og /Oi /Ot /Oy /Ob2</span>. The understanding is 
apparently so plain and obvious that the product documentation does not trouble 
to describe it formally. </p>
<p>Any option that begins with, but is not solely, one of the case-sensitive 
sequences
<span class="switch">/clr:</span>, <span class="switch">/com+:</span>,
<span class="switch">/EE</span>, <span class="switch">/EH</span>,
<span class="switch">/G</span>, <span class="switch">/O</span>,
<span class="switch">/RTC</span>, <span class="switch">/Zc:</span> or
<span class="switch">/Z</span> is interpreted as a combined option. The 
characters that follow are then interpreted as a series of elements, each of 
which may be followed by one optional comma. The combined option then expands to 
a series of options, one for each of the elements, each formed by appending the 
element to the same initial sequence. </p>
<p>Each element may be </p>
<ul>
  <li>a supported keyword, or any initial substring of that keyword </li>
  <li>a supported character and optional string argument </li>
  <li>a supported character and optional numerical argument </li>
  <li>a supported character and optional hyphen (i.e., negation) </li>
  <li>a supported character explicitly allowed no argument </li>
  <li>else any single character </li>
</ul>
<p>A string argument means all the remaining characters of the combined option, 
including none. An element that is permitted a string argument is necessarily 
the last in the combined option. A numerical argument means as many decimal 
digits as follow without interruption, including none. </p>
<p>Note that the last two categories in the list are actually one. Any single 
character (including the comma, by the way) is acceptable as an element for the 
expansion. It’s just that some single characters are supported explicitly and 
some only by default. </p>
<p>The supported keywords and characters depend on the initial sequence: </p>
<table>
  <tr>
    <td><span class="switch">/clr:</span> </td>
    <td>keyword: <span class="keyword">assembly</span>, <span class="keyword">
    <a href="options/clr.htm">noAssembly</a></span> </td>
  </tr>
  <tr>
    <td><span class="switch">/com+:</span> </td>
    <td>keyword: <span class="keyword">assembly</span>, <span class="keyword">
    noAssembly</span>
    </td>
  </tr>
  <tr>
    <td rowspan="2"><span class="switch">/EE</span> </td>
    <td>character and optional hyphen: <span class="keyword">a</span>,
    <span class="keyword">g</span>, <span class="keyword">m</span> </td>
  </tr>
  <tr>
    <td>character with no argument: <span class="keyword">b</span>,
    <span class="keyword">n</span> </td>
  </tr>
  <tr>
    <td><span class="switch">/EH</span> </td>
    <td>character and optional hyphen: <span class="keyword">
    <a href="options/eh$a.htm">a</a></span>, <span class="keyword">
    <a href="options/eh$c.htm">c</a></span>, <span class="keyword">
    <a href="options/eh$s.htm">s</a></span> </td>
  </tr>
  <tr>
    <td rowspan="4"><span class="switch">/G</span> </td>
    <td>character and optional string: <span class="keyword">E</span>,
    <span class="keyword"><a href="options/g$h.htm">h</a></span>,
    <span class="keyword"><a href="options/g$s.htm">s</a></span> </td>
  </tr>
  <tr>
    <td>character and optional number: <span class="keyword">p</span>,
    <span class="keyword">t</span> </td>
  </tr>
  <tr>
    <td>character and optional hyphen: <span class="keyword">
    <a href="options/gf.htm">F</a></span>, <span class="keyword">
    <a href="options/g$i.htm">i</a></span>, <span class="keyword">
    <a href="options/gl.htm">L</a></span>, <span class="keyword">
    <a href="options/g$m.htm">m</a></span>, <span class="keyword">
    <a href="options/gr.htm">R</a></span>, <span class="keyword">
    <a href="options/gx.htm">X</a></span>, <span class="keyword">x</span> </td>
  </tr>
  <tr>
    <td>character with no argument: <span class="keyword">
    <a href="options/g3.htm">3</a></span>, <span class="keyword">
    <a href="options/g4.htm">4</a></span>, <span class="keyword">
    <a href="options/g5.htm">5</a></span>, <span class="keyword">
    <a href="options/g6.htm">6</a></span>, <span class="keyword">
    <a href="options/ga.htm">A</a></span>, <span class="keyword">
    <a href="options/gb.htm">B</a></span>, <span class="keyword">D</span>,
    <span class="keyword"><a href="options/g$d.htm">d</a></span>,
    <span class="keyword"><a href="options/g$e.htm">e</a></span>,
    <span class="keyword"><a href="options/g$f.htm">f</a></span>,
    <span class="keyword"><a href="options/gm.htm">M</a></span>,
    <span class="keyword"><a href="options/g$r.htm">r</a></span>,
    <span class="keyword"><a href="options/g$y.htm">y</a></span>,
    <span class="keyword"><a href="options/gz.htm">Z</a></span>,
    <span class="keyword"><a href="options/g$z.htm">z</a></span> </td>
  </tr>
  <tr>
    <td rowspan="3"><span class="switch">/O</span> </td>
    <td>character and optional number: <span class="keyword">
    <a href="options/o$b0.htm">b</a></span>, <span class="keyword">V</span> </td>
  </tr>
  <tr>
    <td>character and optional hyphen: <span class="keyword">
    <a href="options/o$a.htm">a</a></span>, <span class="keyword">
    <a href="options/o$g.htm">g</a></span>, <span class="keyword">
    <a href="options/o$i.htm">i</a></span>, <span class="keyword">
    <a href="options/o$p.htm">p</a></span>, <span class="keyword">
    <a href="options/o$w.htm">w</a></span>, <span class="keyword">
    <a href="options/o$y.htm">y</a></span> </td>
  </tr>
  <tr>
    <td>character with no argument: <span class="keyword">
    <a href="options/o1.htm">1</a></span>, <span class="keyword">
    <a href="options/o2.htm">2</a></span>, <span class="keyword">
    <a href="options/o$d.htm">d</a></span>, <span class="keyword">
    <a href="options/o$s.htm">s</a></span>, <span class="keyword">
    <a href="options/o$t.htm">t</a></span>, <span class="keyword">
    <a href="options/o$x.htm">x</a></span> </td>
  </tr>
  <tr>
    <td><span class="switch">/RTC</span> </td>
    <td>character with no argument: <span class="keyword">
    <a href="options/rtc1.htm">1</a></span>, <span class="keyword">
    <a href="options/rtc$c.htm">c</a></span>, <span class="keyword">
    <a href="options/rtc$s.htm">s</a></span>, <span class="keyword">
    <a href="options/rtc$u.htm">u</a></span> </td>
  </tr>
  <tr>
    <td rowspan="5"><span class="switch">/Z</span> </td>
    <td>keyword: <span class="keyword">tmp</span>, <span class="keyword">vc6</span>
    </td>
  </tr>
  <tr>
    <td>character and optional string: <span class="keyword">
    <a href="options/zb.htm">B</a></span>, <span class="keyword">
    <a href="options/zx.htm">X</a></span> </td>
  </tr>
  <tr>
    <td>character and optional number: <span class="keyword">
    <a href="options/z$m.htm">m</a></span>, <span class="keyword">
    <a href="options/z$p.htm">p</a></span> </td>
  </tr>
  <tr>
    <td>character and optional hyphen: <span class="keyword">
    <a href="options/zm.htm">M</a></span> </td>
  </tr>
  <tr>
    <td>character with no argument: <span class="keyword">
    <a href="options/z7.htm">7</a></span>, <span class="keyword">
    <a href="options/z$a.htm">a</a></span>, <span class="keyword">
    <a href="options/z$d.htm">d</a></span>, <span class="keyword">
    <a href="options/z$e.htm">e</a></span>, <span class="keyword">
    <a href="options/z$g.htm">g</a></span>, <span class="keyword">
    <a href="options/zi.htm">I</a></span>, <span class="keyword">
    <a href="options/z$i.htm">i</a></span>, <span class="keyword">
    <a href="options/z$l.htm">l</a></span>, <span class="keyword">n</span>,
    <span class="keyword"><a href="options/z$s.htm">s</a></span> </td>
  </tr>
  <tr>
    <td><span class="switch">/Zc:</span> </td>
    <td>keyword: <span class="keyword"><a href="options/z$c.htm">forScope</a></span>,
    <span class="keyword"><a href="options/z$c.htm">wchar_t</a></span> </td>
  </tr>
</table>
<p>Whether any of the options produced by expanding a combined option are 
syntactically valid as individual options is irrelevant to the syntax of 
expansion. </p>
<p>Where an extracted option turns out to be invalid, a plausible reason for its 
being supported in the combined syntax is that the option was valid once upon a 
time (or is still valid in some other of Microsoft’s C/C++ products) and may 
still appear in command lines, most likely if generated from old makefiles. 
Especially if the now-invalid option permitted an argument, removing the option 
from the combined syntax would mean that its presence in a combined option might 
cause subsequent options to be extracted incorrectly. </p>
<p>Support for the comma as a separator has occasional benefits for clarity, 
especially when using keywords. For instance, <span class="switch">
/Zc:forScopewchar_t</span> 
does expand to the separate options <span class="switch">/Zc:forScope</span> and
<span class="switch">/Zc:wchar_t</span>, but <span class="switch">
/Zc:forScope,wchar_t</span> 
has an advantage in readability. The separator is even necessary if a 
single-character element that is a digit must follow an element that is 
permitted a numerical argument. For instance, <span class="switch">/Z7</span> 
and <span class="switch">/Zp1</span> 
can be combined as <span class="switch">/Z7p1</span> without needing a 
separating comma, but if reordered, the combination must be <span class="switch">
/Zp1,7</span>.
</p>
<div class="Footer">
  <p class="Dates">This page was created on 27th October 2005 and was last 
  modified on 9th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="57989" endspan -->
</div>

</body>

</html>

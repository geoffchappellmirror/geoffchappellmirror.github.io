<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>TDB</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/km.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="21016" -->
<h1>TDB </h1>
<p>The <span class="struct">TDB</span> structure (formally <span class="struct">
tagTDB</span>) represents what is apparently called a task. Its name perhaps 
stands for something like Task Data Block. The tasks in question are 16-bit 
Windows applications. These long pre-date the development of pre-emptive 
multi-tasking even of virtual-8086 DOS machines on Windows 3.0 Enhanced Mode in 
the late 1980s. The nature of Windows back then is that 16-bit Windows 
applications were written for co-operative multi-tasking. For almost all 
practical purposes on an old-enough Windows they do own the machine except when 
they execute inside a “system” function that yields. If a new Windows does not 
provide at least a convincing illusion of the old execution environment, then they won’t behave as expected and especially not 
when run concurrently. </p>
<p>The only known way that 
WIN32K creates a <span class="struct">TDB</span> starts with the exported but undocumented USER32 function <span class="function">UserRegisterWowHandlers</span>. 
Calling this function supplies routines for USER32 to call, but it also fills a 
table of routines for more calls to USER32. One of these routines is named in symbol 
files as <span class="routine">InitTask</span>. Threads in the calling process can 
then each 
call this routine to initialise as a WOW task. </p>
<p>There can be just the one <span class="struct">TDB</span> for each thread. The 
address of a thread’s <span class="struct">TDB</span> is held in the
<span class="member">ptdb</span> member of the <span class="struct">
<a href="threadinfo/index.htm">THREADINFO</a></span>. Moroever, task initialisation 
is permitted only for threads whose process already has a <span class="struct">
<a href="wowprocessinfo.htm">WOWPROCESSINFO</a></span> (which is created by the 
process’s having called another of those USER32 routines). In version 3.51 and higher, 
each WOW process can have a single-linked list of <span class="struct">TDB</span> 
structures starting from the <span class="member">ptdbHead</span> member of the
<span class="struct">WOWPROCESSINFO</span> and linked through the
<span class="member">ptdbNext</span> member of the <span class="struct">TDB</span> 
in increasing order of their <span class="member">nPriority</span> members. Version 
3.10 has a <span class="struct">TDB</span> list too, just not a separate one for 
each WOW process. </p>
<table class="Sizes">
  <tr>
    <th>Version </th>
    <th>Size (x86) </th>
    <th>Size (x64) </th>
  </tr>
  <tr>
    <td>3.10 to 3.51 </td>
    <td>0x14 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>4.0 to 10.0 </td>
    <td>0x18 </td>
    <td>0x28 </td>
  </tr>
</table>
<p>From the type information in symbol files for WIN32K in Windows 7, it appears 
that the structure is defined in 64-bit Windows though it doesn’t support the 16-bit 
tasks that the structure exists for. Starting with version 6.0, ever more of the 
supporting code disappears. By version 6.2, the system service
<span class="routine">NtUserInitTask</span> fails trivially and it is entirely plausible 
that the 64-bit WIN32K has no code for creating a <span class="struct">TDB</span>.
</p>
<table>
  <colgroup>
    <col class="Offset" span="2"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>0x00 </td>
    <td>
    <pre class="source">TDB *ptdbNext;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 (3.51) </td>
    <td>&nbsp;</td>
    <td>unaccounted </td>
    <td>3.51 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 (3.10); <br>
    0x08 (3.51); <br>
    0x04 </td>
    <td>0x08 </td>
    <td>
    <pre class="source">INT nEvents;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x08 (3.10); <br>
    0x0C (3.51); <br>
    0x08 </td>
    <td>0x0C </td>
    <td>
    <pre class="source">INT nPriority;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0C (3.10) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">HANDLE hIdleEvent;</pre>
    </td>
    <td>3.10 only </td>
    <td>next in <span class="struct">WOWTHREADINFO</span> </td>
  </tr>
  <tr>
    <td>0x10 (3.10 to 3.51); <br>
    0x0C </td>
    <td>0x10 </td>
    <td>
    <pre class="source">THREADINFO *pti;</pre>
    </td>
    <td>all </td>
    <td>last member in 3.10; <br>
    last member in 3.51 </td>
  </tr>
  <tr>
    <td>0x10 </td>
    <td>0x18 </td>
    <td>
    <pre class="source"><a href="wowthreadinfo.htm">WOWTHREADINFO</a> *pwti;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0x14 </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">ULONG hTaskWow;</pre>
    </td>
    <td>4.0 only </td>
    <td>previously in <span class="struct">THREADINFO</span>; <br>
    last member in 4.0 </td>
  </tr>
  <tr>
    <td>0x20 </td>
    <td>
    <pre class="source">USHORT hTaskWow;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x16 </td>
    <td>0x22 </td>
    <td>
    <pre class="source">USHORT TDB_Flags;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
</table>
<p>Microsoft’s name for the event handle that the <span class="struct">TDB</span> 
keeps in version 3.10 is not known. This version does not provide for running 
different 16-bit tasks in different processes and does not have a
<span class="struct">WOWTHREADINFO</span> structure. It is here proposed that 
the event handle in the <span class="struct">WOWTHREADINFO</span> originated 
here in the <span class="struct">TDB</span> and kept its name. </p>
<div class="Footer">
  <p class="Dates">This page was created on 12th
  <a href="../../../../../new/17/08.htm">August 2017</a>. and was last modified 
  on 28th August 2017. </p>
  <!--webbot bot="Include" U-Include="../../_include/c17.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017. Geoff Chappell. All rights reserved. 
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="47327" -->
</div>

</body>

</html>

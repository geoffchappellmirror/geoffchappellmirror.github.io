<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>RTL_PROCESS_LOCK_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>RTL_PROCESS_LOCK_INFORMATION </h1>
<p>The <span class="struct">RTL_PROCESS_LOCK_INFORMATION</span> structure is a recurring 
element in the <span class="struct"><a href="process_locks.htm">RTL_PROCESS_LOCKS</a></span> 
structure that a successful call to <span class="function">
<a href="../sysinfo/query.htm">ZwQuerySystemInformation</a></span> or
<span class="function">NtQuerySystemInformation</span> produces at the start of 
its output buffer when given the information class <span class="constant">SystemLocksInformation</span> 
(0x0C). There is one <span class="struct">RTL_PROCESS_LOCK_INFORMATION</span> for 
each <span class="struct"><a href="eresource.htm">ERESOURCE</a></span> that is initialised 
but not yet deleted. </p>
<h2>Documentation Status </h2>
<p>The <span class="struct">RTL_PROCESS_LOCK_INFORMATION</span> structure is not 
documented. </p>
<!--webbot bot="Include" U-Include="../sysinfo/_include/type_info_urlmon.htm" TAG="BODY" startspan -->

<p>Microsoft does publish the practical equivalent of a C-language definition as 
type information in public symbol files, though not for the kernel, where the structure 
is prepared, nor even for low-level user-mode DLLs that interpret the structure, 
but for various higher-level user-mode DLLs such as URLMON.DLL and only then starting 
with version 6.2. </p>

<!--webbot bot="Include" endspan i-checksum="38013" -->
<!--webbot bot="Include" U-Include="../sysinfo/_include/type_info_ddklibs.htm" TAG="BODY" startspan -->

<p>Two earlier disclosures of type information are known, though not in symbol files 
but in statically linked libraries: GDISRVL.LIB from the Device Driver Kit (DDK) 
for Windows NT 3.51; and SHELL32.LIB from the DDK for Windows NT 4.0. </p>

<!--webbot bot="Include" endspan i-checksum="55883" -->
<h2>Layout </h2>
<p>The <span class="struct">RTL_PROCESS_LOCK_INFORMATION</span> is 0x24 or 0x30 
bytes in 32-bit and 64-bit Windows, respectively, in version 3.51 and higher. The 
original is 0x3C bytes. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset"><col class="Offset"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 (3.10 to 3.50) </td>
    <td>&nbsp;</td>
    <td>unknown dword </td>
    <td>3.10 to 3.50 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 (3.10 to 3.50); <br>
    0x00 </td>
    <td>0x00 </td>
    <td>
    <pre class="source">PVOID Address;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x08 (3.10 to 3.50) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">ULONG CreatorBackTraceIndex;</pre>
    </td>
    <td>3.10 to 3.50 </td>
    <td>next as <span class="type">USHORT</span> at 0x06 </td>
  </tr>
  <tr>
    <td>0x0C (3.10 to 3.50); <br>
    0x04 </td>
    <td>0x08 </td>
    <td>
    <pre class="source">USHORT Type;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x06 </td>
    <td>0x0A </td>
    <td>
    <pre class="source">USHORT CreatorBackTraceIndex;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>previously <span class="type">ULONG</span> at 0x08 </td>
  </tr>
  <tr>
    <td>0x0E (3.10 to 3.50) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">USHORT Depth;</pre>
    </td>
    <td>3.10 to 3.50 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x10 (3.10 to 3.50) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">PVOID OwnerBackTrace [4];</pre>
    </td>
    <td>3.10 to 3.50 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x20 (3.10 to 3.50); <br>
    0x08 </td>
    <td>0x10 </td>
    <td>
    <pre class="source">PVOID OwningThread;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x24 (3.10 to 3.50); <br>
    0x0C </td>
    <td>0x18 </td>
    <td>
    <pre class="source">LONG LockCount;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x28 (3.10 to 3.50); <br>
    0x10 </td>
    <td>0x1C </td>
    <td>
    <pre class="source">ULONG ContentionCount;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x2C (3.10 to 3.50) </td>
    <td>&nbsp;</td>
    <td>unaccounted four bytes </td>
    <td>3.10 to 3.50 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x14 </td>
    <td>0x20 </td>
    <td>
    <pre class="source">ULONG EntryCount;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x18 </td>
    <td>0x24 </td>
    <td>
    <pre class="source">LONG RecursionCount;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x34 (3.10 to 3.50); <br>
    0x1C </td>
    <td>0x28 </td>
    <td>
    <pre class="source">ULONG NumberOfWaitingShared;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x38 (3.10 to 3.50); <br>
    0x20 </td>
    <td>0x2C </td>
    <td>
    <pre class="source">ULONG NumberOfWaitingExclusive;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
</table>
<p>The unknown dword that begins the structure in its original layout is always 
zero. </p>
<p>The <span class="member">Address</span> is that of an <span class="struct">ERESOURCE</span> 
from the kernel’s list. This is a kernel-mode address, which is why the
<span class="constant">SystemLocksInformation</span> case of
<span class="function">NtQuerySystemInformation</span> is nowadays failed for
<a href="../restricted_callers.htm">restricted callers</a>. </p>
<p>The <span class="member">Type</span> is always 1. Perhaps it was imagined that 
the <span class="constant">SystemLocksInformation</span> might be broadened to other 
types of lock than the <span class="struct">ERESOURCE</span>. </p>
<p>From version 3.50 up to but not including the version 5.2 from Windows Server 
2003 SP1, the <span class="member">CreatorBackTraceIndex</span> is always 0. Other 
versions, both earlier and later, take it from the same-named member of the
<span class="struct">ERESOURCE</span>. What it is an index into is the kernel’s 
Stack Trace Database. The indexed entry in this database will have been created 
when the resource was initialised, given that a particular bit is set in the
<span class="variable">NtGlobalFlag</span> and that the kernel actually did initialise 
the database. The required bit is 0x00200000 in versions 3.10 to 3.50 but
<span class="constant">FLG_KERNEL_STACK_TRACE_DB</span> (0x00002000) in version 
3.51 and higher. Microsoft has long documented that this flag “works only when using 
the checked build of Windows”, and indeed the free builds of versions 3.51 to 5.0 
ignore this flag while initialising and therefore never can have a stack trace database 
for <span class="member">CreatorBackTraceIndex</span> to be non-zero in an
<span class="struct">ERESOURCE</span>. </p>
<p>The <span class="member">Depth</span> in the original layout is the count of 
dwords that version 3.10 copies to the <span class="member">OwnerBackTrace</span> 
array. These names are supposed because the count and dwords come from the
<span class="member">Depth</span> and <span class="member">OwnerBackTrace</span> 
members of the original <span class="struct">ERESOURCE</span>. There is no copying 
in version 3.50: the count is set to zero. Even in version 3.10, no way is yet known 
that the count can be non-zero in the <span class="struct">ERESOURCE</span>. </p>
<p>Though the <span class="member">OwningThread</span> is formally a
<span class="type">PVOID</span>, it is not the address of anything but is instead 
the thread ID. That the <span class="struct">RTL_PROCESS_LOCK_INFORMATION</span> 
has only one <span class="member">OwningThread</span> is because this information 
structure tells only which thread, if any, has exclusive access to the resource—or, 
more precisely, had it when the kernel collected the information. </p>
<p>The <span class="member">LockCount</span> is what the <span class="struct">ERESOURCE</span> 
has as its <span class="member">ActiveCount</span> (before version 6.0) or
<span class="member">ActiveEntries</span>. It is the number of threads that have 
access to the resource, i.e., as the exclusive owner or as shared owners. </p>
<p>The unaccounted member at offset 0x2C in the original layout is presumably one 
of what the much later symbol files present as <span class="member">EntryCount</span> 
and <span class="member">RecursionCount</span>. No way is yet known that any of 
these get set in any version. </p>
<div class="Footer">
  <p class="Dates">This page was created on 30th July 2016 but was not published 
  until 25th <a href="../../../../../../../new/16/10.htm">October 2016</a>. It was 
  last modified on 28th <a href="../../../../../../../new/20/06.htm">June 2020</a>.
  </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1620.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4893" -->
</div>

</body>

</html>

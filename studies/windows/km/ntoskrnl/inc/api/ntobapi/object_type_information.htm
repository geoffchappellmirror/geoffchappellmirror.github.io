<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>OBJECT_TYPE_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>OBJECT_TYPE_INFORMATION </h1>
  <p>The <span class="struct">OBJECT_TYPE_INFORMATION</span> structure (formally
  <span class="struct">_OBJECT_TYPE_INFORMATION</span>) is what a 
  successful call to <span class="function">ZwQueryObject</span> or
  <span class="function">NtQueryObject</span> produces at the start of its output 
  buffer when given the information class <span class="constant">ObjectTypeInformation</span> 
  (2). The information so obtained is about the type of whatever object is referenced 
  by the <span class="argument">Handle</span> argument. </p>
  <p>The structure is alternatively a recurring element in the output of a successful 
  query for <span class="constant">ObjectTypesInformation</span> (3). </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">OBJECT_TYPE_INFORMATION</span> structure is not documented. 
  This is plainly very much by design. A <span class="struct">PUBLIC_OBJECT_TYPE_INFORMATION</span> 
  is defined in WINTERNL.H from the Software Development Kit (SDK) and in NTIFS.H 
  from the Windows Driver Kit (WDK). Even then, this availability doesn’t begin 
  until the kits for Windows 7. This public definition—which does, remember, have 
  a different name—provides only for the <span class="member">TypeName</span> plus 
  an array which is commented as being “reserved for internal use”. </p>
  <!--webbot bot="Include" U-Include="../_include/type_info_urlmon.htm" TAG="BODY" startspan -->

<p>Microsoft does publish the practical equivalent of a C-language definition as 
type information in a handful of private symbol files that Microsoft has included 
in packages of public symbol files, starting with Windows 8, and continues to make 
available through Microsoft’s public symbol server. These private symbol files are 
not for the kernel, where the structure is prepared, nor even for low-level user-mode 
DLLs that interpret the structure. They are instead for various higher-level user-mode 
DLLs such as URLMON.DLL. The latter is here singled out because of its origins in 
Internet Explorer and thence for the strong suggestion that Microsoft’s programmers 
of Internet Explorer had access to more details of low-level Windows programming 
than Microsoft publishes for wider use. </p>

<!--webbot bot="Include" endspan i-checksum="1061" -->
  <!--webbot bot="Include" U-Include="../_include/type_info_ddklibs.htm" TAG="BODY" startspan -->

<p>Type information for the structure has also seeped out at the other end of the 
Windows timeline, though not in symbol files but in statically linked libraries: 
GDISRVL.LIB from the Device Driver Kit (DDK) for Windows NT 3.51; and SHELL32.LIB 
from the DDK for Windows NT 4.0. </p>

<!--webbot bot="Include" endspan i-checksum="3859" -->
  <h2>Layout </h2>
  <p>The <span class="struct">OBJECT_TYPE_INFORMATION</span> is 0x60 or 0x68 bytes 
  in 32-bit and 64-bit Windows, respectively, in version 3.50 and higher. If the 
  structure is defined for version 3.10, it has only the first member and is only 
  eight bytes. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>
        <pre class="source">UNICODE_STRING TypeName;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>0x10 </td>
        <td>
        <pre class="source">ULONG TotalNumberOfObjects;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>0x14 </td>
        <td>
        <pre class="source">ULONG TotalNumberOfHandles;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>0x18 </td>
        <td>
        <pre class="source">ULONG TotalPagedPoolUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x14 </td>
        <td>0x1C </td>
        <td>
        <pre class="source">ULONG TotalNonPagedPoolUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x18 </td>
        <td>0x20 </td>
        <td>
        <pre class="source">ULONG TotalNamePoolUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x1C </td>
        <td>0x24 </td>
        <td>
        <pre class="source">ULONG TotalHandleTableUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x20 </td>
        <td>0x28 </td>
        <td>
        <pre class="source">ULONG HighWaterNumberOfObjects;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x24 </td>
        <td>0x2C </td>
        <td>
        <pre class="source">ULONG HighWaterNumberOfHandles;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x28 </td>
        <td>0x30 </td>
        <td>
        <pre class="source">ULONG HighWaterPagedPoolUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x2C </td>
        <td>0x34 </td>
        <td>
        <pre class="source">ULONG HighWaterNonPagedPoolUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x30 </td>
        <td>0x38 </td>
        <td>
        <pre class="source">ULONG HighWaterNamePoolUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x34 </td>
        <td>0x3C </td>
        <td>
        <pre class="source">ULONG HighWaterHandleTableUsage;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x38 </td>
        <td>0x40 </td>
        <td>
        <pre class="source">ULONG InvalidAttributes;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x3C </td>
        <td>0x44 </td>
        <td>
        <pre class="source">GENERIC_MAPPING GenericMapping;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x4C </td>
        <td>0x54 </td>
        <td>
        <pre class="source">ULONG ValidAccessMask;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x50 </td>
        <td>0x58 </td>
        <td>
        <pre class="source">BOOLEAN SecurityRequired;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x51 </td>
        <td>0x59 </td>
        <td>
        <pre class="source">BOOLEAN MaintainHandleCount;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x52 </td>
        <td>0x5A </td>
        <td>
        <pre class="source">UCHAR TypeIndex;</pre>
        </td>
        <td>6.2 and higher </td>
      </tr>
      <tr>
        <td>0x54 </td>
        <td>0x5C </td>
        <td>
        <pre class="source">ULONG PoolType;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x58 </td>
        <td>0x60 </td>
        <td>
        <pre class="source">ULONG DefaultPagedPoolCharge;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x5C </td>
        <td>0x64 </td>
        <td>
        <pre class="source">ULONG DefaultNonPagedPoolCharge;</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>The structure is followed by the object type’s name as a null-terminated string 
  of Unicode characters. The size (in bytes, not counting the terminating null) 
  and the address are respectively the <span class="member">Length</span> and
  <span class="member">Buffer</span> members of the <span class="member">TypeName</span>.
  </p>
  <p>For the <span class="argument">ReturnLength</span> argument of
  <span class="function">ZwQueryObject</span> in version 3.50 and higher, the total 
  size of the structure and name is rounded up for 4 or 8-byte alignment in 32-bit 
  and 64-bit Windows, respectively. This anticipates that the structure and name 
  may be just one description of an object type in a sequence of descriptions of 
  all the object types. The <span class="struct">OBJECT_TYPE_INFORMATION</span> 
  in each then has its natural alignment. There is a side-effect, however: the alignment 
  is not allowed for when computing the <span class="member">TypeInfoSize</span> 
  in the <span class="struct"><a href="object_basic_information.htm">OBJECT_BASIC_INFORMATION</a></span>.
  </p>
  <div class="Footer">
    <p class="Dates">This page was created on 27th
    <a href="../../../../../../../new/20/06.htm">June 2020</a> and was last modified 
    on 27th <a href="../../../../../../../new/22/07.htm">August 2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5634" -->
  </div>
</div>

</body>

</html>

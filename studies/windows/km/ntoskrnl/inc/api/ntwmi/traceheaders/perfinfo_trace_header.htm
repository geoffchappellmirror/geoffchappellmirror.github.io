<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>PERFINFO_TRACE_HEADER</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="33595" -->
<div class="Main">
  <p class="alert">This page is being prepared for a substantial reworking. Some 
  content may be temporarily missing. Temporarily may turn into indefinitely. New 
  content may be more than usually defective. The page is now published only as 
  a revision in progress. Use with caution. </p>
  <h1>PERFINFO_TRACE_HEADER </h1>
  <p>The <span class="struct">PERFINFO_TRACE_HEADER</span> is one of several types 
  of fixed-size header that introduce variable-size data for events that are logged 
  through Event Tracing for Windows (ETW). As with other types of event, those that 
  begin with a <span class="struct">PERFINFO_TRACE_HEADER</span> accumulate first 
  in trace buffers. To have these events persist in this raw form for ready inspection, 
  configure the event tracing session to flush the trace buffers to an Event Trace 
  Log (ETL) file. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">PERFINFO_TRACE_HEADER</span> is not documented, but 
  a C-language definition is published in the NTWMI.H from the Enterprise edition 
  of the Windows Driver Kit (WDK) for Windows 10 version 1511. </p>
  <!--webbot bot="Include" U-Include="../../../../api/etw/_include/appxdeploymentclient.htm" TAG="BODY" startspan -->

<p>Were it not for this relatively recent and possibly unintended disclosure, much 
would anyway be known from type information in symbol files. Curiously though, type 
information for this structure has never appeared in any public symbol files for 
the kernel or for the obvious low-level user-mode DLLs. In the whole of Microsoft’s 
packages of public symbol files, at least to the original Windows 10, relevant type 
information is unknown before Windows 8 and appears in symbol files only for AppXDeploymentClient.dll, 
CertEnroll.dll (before Windows 10) and Windows.Storage.ApplicationData.dll. </p>

<!--webbot bot="Include" endspan i-checksum="57456" -->
  <h2>Layout </h2>
  <p>The <span class="struct">PERFINFO_TRACE_HEADER</span> is 0x18 bytes in both 
  32-bit and 64-bit Windows in versions that are known to have it. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">union {
    ULONG Marker;
    struct {
        USHORT Version;
        UCHAR HeaderType;
        UCHAR Flags;
    };
};</pre>
        </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>
        <pre class="source">union {
    ULONG Header;
    WMI_TRACE_PACKET Packet;
};</pre>
        </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">union {
    PERFINFO_TIMESTAMP TS;
    LARGE_INTEGER SystemTime;
};</pre>
        </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>
        <pre class="source">UCHAR Data [ANYSIZE_ARRAY];</pre>
        </td>
      </tr>
    </tbody>
  </table>
  <p>The first 4 bytes have common elements in all the various
  <a href="index.htm">Trace Headers</a>. All have the high bit set in the
  <span class="member">Flags</span> at offset 0x03. Of those that have the two highest 
  bits set, what distinguishes a header as continuing specifically as a
  <span class="struct">PERFINFO_TRACE_HEADER</span> is the <span class="member">
  HeaderType</span> at offset 0x02: </p>
  <table class="Constants">
    <colgroup>
      <col class="Value"><col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
        <th>Implied Layout </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x10 </td>
        <td><span class="constant">TRACE_HEADER_TYPE_PERFINFO32</span> </td>
        <td>0x10 bytes of header followed by 32-bit event data as
        <span class="member">Data</span> array </td>
      </tr>
      <tr>
        <td>0x11 </td>
        <td><span class="constant">TRACE_HEADER_TYPE_PERFINFO64</span> </td>
        <td>0x10 bytes of header followed by 64-bit event data as
        <span class="member">Data</span> array </td>
      </tr>
    </tbody>
  </table>
  <p>Also defined in NTWMI.H are combinations of the <span class="member">Flags</span> 
  and <span class="member">HeaderType</span>, ready for use as a basis for the
  <span class="member">Marker</span> as the first dword: </p>
  <table class="Constants">
    <colgroup>
      <col class="Value" span="2"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Value (x86) </th>
        <th>Value (x64) </th>
        <th>Name </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0xC0100000 </td>
        <td>0xC0110000 </td>
        <td><span class="constant">PERFINFO_TRACE_MARKER</span> </td>
      </tr>
    </tbody>
  </table>
  <p>To these markers must yet be added the <span class="member">Version</span>. 
  Though the <span class="member">Version</span> is formally the low word, the kernel 
  treats it as 8-bit. It is not presently clear what is meant by this
  <span class="member">Version</span>. Both 0x02 and 0x03 are observed in Windows 
  10. The high 8 bits of the <span class="member">Version</span> can anyway be treated 
  as more flags. NTWMI.H defines the following, again as bits to merge into the
  <span class="member">Marker</span>: </p>
  <table class="Constants">
    <colgroup>
      <col class="Value"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00000700 </td>
        <td><span class="constant">TRACE_HEADER_PMC_COUNTERS_MASK</span> </td>
      </tr>
      <tr>
        <td>0x00008000 </td>
        <td><span class="constant">TRACE_HEADER_PEBS_INDEX_FLAG</span> </td>
      </tr>
    </tbody>
  </table>
  <p>Note that where SECHOST translates any trace header to an
  <span class="struct"><a href="../../../shared/evntcons/event_header.htm">EVENT_HEADER</a></span> 
  or <span class="struct">
  <a href="../../../shared/evntrace/event_trace_header.htm">EVENT_TRACE_HEADER</a></span> 
  for presentation to an event consumer, it also recognises these flags in a
  <span class="struct"><a href="system_trace_header.htm">SYSTEM_TRACE_HEADER</a></span>, 
  but the kernel only ever uses these flags for a <span class="struct">PERFINFO_TRACE_HEADER</span>. 
  For their meaning, look below to Extended Data Items. </p>
  <!--webbot bot="Include" U-Include="../../../../api/etw/tracelog/_include/wmi_trace_packet.htm" TAG="BODY" startspan -->

<p>The <span class="struct">WMI_TRACE_PACKET</span> at offset 0x04 is two words:
</p>
<table>
  <colgroup>
    <col class="Offset"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset </th>
    <th>Definition </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">USHORT Size;</pre>
    </td>
  </tr>
  <tr>
    <td>0x02 </td>
    <td>
    <pre class="source">union {
    USHORT HookId;
    struct {
        UCHAR Type;
        UCHAR Group;
    };
};</pre>
    </td>
  </tr>
</table>
<p>The total size of data for the event, i.e., both the fixed-size header and the 
variable-size event data, is given by the <span class="member">Size</span> member 
of the <span class="member">Packet</span>, i.e., at offset 0x04 in the header. The
<span class="member">HookId</span> at offset 0x06 in the header tells what type 
of event is logged and determines the meaning of whatever event data follows the 
header. In the absence of an <span class="struct">EVENT_DESCRIPTOR</span> for events 
that have a <span class="struct">SYSTEM_TRACE_HEADER</span>, the
<span class="member">HookId</span> is effectively the event identifier (no matter 
that by the time it gets translated for consumers its <span class="member">Group</span> 
and <span class="member">Type</span> show as a <span class="member">ProviderId</span> 
and <span class="member">Opcode</span>). A list of the known
<a href="../wmi_trace_packet/hookid.htm">Hook IDs for NT Kernel Logger Events</a> is 
presented separately. </p>

<!--webbot bot="Include" endspan i-checksum="52989" -->
  <h3>Extended Data Items </h3>
  <p>Ordinarily, the <span class="member">Data</span> array marks the end of the 
  header and the beginning of event-specific data. When the <span class="member">
  Marker</span> has the <span class="constant">TRACE_HEADER_PMC_COUNTERS_MASK</span> 
  or <span class="constant">TRACE_HEADER_PEBS_INDEX_FLAG</span> bits set, an extended 
  data item is inserted. In both cases, the format is documented because it is ultimately 
  translated by SECHOST for presentation to event consumers as the data for an extended 
  data item. C-language definitions are in EVNTCONS.H. </p>
  <p>When <span class="constant">TRACE_HEADER_PMC_COUNTERS_MASK</span> is set, the 
  inserted data is an <span class="struct">EVENT_EXTENDED_ITEM_PMC_COUNTERS</span>:
  </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">ULONG64 Counter [ANYSIZE_ARRAY];</pre>
        </td>
      </tr>
    </tbody>
  </table>
  <p>The value in the mask, i.e., from 0 to 7, tells how many of the current processor’s 
  performance monitoring counters are in the <span class="member">Counter</span> 
  array. The implementation presently allows at most 4 counters. The trace session’s 
  controller can choose the counters and the events for which the counters are collected. 
  (Details are in preparation.) </p>
  <p>When <span class="constant">TRACE_HEADER_PEBS_INDEX_FLAG</span> is set, the 
  inserted data is an <span class="struct">EVENT_EXTENDED_ITEM_PEBS_INDEX</span>:
  </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">ULONG64 PebsIndex;</pre>
        </td>
      </tr>
    </tbody>
  </table>
  <p>The kernel sets this flag only for the <span class="constant">PERFINFO_LOG_TYPE_CONTEXTSWAP</span> 
  (0x0524) event. The event-specific data is then a <span class="struct">
  <a href="../wmi_contextswap.htm">WMI_CONTEXTSWAP</a></span>. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 5th
    <a href="../../../../../../../../new/16/12.htm">December 2016</a> and was last 
    modified on 30th <a href="../../../../../../../../new/22/10.htm">November 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="14250" -->
  </div>
</div>

</body>

</html>

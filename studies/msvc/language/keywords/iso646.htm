<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>ISO646 Operator Keywords</title>
<link rel="stylesheet" type="text/css" href="../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/msvc.css">
<script type="text/javascript" src="../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="22580" endspan -->
<h1>ISO646 Operator Keywords </h1>
<p>Provided that Microsoft’s so-called language extensions are disabled, as with 
the <span class="switch"><a href="../../cl/cl/options/z$a.htm">/Za</a></span> option, 
the compiler defines various keywords that each map to the token for some operator.
</p>
<table>
  <tr>
    <th>Keyword </th>
    <th>Operator </th>
  </tr>
  <tr>
    <td><span class="keyword">and</span> </td>
    <td><span class="operator">&amp;&amp;</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">and_eq</span> </td>
    <td><span class="operator">&amp;=</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">bitand</span> </td>
    <td><span class="operator">&amp;</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">bitor</span> </td>
    <td><span class="operator">|</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">compl</span> </td>
    <td><span class="operator">~</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">not</span> </td>
    <td><span class="operator">!</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">not_eq</span> </td>
    <td><span class="operator">!=</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">or</span> </td>
    <td><span class="operator">||</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">or_eq</span> </td>
    <td><span class="operator">|=</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">xor</span> </td>
    <td><span class="operator">^</span> </td>
  </tr>
  <tr>
    <td><span class="keyword">xor_eq</span> </td>
    <td><span class="operator">^=</span> </td>
  </tr>
</table>
<p>Each keyword gets tokenised as the corresponding operator. For all practical 
purposes, the compiler proceeds as if the operator had been specified through the 
usual representation of that operator. Indeed, if the particular circumstances in 
which the keyword is used cause an error or warning, the message text will typically 
cite the corresponding operator, not the keyword. Even when the keyword is given 
as the argument to <span class="keyword"><a href="identifier.htm">__identifier</a></span>, 
it is already tokenised as the operator, such that the attempted conversion to an 
identifier is an error (<a href="../../cl/c1xx/errors/c2745.htm">C2745</a>). </p>
<p>With <span class="switch"><a href="../../cl/cl/options/z$e.htm">/Ze</a></span> 
active, the items listed above as keywords do not get defined as keywords. They 
are tokenised as identifiers and are available for naming code or data. Should these 
text names be wanted as alternative representations of these operators, they can 
be defined as macros (as done, indeed, in the header file, ISO646.H, that ships 
as standard with the compiler). Though this is certainly not the same as their being 
keywords, the practical difference is surely negligible. </p>
<div class="Footer">
  <p class="Dates">This page was created on 1st March 2006 and was last modified 
  on 9th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../_include/c0609.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2006-2009. Geoff Chappell. All rights reserved.
<a href="../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="58117" endspan -->
</div>

</body>

</html>

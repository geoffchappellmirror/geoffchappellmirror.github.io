<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Deferred Procedure Call (DPC)</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<h1>Deferred Procedure Call (DPC) </h1>
<p>At any given moment, execution of kernel-mode code is subject to the current 
processor’s current Interrupt Request Level (IRQL). Execution can be interrupted 
by code that runs at a higher IRQL. However, the higher the IRQL the more restricted 
is the execution. Most kernel functions are available for use only at the lowest 
IRQL, i.e., <span class="constant">PASSIVE_LEVEL</span> (0). The available 
functions are greatly 
reduced even for <span class="constant">APC_LEVEL</span> (1). Very few can be called 
at <span class="constant">DISPATCH_LEVEL</span> (2) and hardly any beyond that. 
Where code at this high an IRQL wants to do anything substantial, it must arrange 
for companion code to get executed at a lower IRQL when the kernel can get around 
to it. This deferring of execution to gentler circumstances is the essence of the 
Deferred Procedure Call. The blessing is relative, though, since the DPC executes 
at <span class="constant">DISPATCH_LEVEL</span>, which is still too high for such 
seemingly slight things as executing even a single instruction that touches pageable 
memory. </p>
<p>Kernel-mode code that expects to schedule a DPC, whether once or recurringly, 
first allocates a <span class="struct"><a href="../../../inc/ntos/ntosdef_x/kdpc.htm">KDPC</a></span> in non-paged 
memory and passes its address to <span class="function">KeInitializeDpc</span>. 
Other arguments associate the <span class="struct">KDPC</span> with both the procedure 
that is to be called back and an arbitrary context that will be passed to the callback 
procedure should it ever be called. The way to schedule a call back is to feed the
<span class="struct">KDPC</span> to the <span class="function">KeInsertQueueDpc</span> 
function. This puts the <span class="struct">KDPC</span> into a per-processor queue. 
The kernel, in its own good time, removes the <span class="struct">KDPC</span> from 
that queue and the Deferred Procedure Call finally happens. Among the callback procedure’s 
arguments are the context that was specified when the <span class="struct">KDPC</span> 
was initialised and two more arguments that were specified when the
<span class="struct">KDPC</span> was inserted. The DPC can be rescheduled simply 
by reinserting it. This can be done over and over, and typically is. If a DPC is 
scheduled but the call back is then not wanted, it can be removed from the queue 
by calling <span class="function">KeRemoveQueueDpc</span>. Some control over the 
insertion and the processing is available through other functions, which are better 
called while the <span class="struct">KDPC</span> is not inserted. To specify the 
processor that the DPC is to execute on, use <span class="function">KeSetTargetProcessorDpc</span> 
or, in version 6.1 and higher, <span class="function">KeSetTargetProcessorDpcEx</span>. 
To influence the order and circumstances of DPC processing, use
<span class="function">KeSetImportanceDpc</span>. </p>
<h2>Threaded DPCs </h2>
<p>In version 5.2 and higher, a <span class="struct">KDPC</span> can represent either 
a normal DPC, as described above, or a Threaded DPC. In the latter variant, the 
scheduled procedure is called back at <span class="constant">PASSIVE_LEVEL</span> 
from a highest-priority thread. There’s a catch, however. Support can be disabled 
via the registry: </p>
<table class="Registry">
  <tr>
    <td>Key: </td>
    <td><span class="regkey">HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session 
    Manager\Kernel</span> </td>
  </tr>
  <tr>
    <td>Value: </td>
    <td><span class="regvalue">ThreadDpcEnable</span> </td>
  </tr>
  <tr>
    <td>Default: </td>
    <td>1 </td>
  </tr>
</table>
<p>The kernel reads this registry value while starting. Whatever it finds applies 
thereafter to all processors. If this value is present and its data is zero, every 
threaded DPC is called at <span class="constant">DISPATCH_LEVEL</span> much as if 
it had been a normal DPC all along. &nbsp;</p>
<div class="Footer">
  <p class="Dates">This page was created on 28th
  <a href="../../../../../../../new/16/05.htm">May 2016</a> and was last modified 
  on 5th January 2017. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1617.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2017. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4997" -->
</div>

</body>

</html>

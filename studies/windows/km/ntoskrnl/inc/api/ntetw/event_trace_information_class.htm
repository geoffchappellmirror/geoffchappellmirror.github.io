<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EVENT_TRACE_INFORMATION_CLASS</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>EVENT_TRACE_INFORMATION_CLASS </h1>
  <p>The <span class="enum">EVENT_TRACE_INFORMATION_CLASS</span> is an enumeration 
  whose values are intended as the first dword in the information buffer when the
  <span class="function"><a href="../../../api/ex/sysinfo/query.htm">ZwQuerySystemInformation</a></span> 
  (or <span class="function">NtQuerySystemInformation</span>) and
  <span class="function"><a href="../../../api/ex/sysinfo/set.htm">ZwSetSystemInformation</a></span> 
  (or <span class="function">NtSetSystemInformation</span>) functions are given 
  the information class <span class="constant">SystemPerformanceTraceInformation</span> 
  (0x1F). </p>
  <h2>Documentation Status </h2>
  <p>The <span class="enum">EVENT_TRACE_INFORMATION_CLASS</span> enumeration is 
  not documented. </p>
  <!--webbot bot="Include" U-Include="_include/typeinfo_enum.htm" TAG="BODY" startspan -->

<p>A few public disclosures are known from Microsoft, though not as any sort of 
plain-English documentation. One is that a previously unpublished header named NTETW.H 
was published in the original and Version 1511 editions of the Windows Driver Kit 
(WDK) for Windows 10, and this header contains a C-language definition of the enumeration.
</p>
<p>Were it not for this limited and possibly unintended disclosure of NTETW.H, a 
practical equivalent of the C-language definition (but missing comments, of course) 
would anyway be known from type information in symbol files. But this too has the 
look of an oversight. Type information for this enumeration has never appeared in 
any public symbol files for the kernel or for the obvious low-level user-mode DLLs. 
It has instead slipped out in symbol files for a smattering of higher-level user-mode 
DLLs, starting with Windows 8. For these few, the readily available symbol files 
actually are private symbol files and show that the unpublished
<a href="../../../source/inc/ntetw.htm">NTETW.H</a> was included when compiling 
the corresponding binaries. Type information also has been published in a statically 
linked library, named CLFSMGMT.LIB, which Microsoft distributes with the Software 
Development Kit (SDK) starting for Windows Vista. </p>

<!--webbot bot="Include" endspan i-checksum="13515" -->
  <!--webbot bot="Include" U-Include="_include/clfsmgmt.htm" TAG="BODY" startspan -->

<p>Type information also has been published in a statically linked library, named 
CLFSMGMT.LIB, which Microsoft distributes with the Software Development Kit (SDK) 
starting for Windows Vista. This does not have the forensic quality as has type 
information in symbol files for the binaries that ship with an operating system, 
for although it is as accurate for when the library was built, there is no requirement 
that the library have been built with the operating system that it targets. There 
can be, and often is, some discrepancy, and there is anyway not always a fresh library 
for each service pack. </p>

<!--webbot bot="Include" endspan i-checksum="57935" -->
  <h2>Values </h2>
  <p>For the table that follows, Microsoft’s names are known for version 6.2 and 
  higher from type information in symbol files and libraries, and from the limited 
  publication of a C-language definition, as described above. </p>
  <p>Of the many defined values, some can be used successfully only to query or 
  only to set: </p>
  <table class="Enum">
    <colgroup>
      <col class="Value"><col class="Name"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
        <th>Versions </th>
        <th>Query Or Set </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td><span class="constant">EventTraceKernelVersionInformation</span>
        </td>
        <td>6.0 and higher </td>
        <td>query </td>
      </tr>
      <tr>
        <td rowspan="2">0x01 </td>
        <td rowspan="2"><span class="constant">EventTraceGroupMaskInformation</span>
        </td>
        <td>6.0 to 6.1 </td>
        <td>query </td>
      </tr>
      <tr>
        <td>6.2 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x02 </td>
        <td><span class="constant">EventTracePerformanceInformation</span> </td>
        <td>6.0 and higher </td>
        <td>query </td>
      </tr>
      <tr>
        <td>0x03 </td>
        <td><span class="constant">EventTraceTimeProfileInformation</span> </td>
        <td>6.0 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td><span class="constant">EventTraceSessionSecurityInformation</span>
        </td>
        <td>6.0 and higher </td>
        <td>query </td>
      </tr>
      <tr>
        <td>0x05 </td>
        <td><span class="constant">EventTraceSpinlockInformation</span> </td>
        <td>6.1 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x06 </td>
        <td><span class="constant">EventTraceStackTracingInformation</span> </td>
        <td>6.1 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x07 </td>
        <td><span class="constant">EventTraceExecutiveResourceInformation</span>
        </td>
        <td>6.1 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td><span class="constant">EventTraceHeapTracingInformation</span> </td>
        <td>6.1 and higher </td>
        <td>query </td>
      </tr>
      <tr>
        <td>0x09 </td>
        <td><span class="constant">EventTraceHeapSummaryTracingInformation</span>
        </td>
        <td>6.1 and higher </td>
        <td>query </td>
      </tr>
      <tr>
        <td>0x0A </td>
        <td><span class="constant">EventTracePoolTagFilterInformation</span>
        </td>
        <td>6.1 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x0B </td>
        <td><span class="constant">EventTracePebsTracingInformation</span> </td>
        <td>6.2 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td><span class="constant">EventTraceProfileConfigInformation</span>
        </td>
        <td>6.2 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x0D </td>
        <td><span class="constant">EventTraceProfileSourceListInformation</span>
        </td>
        <td>6.2 and higher </td>
        <td>query </td>
      </tr>
      <tr>
        <td>0x0E </td>
        <td><span class="constant">EventTraceProfileEventListInformation</span>
        </td>
        <td>6.2 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x0F </td>
        <td><span class="constant">EventTraceProfileCounterListInformation</span>
        </td>
        <td>6.2 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td><span class="constant">EventTraceStackCachingInformation</span> </td>
        <td>6.2 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x11 </td>
        <td><span class="constant">EventTraceObjectTypeFilterInformation</span>
        </td>
        <td>6.2 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x12 </td>
        <td><span class="constant">EventTraceSoftRestartInformation</span> </td>
        <td>1607 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x13 </td>
        <td><span class="constant">EventTraceLastBranchConfigurationInformation</span>
        </td>
        <td>1709 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x14 </td>
        <td><span class="constant">EventTraceLastBranchEventListInformation</span>
        </td>
        <td>1709 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x15 </td>
        <td><span class="constant">EventTraceProfileSourceAddInformation</span>
        </td>
        <td>1803 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x16 </td>
        <td><span class="constant">EventTraceProfileSourceRemoveInformation</span>
        </td>
        <td>1803 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x17 </td>
        <td><span class="constant">EventTraceProcessorTraceConfigurationInformation</span>
        </td>
        <td>1803 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x18 </td>
        <td><span class="constant">EventTraceProcessorTraceEventListInformation</span>
        </td>
        <td>1803 and higher </td>
        <td>set </td>
      </tr>
      <tr>
        <td>0x19 </td>
        <td><span class="constant">EventTraceCoverageSamplerInformation</span>
        </td>
        <td>1803 and higher </td>
        <td>both </td>
      </tr>
      <tr>
        <td>0x05 (6.0); <br>
        0x0B (6.1); <br>
        0x12 (6.2 to 1511); <br>
        0x13 (1607 to 1703); <br>
        0x15 (1709); <br>
        0x1A </td>
        <td><span class="constant">MaxEventTraceInfoClass</span> </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>Though <span class="constant">EventTraceSpinlockInformation</span> is listed 
  above for 6.1 and higher, it is not implemented in 32-bit Windows 7. The 64-bit 
  kernel’s code for spin locks had been in C (or C++) from the start, i.e., for 
  Windows Server 2003 SP1, but the corresponding code in the 32-bit kernel is still 
  in assembly language in Windows 7. Its evolution from Windows NT 3.1 had gone 
  as far as adding hypervisor notifications and, for Windows 7, the maintenance 
  of performance counters in the <span class="struct">
  <a href="../../ntos/i386_x/kprcb/index.htm">KPRCB</a></span>, but there it was 
  left. Not until Windows 8 does 32-bit Windows trace events for spin locks. </p>
  <h2>Behaviour </h2>
  <p>In its role as the first dword of input in the information buffer for
  <span class="function">ZwQuerySystemInformation</span> and
  <span class="function">ZwSetSystemInformation</span> when given the information 
  class <span class="constant">SystemPerformanceTraceInformation</span>, the
  <span class="enum">EVENT_TRACE_INFORMATION_CLASS</span> enumeration subdivides 
  the behaviour of these functions—which is as well picked up here. This review 
  takes as understood all the general points and shorthands that are noted in the 
  separate attempt at documenting the functions, and takes as granted that the information 
  class is <span class="constant">SystemPerformanceTraceInformation</span> and that 
  the information buffer is at least large enough for an <span class="enum">EVENT_TRACE_INFORMATION_CLASS</span>.
  </p>
  <p>If the <span class="enum">EVENT_TRACE_INFORMATION_CLASS</span> on input is 
  not listed above as valid for the function, then the function returns
  <span class="constant">STATUS_NOT_IMPLEMENTED</span>.. </p>
  <p>Each <span class="enum">EVENT_TRACE_INFORMATION_CLASS</span> is associated 
  with a structure that is at least the start of what the function produces as its 
  output or expects as input. Mostly, the structure has no other purpose. Rather 
  than have a separate page for each information class and then another for the 
  corresponding structure, the remainder of this page gives for each information 
  class a brief description of the general behaviour, and then the meaning of whatever 
  the function puts in the structure or inteprets in it is taken up, if at all, 
  in the separate documentation of the structure. </p>
  <p>A unified presentation of these cases is very much the sort of thing that isn’t 
  well settled until all the cases have been examined. Of necessity this is a bit 
  of an open-ended project, and commercial imperatives may mean the project must 
  be abandoned. Please beware that the <span class="draft">draft colour</span> signifies 
  rough notes and tentative thoughts that I offer only on the basis that they may 
  (or may not) be better than nothing. </p>
  <h3>EventTraceKernelVersionInformation (0x00) </h3>
  <p>The information buffer must provide exactly an <span class="struct">
  <a href="event_trace_version_information.htm">EVENT_TRACE_VERSION_INFORMATION</a></span> 
  structure. </p>
  <h3>EventTraceGroupMaskInformation (0x01) </h3>
  <p>The information buffer must provide exactly an <span class="struct">
  <a href="event_trace_groupmask_information.htm">EVENT_TRACE_GROUPMASK_INFORMATION</a></span> 
  structure. </p>
  <h3>EventTracePerformanceInformation (0x02) </h3>
  <p>The information buffer must provide exactly an <span class="struct">
  <a href="event_trace_performance_information.htm">EVENT_TRACE_PERFORMANCE_INFORMATION</a></span> 
  structure. </p>
  <p>Beware that Microsoft’s NTETW.H has a single-line comment to say of this information 
  class, in parentheses, that it is “private, subject to change”. Comments are rare 
  in this header. Perhaps this one means something. </p>
  <div class="draft">
    <h3>EventTraceTimeProfileInformation (0x03) </h3>
    <p>The information buffer must provide exactly an <span class="struct">EVENT_TRACE_TIME_PROFILE_INFORMATION</span> 
    structure. </p>
    <h3>EventTraceSessionSecurityInformation (0x04) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_SESSION_SECURITY_INFORMATION</span> 
    structure. </p>
  </div>
  <h3>EventTraceSpinlockInformation (0x05) </h3>
  <p>The information buffer must provide exactly an <span class="struct">EVENT_TRACE_SPINLOCK_INFORMATION_V1</span> 
  or <span class="struct"><a href="event_trace_spinlock_information.htm">EVENT_TRACE_SPINLOCK_INFORMATION</a></span> 
  structure. </p>
  <div class="draft">
    <h3>EventTraceStackTracingInformation (0x06) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_SYSTEM_EVENT_INFORMATION</span> 
    structure up to but not including its <span class="member">HookId</span> array.
    </p>
    <p>When setting information, the excess over the bare minimum must provide exactly 
    a whole number of array elements, else the function fails, returning
    <span class="constant">STATUS_INVALID_PARAMETER</span>. </p>
    <h3>EventTraceExecutiveResourceInformation (0x07) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_EXECUTIVE_RESOURCE_INFORMATION</span> 
    structure. </p>
    <h3>EventTraceHeapTracingInformation (0x08) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_HEAP_TRACING_INFORMATION</span> 
    structure. </p>
    <h3>EventTraceHeapSummaryTracingInformation (0x09) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_HEAP_TRACING_INFORMATION</span> 
    structure. </p>
    <h3>EventTracePoolTagFilterInformation (0x0A) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_TAG_FILTER_INFORMATION</span> 
    structure up to but not including its <span class="member">Filter</span> array.
    </p>
    <p>When setting information, the excess over the bare minimum must provide exactly 
    a whole number of array elements, but no more than 4, else the function fails, 
    returning <span class="constant">STATUS_INVALID_PARAMETER</span>. </p>
    <h3>EventTracePebsTracingInformation (0x0B) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_SYSTEM_EVENT_INFORMATION</span> 
    structure up to but not including its <span class="member">HookId</span> array.
    </p>
    <p>If the excess over the bare minimum does not provide exactly 0 or 1 array 
    element, the function fails, returning <span class="constant">STATUS_INVALID_PARAMETER</span>. 
    Moreover, if an array element is provided, it must be 0x00000524. </p>
    <p>If executing for a user-mode request, the caller must have
    <span class="constant">SeSystemProfilePrivilege</span>, else the function fails, 
    returning <span class="constant">STATUS_PRIVILEGE_NOT_HELD</span>. </p>
  </div>
  <h3>EventTraceProfileConfigInformation (0x0C) </h3>
  <p>The event buffer must provide at least an <span class="struct">
  <a href="event_trace_profile_counter_information.htm">EVENT_TRACE_PROFILE_COUNTER_INFORMATION</a></span> 
  structure up to but not including its <span class="member">ProfileSource</span> 
  array. </p>
  <div class="draft">
    <h3>EventTraceProfileSourceListInformation (0x0D) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_PROFILE_LIST_INFORMATION</span> 
    structure. </p>
    <h3>EventTraceProfileEventListInformation (0x0E) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_SYSTEM_EVENT_INFORMATION</span> 
    structure up to but not including its <span class="member">HookId</span> array. 
    If the excess over this bare minimum does not provide a whole number of array 
    elements, the function fails, returning <span class="constant">STATUS_INVALID_PARAMETER</span>.
    </p>
  </div>
  <h3>EventTraceProfileCounterListInformation (0x0F) </h3>
  <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_PROFILE_COUNTER_INFORMATION</span> 
  structure up to but not including its <span class="member">ProfileSource</span> 
  array. </p>
  <div class="draft">
    <h3>EventTraceStackCachingInformation (0x10) </h3>
    <p>The information buffer must provide exactly an <span class="struct">EVENT_TRACE_STACK_CACHING_INFORMATION</span> 
    structure. </p>
    <h3>EventTraceObjectTypeFilterInformation (0x11) </h3>
    <p>The information buffer must provide at least an <span class="struct">EVENT_TRACE_TAG_FILTER_INFORMATION</span> 
    structure up to but not including its <span class="member">Filter</span> array. 
    If the excess over the bare minimum does not provide exactly a whole number 
    of array elements, but no more than 4, the function fails, returning
    <span class="constant">STATUS_INVALID_PARAMETER</span>. </p>
  </div>
  <div class="Footer">
    <p class="Dates">This page was created on 25th
    <a href="../../../../../../../new/16/11.htm">November 2016</a> and was last 
    modified on 30th <a href="../../../../../../../new/22/10.htm">November 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

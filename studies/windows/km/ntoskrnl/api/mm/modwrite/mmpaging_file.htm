<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>MMPAGING_FILE</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>MMPAGING_FILE </h1>
<p>The <span class="struct">MMPAGING_FILE</span> structure either holds or points 
the way to pretty much everything that the kernel’s Memory Manager tracks about 
a paging file. </p>
<h2>Variability </h2>
<p>As an internal structure, the <span class="struct">MMPAGING_FILE</span> varies 
between versions, but far less than do many others and apparently never between 
builds of the one version. The changing size gives a rough guide to the variability:
</p>
<table class="Sizes">
  <colgroup>
    <col class="Version"><col class="Size" span="2">
  </colgroup>
  <tr>
    <th>Version </th>
    <th>Size (x86) </th>
    <th>Size (x64) </th>
  </tr>
  <tr>
    <td>3.51 to 5.0 </td>
    <td>0x40 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.1 </td>
    <td>0x44 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.2 </td>
    <td>0x3C </td>
    <td>0x78 </td>
  </tr>
  <tr>
    <td>6.0 </td>
    <td>0x50 </td>
    <td>0xA0 </td>
  </tr>
  <tr>
    <td>6.1 </td>
    <td>0x50 </td>
    <td>0x90 </td>
  </tr>
  <tr>
    <td>6.2 </td>
    <td>0x64 </td>
    <td>0xA8 </td>
  </tr>
  <tr>
    <td>6.3 </td>
    <td>0x80 </td>
    <td>0xE0 </td>
  </tr>
  <tr>
    <td>10.0 </td>
    <td>0x90 </td>
    <td>0x0100 </td>
  </tr>
</table>
<h2>Layout </h2>
<p>These sizes, and the offsets, types and names in the tables that follow, are 
from Microsoft’s symbol files for the kernel starting with Windows 2000 SP3. Since 
symbol files for earlier versions do not contain type information for the
<span class="struct">MMPAGING_FILE</span>, what’s known for them is instead inferred 
from what use the kernel is seen to make of the <span class="struct">MMPAGING_FILE</span>. 
Sizes are relatively straightforward, even without symbol files, but Microsoft’s 
names and types for all the members in these early versions can be something of 
a guess. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
    <col class="Remarks">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>0x00 </td>
    <td>
    <pre class="source">ULONG_PTR Size;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 </td>
    <td>0x08 </td>
    <td>
    <pre class="source">ULONG_PTR MaximumSize;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x08 </td>
    <td>0x10 </td>
    <td>
    <pre class="source">ULONG_PTR MinimumSize;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0C </td>
    <td>0x18 </td>
    <td>
    <pre class="source">ULONG_PTR FreeSpace;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x10 (3.51 to 5.2) </td>
    <td>0x20 (5.2) </td>
    <td>
    <pre class="source">ULONG CurrentUsage;</pre>
    </td>
    <td>3.51 to 5.2 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x14 (3.51 to 5.2); <br>
    0x10 </td>
    <td>0x28 (5.2); <br>
    0x20 </td>
    <td>
    <pre class="source">ULONG_PTR PeakUsage;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x18 (3.51 to 5.1) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">ULONG Hint;</pre>
    </td>
    <td>3.51 to 5.1 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x1C (3.51 to 5.1); <br>
    0x18 (5.2); <br>
    0x14 </td>
    <td>0x30 (5.2); <br>
    0x28 </td>
    <td>
    <pre class="source">ULONG_PTR HighestPage;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x18 </td>
    <td>0x30 </td>
    <td>
    <pre class="source">ULONG_PTR FreeReservationSpace;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x1C </td>
    <td>0x38 </td>
    <td>
    <pre class="source">ULONG_PTR LargestReserveCluster;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x1C (5.2); <br>
    0x18 (6.0 to 6.1); <br>
    0x20 </td>
    <td>0x38 (5.2); <br>
    0x30 (6.0 to 6.1); <br>
    0x40 </td>
    <td>
    <pre class="source">FILE_OBJECT *File;</pre>
    </td>
    <td>5.2 and higher </td>
    <td>previously at 0x2C </td>
  </tr>
  <tr>
    <td>0x20 (3.51 to 5.2); <br>
    0x1C (6.0 to 6.1); <br>
    0x24 </td>
    <td>0x40 (5.2); <br>
    0x38 (6.0 to 6.1); <br>
    0x48 </td>
    <td>
    <pre class="source"><a href="mmmod_writer_mdl_entry.htm">MMMOD_WRITER_MDL_ENTRY</a> *Entry [2];</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x28 (3.51 to 5.1) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">RTL_BITMAP *Bitmap;</pre>
    </td>
    <td>3.51 to 5.1 </td>
    <td>next at 0x30 </td>
  </tr>
  <tr>
    <td>0x2C (3.51 to 5.1) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">FILE_OBJECT *File;</pre>
    </td>
    <td>3.51 to 5.1 </td>
    <td>next at 0x1C </td>
  </tr>
  <tr>
    <td>0x30 (3.51 to 4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">ULONG PageFileNumber;</pre>
    </td>
    <td>3.51 to 4.0 </td>
    <td>next at 0x38 </td>
  </tr>
  <tr>
    <td>0x30 </td>
    <td>0x60 </td>
    <td>
    <pre class="source">SLIST_HEADER PfnsToFree;</pre>
    </td>
    <td>6.3 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x34 (3.51 to 4.0); <br>
    0x30 (5.0 to 5.1); <br>
    0x28 (5.2); <br>
    0x24 (6.0 to 6.1); <br>
    0x2C (6.2); <br>
    0x38 </td>
    <td>0x50 (5.2); <br>
    0x48 (6.0 to 6.1); <br>
    0x58 (6.2); <br>
    0x70 </td>
    <td>
    <pre class="source">UNICODE_STRING PageFileName;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x30 (5.2); <br>
    0x2C (6.0 to 6.1) </td>
    <td>0x60 (5.2); <br>
    0x58 (6.0 to 6.1) </td>
    <td>
    <pre class="source">RTL_BITMAP *Bitmap;</pre>
    </td>
    <td>5.2 to 6.1 </td>
    <td>previously at 0x28 </td>
  </tr>
  <tr>
    <td>0x30 (6.1) </td>
    <td>0x60 (6.1) </td>
    <td>
    <pre class="source">RTL_BITMAP *EvictStoreBitmap;</pre>
    </td>
    <td>6.1 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x34 (6.2); <br>
    0x40 </td>
    <td>0x68 (6.2); <br>
    0x80 </td>
    <td>
    <pre class="source"><a href="mi_paging_file_space_bitmaps.htm">MI_PAGING_FILE_SPACE_BITMAPS</a> *Bitmaps;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0x30 (6.0); <br>
    0x34 (6.1); <br>
    0x38 (6.2); <br>
    0x44 </td>
    <td rowspan="2">0x60 (6.0); <br>
    0x68 (6.1); <br>
    0x70 (6.2); <br>
    0x88 </td>
    <td>
    <pre class="source">ULONG BitmapHint;</pre>
    </td>
    <td>6.0 to 6.1 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">ULONG AllocationBitmapHint;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x3C (6.2); <br>
    0x48 </td>
    <td>0x74 (6.2); <br>
    0x8C </td>
    <td>
    <pre class="source">ULONG ReservationBitmapHint;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x34 (6.0); <br>
    0x38 (6.1) </td>
    <td>0x64 (6.0); <br>
    0x6C (6.1) </td>
    <td>
    <pre class="source">ULONG LastAllocationSize;</pre>
    </td>
    <td>6.0 to 6.1 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x40 (6.2); <br>
    0x4C </td>
    <td>0x78 (6.2); <br>
    0x90 </td>
    <td>
    <pre class="source">ULONG LargestNonReservedClusterSize;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x44 (6.2); <br>
    0x50 </td>
    <td>0x7C (6.2); <br>
    0x94 </td>
    <td>
    <pre class="source">ULONG RefreshClusterSize;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x48 (6.2); <br>
    0x54 </td>
    <td>0x80 (6.2); <br>
    0x98 </td>
    <td>
    <pre class="source">ULONG LastRefreshClusterSize;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x4C (6.2); <br>
    0x58 </td>
    <td>0x84 (6.2); <br>
    0x9C </td>
    <td>
    <pre class="source">ULONG ReservedClusterSizeAggregate;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0x3C (6.1); <br>
    0x50 (6.2); <br>
    0x5C </td>
    <td rowspan="2">0x70 (6.1); <br>
    0x88 (6.2); <br>
    0xA0 </td>
    <td>
    <pre class="source">ULONG ToBeEvictedCount;</pre>
    </td>
    <td>6.1 to 6.3 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">union {
    ULONG ToBeEvictedCount;
    ULONG HybridPriority;
};</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x60 (6.3) </td>
    <td>0xA4 (6.3) </td>
    <td>
    <pre class="source">ULONG HybridPriority;</pre>
    </td>
    <td>6.3 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="3">0x38 (5.0 to 5.1); <br>
    0x34 (5.2); <br>
    0x38 (6.0); <br>
    0x40 (6.1); <br>
    0x54 (6.2); <br>
    0x64 (6.3); <br>
    0x60 </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">ULONG PageFileNumber;</pre>
    </td>
    <td>5.0 to 5.1 </td>
    <td>previously at 0x30; <br>
    next as bit field </td>
  </tr>
  <tr>
    <td rowspan="2">0x68 (5.2); <br>
    0x68 (6.0); <br>
    0x74 (6.1); <br>
    0x8C (6.2); <br>
    0xA8 (6.3); <br>
    0xA4 </td>
    <td>
    <pre class="source">/*  ULONG bit fields, see below  */</pre>
    </td>
    <td>5.2 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">/*  USHORT bit fields, see below  */</pre>
    </td>
    <td>6.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0x3A (6.0); <br>
    0x42 (6.1); <br>
    0x56 (6.2); <br>
    0x66 (6.3); <br>
    0x62 </td>
    <td rowspan="2">0x6A (6.0); <br>
    0x76 (6.1); <br>
    0x8E (6.2); <br>
    0xAA (6.3); <br>
    0xA6 </td>
    <td>
    <pre class="source"> struct {
    USHORT AdriftMdls : 1;
    USHORT Spare1 : 15;
};</pre>
    </td>
    <td>6.0 to 6.1 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">struct {
    UCHAR AdriftMdls : 1;
    UCHAR Spare1 : 7;
};</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x57 (6.2); <br>
    0x67 (6.3); <br>
    0x63 </td>
    <td>0x8F (6.2); <br>
    0xAB (6.3); <br>
    0xA7 </td>
    <td>
    <pre class="source">UCHAR Spare2 : 8;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x3C (3.51 to 5.1) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">UCHAR Extended;</pre>
    </td>
    <td>3.51 to 5.1 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x3D (3.51 to 5.1) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">UCHAR HintSetToZero;</pre>
    </td>
    <td>3.51 to 5.1 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x3E (5.1) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">BOOLEAN BootPartition;</pre>
    </td>
    <td>5.1 only </td>
    <td>next as bit field at 0x34 </td>
  </tr>
  <tr>
    <td>0x68 (6.3); <br>
    0x64 </td>
    <td>0xAC (6.3); <br>
    0xA8 </td>
    <td>
    <pre class="source">ULONG PageHashPages;</pre>
    </td>
    <td>6.3 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x6C (6.3); <br>
    0x68 </td>
    <td>0xB0 (6.3); <br>
    0xAC </td>
    <td>
    <pre class="source">ULONG PageHashPagesPeak;</pre>
    </td>
    <td>6.3 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x70 (6.3); <br>
    0x6C </td>
    <td>0xB8 (6.3); <br>
    0xB0 </td>
    <td>
    <pre class="source">ULONG *PageHash;</pre>
    </td>
    <td>6.3 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x40 (5.1); <br>
    0x38 (5.2); <br>
    0x3C (6.0); <br>
    0x44 (6.1); <br>
    0x58 (6.2); <br>
    0x74 (6.3); <br>
    0x70 </td>
    <td>0x70 (5.2 to 6.0); <br>
    0x78 (6.1); <br>
    0x90 (6.2); <br>
    0xC0 (6.3); <br>
    0xB8 </td>
    <td>
    <pre class="source">HANDLE FileHandle;</pre>
    </td>
    <td>5.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x40 (6.0) </td>
    <td>0x80 (6.0) </td>
    <td>
    <pre class="source">SLIST_HEADER AvailableList;</pre>
    </td>
    <td>6.0 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x48 (6.0) </td>
    <td>0x90 (6.0) </td>
    <td>
    <pre class="source">SLIST_HEADER NeedProcessingList;</pre>
    </td>
    <td>6.0 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x48 (6.1); <br>
    0x5C (6.2); <br>
    0x78 (6.3); <br>
    0x74 </td>
    <td>0x80 (6.1); <br>
    0x98 (6.2); <br>
    0xC8 (6.3); <br>
    0xC0 </td>
    <td>
    <pre class="source">KSPIN_LOCK Lock;</pre>
    </td>
    <td>6.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x4C (6.1); <br>
    0x60 (6.2); <br>
    0x7C (6.3); <br>
    0x78 </td>
    <td>0x88 (6.1); <br>
    0xA0 (6.2); <br>
    0xD0 (6.3); <br>
    0xC8 </td>
    <td>
    <pre class="source"><a href="../../../inc/ntos/ps/ethread/index.htm">ETHREAD</a> *LockOwner;</pre>
    </td>
    <td>6.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x7C </td>
    <td>0xD0 </td>
    <td>
    <pre class="source">RTL_AVL_TREE FlowThroughReadRoot;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x80 </td>
    <td>0xD8 </td>
    <td>
    <pre class="source"><a href="../partition/mi/index.htm">MI_PARTITION</a> *Partition;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x84 </td>
    <td>0xE0 </td>
    <td>
    <pre class="source">RTL_BALANCED_NODE FileObjectNode;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
</table>
<p>The <span class="struct">MMPAGING_FILE</span> is in non-paged pool, of course—and, 
starting with version 6.2, in non-paged no-execute pool. So too are various helper 
structures, e.g., those for the <span class="member">Entry</span> array and the 
various bitmaps. The paging file’s name, however, is not accessed during paging 
I/O. It is kept just for information. The <span class="member">Buffer</span> in
<span class="member">PageFileName</span> is in paged pool. Moreover, it just records 
what filename was given to the <span class="function">NtCreatePagingFile</span> 
that created this <span class="struct">MMPAGING_FILE</span>. This filename need 
not still be valid when inspected later. </p>
<h3>Bit Fields </h3>
<p>Even now that Windows 10 has an array of <span class="struct">MMPAGING_FILE</span> 
pointers for each <a href="../partition/index.htm">memory partition</a>, each array 
still has the age-old capacity of 0x10. To allow 32 bits for the
<span class="member">PageFileNumber</span>, which indexes the array, always was 
excessive and the opportunity was eventually taken to make bit fields of both it 
and the boolean <span class="member">BootPartition</span>. </p>
<table>
  <tr>
    <th>Mask </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td rowspan="2">0x000F </td>
    <td>
    <pre class="source">ULONG PageFileNumber : 4;</pre>
    </td>
    <td>5.2 only </td>
    <td>previously <span class="type">ULONG</span> at 0x38 </td>
  </tr>
  <tr>
    <td>
    <pre class="source">USHORT PageFileNumber : 4;</pre>
    </td>
    <td>6.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x00F0 </td>
    <td>
    <pre class="source">ULONG ReferenceCount : 4;</pre>
    </td>
    <td>5.2 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0x0100 (5.2); <br>
    0x0010 (6.0 to 6.3) </td>
    <td>
    <pre class="source">ULONG BootPartition : 1;</pre>
    </td>
    <td>5.2 only </td>
    <td>previously <span class="type">BOOLEAN</span> at 0x3E </td>
  </tr>
  <tr>
    <td>
    <pre class="source">USHORT BootPartition : 1;</pre>
    </td>
    <td>6.0 to 6.3 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0020 (6.2 to 6.3); <br>
    0x0010 </td>
    <td>
    <pre class="source">USHORT WsSwapPagefile : 1;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0040 (6.2 to 6.3); <br>
    0x0020 </td>
    <td>
    <pre class="source">USHORT NoReservations : 1;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0040 </td>
    <td>
    <pre class="source">USHORT VirtualStorePagefile : 1;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0080 </td>
    <td>
    <pre class="source">USHORT SwapSupported : 1;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0100 </td>
    <td>
    <pre class="source">USHORT NodeInserted : 1;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0200 </td>
    <td>
    <pre class="source">USHORT StackNotified : 1;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="4">&nbsp;</td>
    <td>
    <pre class="source">ULONG Reserved : 23;</pre>
    </td>
    <td>5.2 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">USHORT Spare0 : 11;</pre>
    </td>
    <td>6.0 to 6.1 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">USHORT Spare0 : 9;</pre>
    </td>
    <td>6.2 to 6.3 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">USHORT Spare0 : 5;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
</table>
<div class="Footer">
  <p class="Dates">This page was created on 14th July 2016 and was last modified 
  on 29th July 2016. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c16.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="6338" -->
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>RTL_PERTHREAD_CURDIR</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>RTL_PERTHREAD_CURDIR </h1>
  <p>The <span class="struct">RTL_PERTHREAD_CURDIR</span> structure (formally
  <span class="struct">_RTL_PERTHREAD_CURDIR</span>) is a small structure whose 
  only known use is for the illusion that 32-bit Windows runs 16-bit Windows programs 
  as 16-bit processes. In fact, 16-bit Windows programs each run as one thread in 
  a specially prepared 32-bit process. </p>
  <p>The <span class="struct">RTL_PERTHREAD_CURDIR</span> is 0x0C and 0x18 bytes 
  in 32-bit and 64-bit Windows, respectively, in all known versions. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>
        <pre class="source"><a href="../pebteb/rtl_drive_letter_curdir.htm">RTL_DRIVE_LETTER_CURDIR</a> *CurrentDirectories;</pre>
        </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>0x08 </td>
        <td>
        <pre class="source"><a href="../../shared/ntdef/unicode_string.htm">UNICODE_STRING</a> *ImageName;</pre>
        </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>0x10 </td>
        <td>
        <pre class="source">PVOID Environment;</pre>
        </td>
      </tr>
    </tbody>
  </table>
  <p>From the structure’s name, the intended purpose of the <span class="struct">
  RTL_PERTHREAD_CURDIR</span> is for keeping a current directory for each thread. 
  If indeed the intended threads are each 16-bit programs, then the intended use 
  looks to be that each program can have its own set of current directories for 
  each drive letter. This is consistent with the naming of <span class="member">
  CurrentDirectories</span> and the type that it points to. From the names of the 
  additional members, this intended use looks to have been extended to take in other 
  properties that are or can be unique to each thread, as with
  <span class="member">ImageName</span> for the pathname of the 16-bit program and
  <span class="member">Environment</span> for the program’s environment variables.
  </p>
  <p>Whatever came of any of these intentions is unclear. The only known preparation 
  of an <span class="struct">RTL_PERTHREAD_CURDIR</span> is by WOW32.DLL. It builds 
  the structure on the stack of the thread that <span class="emphasis">is</span> 
  the newly running 16-bit Windows program. All that WOW32 sets non-trivially in 
  this structure is the <span class="member">ImageName</span>. Both
  <span class="member">CurrentDirectories</span> and <span class="member">Environment</span> 
  are initialised to <span class="constant">NULL</span> and no further use is known 
  of either. Of course, that no further use is known may mean simply that more research 
  is required. </p>
  <h2>Repurpose </h2>
  <p>You might think the <span class="struct">RTL_PERTHREAD_CURDIR</span> can be 
  nothing but a historical curiosity. After all, you need some determination these 
  days even to find a 16-bit program, perhaps on a long-forgotten CD (or even a 
  floppy disk), let alone to see one running. Now that almost everyone uses 64-bit 
  Windows, running even one 16-bit Windows program needs more than a little preparation, 
  e.g., of a virtual machine that runs 32-bit Windows. </p>
  <p>What may make the <span class="struct">RTL_PERTHREAD_CURDIR</span> structure 
  worth attention even in the 2020s is that even if one never gets created, Windows 
  still has code that will use one that ever does get created. Have a look at the
  <span class="struct"><a href="../pebteb/teb/index.htm">TEB</a></span>. This is 
  the primary storage for whatever the kernel, NTDLL and various low-level user-mode 
  modules use for managing a thread’s user-mode execution. This
  <span class="struct">TEB</span> is a highly variable internal detail, but In all 
  Windows versions the <span class="struct">TEB</span> begins with an
  <span class="struct">NT_TIB</span> which is very stable. Among the latter’s members 
  is a <span class="member">SubSystemTib</span>, defined only as pointing to
  <span class="type">void</span>. All Windows versions have code somewhere that 
  interprets this pointer. To all this code, if <span class="member">SubSystemTib</span> 
  is not <span class="constant">NULL</span>, then what it points to is an
  <span class="struct">RTL_PERTHREAD_CURDIR</span> in which to look for the
  <span class="member">ImageName</span>. </p>
  <p>This is true all the way back to Windows NT 3.10. The interpretation is originally 
  in KERNEL32.DLL, both in as prominent a function as the exported
  <span class="function">GetModuleFileNameW</span> and in an internal routine named
  <span class="internal routine">BaseComputeProcessDllPath</span>. It stays in
  <span class="function">GetModuleFileNameW</span> even when moved to KERNELBASE 
  for Windows 7. Windows 8 moved the interpretation to NTDLL, again in one exported 
  function and one internal routine, named <span class="function">LdrGetDllFullName</span> 
  and <span class="internal routine">RtlpGetDirPath</span>, respectively. It’s still 
  there as of the 2004 release of Windows 10—and not just 32-bit, in case the thread 
  is in the host process of a 16-bit Windows program, but in 64-bit Windows too.
  </p>
  <p>Though this use that Windows will make of the <span class="struct">RTL_PERTHREAD_CURDIR</span> 
  sounds obscure, it has practical implications for everyday Windows programming. 
  Finding a pathname for “the executable file of the current process” or loading 
  a DLL from the “directory containing the image file used to create the calling 
  process”, as Microsoft puts these things in documentation of the
  <span class="function">GetModuleFileName</span> and of <span class="function">
  LoadLibrary</span> functions, is not nearly as well defined as many think (or 
  could ever know from Microsoft’s documentation). The answer you get or the DLL 
  that Windows finds for you—and executes—depends on what the calling thread has 
  for its <span class="member">SubSystemTib</span>. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 12th
    <a href="../../../../../../../new/22/12.htm">January 2023</a> and was last modified 
    on 22nd February 2023. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c23.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2023. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="6018" -->
  </div>
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EVENT_TRACE_PERFORMANCE_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>EVENT_TRACE_PERFORMANCE_INFORMATION </h1>
  <p>The <span class="struct">EVENT_TRACE_PERFORMANCE_INFORMATION</span> structure 
  is one of many that the <span class="function">
  <a href="../../../api/ex/sysinfo/query.htm">ZwQuerySystemInformation</a></span> 
  (or <span class="function">NtQuerySystemInformation</span>) function expects in 
  its information buffer when given the information class <span class="constant">
  SystemPerformanceTraceInformation</span> (0x1F). This particular structure is 
  selected when the first dword in the information buffer on input is
  <span class="constant">EventTracePerformanceInformation</span> (0x02). </p>
  <h2>Documentation Status </h2>
  <p>The <span class="enum">EVENT_TRACE_PERFORMANCE_INFORMATION</span> structure 
  is not documented. </p>
  <!--webbot bot="Include" U-Include="_include/typeinfo_struct.htm" TAG="BODY" startspan -->

<p>A few public disclosures are known from Microsoft, though not as any sort of 
plain-English documentation. One is that a previously unpublished header named NTETW.H 
was published in the original and Version 1511 editions of the Windows Driver Kit 
(WDK) for Windows 10, and this header contains a C-language definition of the structure.
</p>
<p>Were it not for this limited and possibly unintended disclosure of NTETW.H, a 
practical equivalent of the C-language definition (but missing comments, of course) 
would anyway be known from type information in symbol files. But this too has the 
look of an oversight. Type information for this structure has never appeared in 
any public symbol files for the kernel or for the obvious low-level user-mode DLLs. 
It has instead slipped out in symbol files for a smattering of higher-level user-mode 
DLLs, starting with Windows 8. For these few, the readily available symbol files 
actually are private symbol files and show that the unpublished
<a href="../../../source/inc/ntetw.htm">NTETW.H</a> was included when compiling 
the corresponding binaries. </p>

<!--webbot bot="Include" endspan i-checksum="23935" -->
  <!--webbot bot="Include" U-Include="_include/clfsmgmt.htm" TAG="BODY" startspan -->

<p>Type information also has been published in a statically linked library, named 
CLFSMGMT.LIB, which Microsoft distributes with the Software Development Kit (SDK) 
starting for Windows Vista. This does not have the forensic quality as has type 
information in symbol files for the binaries that ship with an operating system, 
for although it is as accurate for when the library was built, there is no requirement 
that the library have been built with the operating system that it targets. There 
can be, and often is, some discrepancy, and there is anyway not always a fresh library 
for each service pack. </p>

<!--webbot bot="Include" endspan i-checksum="57935" -->
  <h2>Layout </h2>
  <p>The <span class="struct">EVENT_TRACE_PERFORMANCE_INFORMATION</span> is 0x10 
  bytes in both 32-bit and 64-bit Windows. Offsets, names and types in the table 
  that follows are from type information in symbol files and libraries, and from 
  the published C-language definition, as described above. </p>
  <p>One member is meaningful only for input, the other only as output: </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Input or Output </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source"><a href="event_trace_information_class.htm">EVENT_TRACE_INFORMATION_CLASS</a> EventTraceInformationClass;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>input </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">LARGE_INTEGER LogfileBytesWritten;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>output </td>
      </tr>
    </tbody>
  </table>
  <h2>Behaviour </h2>
  <p>The <span class="struct">EVENT_TRACE_PERFORMANCE_INFORMATION</span> structure 
  is meaningful only as input to and output from one case of the
  <span class="function">ZwQuerySystemInformation</span> function. The behaviour 
  is as well picked up here. This review takes as understood all the general points 
  and shorthands that are noted in the separate attempt at documenting the function, 
  and takes as granted that the information class is <span class="constant">SystemPerformanceTraceInformation</span> 
  and that the information buffer is exactly the size of an <span class="struct">
  EVENT_TRACE_PERFORMANCE_INFORMATION</span> in which the <span class="member">EventTraceInformationClass</span> 
  is <span class="constant">EventTracePerformanceInformation</span>. </p>
  <p>The implementation is simply to set the <span class="member">LogfileBytesWritten</span> 
  in the given structure to the running total over all processors of bytes written 
  from trace buffers to log files. The function then returns
  <span class="constant">STATUS_SUCCESS</span>. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 18th
    <a href="../../../../../../../new/16/12.htm">December 2016</a> and was last 
    modified on 30th <a href="../../../../../../../new/22/10.htm">November 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

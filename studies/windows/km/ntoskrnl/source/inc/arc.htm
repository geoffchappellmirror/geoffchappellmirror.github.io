<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>ARC.H</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43332" -->
<div class="Main">
  <h1>ARC.H </h1>
  <p>The public symbol file NTKRPAMP.PDB for the original release of Windows 10 
  tells that the kernel is built with the ARC.H header at </p>
  <blockquote>
    d:\th.public.fre\halkit\inc
  </blockquote>
  <p>and draws from it the following type definitions: </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Line Number </th>
        <th>Type </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>105 </td>
        <td>enum <span class="enum">
        <a href="../../inc/api/arc/type_of_memory.htm">_TYPE_OF_MEMORY</a></span>
        </td>
      </tr>
      <tr>
        <td>142 </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/arc/memory_allocation_descriptor.htm">_MEMORY_ALLOCATION_DESCRIPTOR</a></span>
        </td>
      </tr>
    </tbody>
  </table>
  <p>The header ARC.H is published in the “minwin” directory of the Windows Driver 
  Kit (WDK) for Windows 10 in the original and Version 1511 editions. This was a 
  significant new disclosure. The header as published defines many more structures, 
  but the public symbol files for the kernel in the same versions do not have type 
  information for these. </p>
  <h2>Later Versions </h2>
  <p>Indeed, many types that are defined in ARC.H had never or only rarely appeared 
  in any public symbol files for any version. Starting with the 1803 release of 
  Windows 10, however, the public symbol files for the kernel show very many more 
  types as defined in ARC.H. That these many types that were for so long relatively 
  unknown to programmers outside Microsoft are known to the kernel through this 
  one header is surely worth cataloguing. </p>
  <p>In the next table, the line numbers in the left column are for the unseen ARC.H 
  for Windows 10 Version 1803, as known from the public symbol files for the kernel 
  in this version, and the line numbers to the right are from the published header 
  for the original Windows 10 release. Line numbers in parentheses are explained 
  after the table. </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name"><col class="LineNumber">
    </colgroup>
    <thead>
      <tr>
        <th>Line Number <br>
        (Version 1803) </th>
        <th>Type </th>
        <th>Line Number <br>
        (Original Windows 10) </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>58 </td>
        <td>enum <span class="enum">_CONFIGURATION_CLASS</span> </td>
        <td>58 </td>
      </tr>
      <tr>
        <td>69 </td>
        <td>struct <span class="struct">_CONFIGURATION_COMPONENT</span> </td>
        <td>69 </td>
      </tr>
      <tr>
        <td>(76) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_CONFIGURATION_COMPONENT</span> </td>
        <td>76 </td>
      </tr>
      <tr>
        <td>(78) </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_CONFIGURATION_COMPONENT</span> </td>
        <td>78 </td>
      </tr>
      <tr>
        <td>92 </td>
        <td>struct <span class="struct">_CONFIGURATION_COMPONENT_DATA</span>
        </td>
        <td>92 </td>
      </tr>
      <tr>
        <td>105 </td>
        <td>enum <span class="enum">_TYPE_OF_MEMORY</span> </td>
        <td>105 </td>
      </tr>
      <tr>
        <td>145 </td>
        <td>struct <span class="struct">_MEMORY_ALLOCATION_DESCRIPTOR</span>
        </td>
        <td>142 </td>
      </tr>
      <tr>
        <td>156 </td>
        <td>struct <span class="struct">_NLS_DATA_BLOCK</span> </td>
        <td>153 </td>
      </tr>
      <tr>
        <td>(162) </td>
        <td>struct <span class="struct">_VHD_DISK_SIGNATURE</span> </td>
        <td>159 </td>
      </tr>
      <tr>
        <td>(167) </td>
        <td>struct <span class="struct">_ARC_DISK_SIGNATURE</span> </td>
        <td>164 </td>
      </tr>
      <tr>
        <td>180 </td>
        <td>struct <span class="struct">_ARC_DISK_INFORMATION</span> </td>
        <td>177 </td>
      </tr>
      <tr>
        <td>184 </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/arc/i386_loader_block.htm">_I386_LOADER_BLOCK</a></span>
        </td>
        <td>181 </td>
      </tr>
      <tr>
        <td>200 </td>
        <td>struct <span class="struct">_ARM_LOADER_BLOCK</span> </td>
        <td>197 </td>
      </tr>
      <tr>
        <td>217 </td>
        <td>struct <span class="struct">_LOADER_PERFORMANCE_DATA</span> </td>
        <td>214 </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>enum <span class="enum">_BOOT_ENTROPY_SOURCE_RESULT_CODE</span> </td>
        <td>229 </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>enum <span class="enum">_BOOT_ENTROPY_SOURCE_ID</span> </td>
        <td>237 </td>
      </tr>
      <tr>
        <td>284 </td>
        <td>struct <span class="struct">_BOOT_ENTROPY_SOURCE_LDR_RESULT</span>
        </td>
        <td>280 </td>
      </tr>
      <tr>
        <td>302 </td>
        <td>struct <span class="struct">_OFFLINE_CRASHDUMP_CONFIGURATION_TABLE_V2</span>
        </td>
        <td>298 </td>
      </tr>
      <tr>
        <td>(320) </td>
        <td>struct <span class="struct">_OFFLINE_CRASHDUMP_CONFIGURATION_TABLE_V1</span>
        </td>
        <td>316 </td>
      </tr>
      <tr>
        <td>337 </td>
        <td>struct <span class="struct">_BOOT_ENTROPY_LDR_RESULT</span> </td>
        <td>333 </td>
      </tr>
      <tr>
        <td>349 </td>
        <td>struct <span class="struct">_LOADER_PARAMETER_HYPERVISOR_EXTENSION</span>
        </td>
        <td>344 </td>
      </tr>
      <tr>
        <td>374 </td>
        <td>struct <span class="struct">_LOADER_PARAMETER_CI_EXTENSION</span>
        </td>
        <td>369 </td>
      </tr>
      <tr>
        <td>(378) </td>
        <td>anonymous struct in <br>
        struct <span class="struct">_LOADER_PARAMETER_CI_EXTENSION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(416) </td>
        <td>struct <span class="struct">_HAL_EXTENSION_INSTANCE_ENTRY</span>
        </td>
        <td>383 </td>
      </tr>
      <tr>
        <td>(432) </td>
        <td>struct <span class="struct">_HAL_EXTENSION_MODULE_ENTRY</span> </td>
        <td>399 </td>
      </tr>
      <tr>
        <td>464 </td>
        <td>struct <span class="struct">_LOADER_BUGCHECK_PARAMETERS</span> </td>
        <td>431 </td>
      </tr>
      <tr>
        <td>477 </td>
        <td>struct <span class="struct">_LOADER_HIVE_RECOVERY_INFO</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(478) </td>
        <td>anonymous struct in <br>
        struct <span class="struct">_LOADER_HIVE_RECOVERY_INFO</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>534 </td>
        <td>struct <span class="struct">_LOADER_RESET_REASON</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>536 </td>
        <td>unnamed union <span class="member">Basic</span> in <br>
        struct <span class="struct">_LOADER_RESET_REASON</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>537 </td>
        <td>unnamed struct <span class="member">Component</span> in <br>
        unnamed union <span class="member">Basic</span> in <br>
        struct <span class="struct">_LOADER_RESET_REASON</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>632 </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/arc/loader_parameter_extension/index.htm">_LOADER_PARAMETER_EXTENSION</a></span>
        </td>
        <td>453 </td>
      </tr>
      <tr>
        <td>(697) </td>
        <td>anonymous struct in <br>
        struct <span class="struct">_LOADER_PARAMETER_EXTENSION</span> </td>
        <td>518 </td>
      </tr>
      <tr>
        <td>(920) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_LOADER_PARAMETER_EXTENSION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(922) </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_LOADER_PARAMETER_EXTENSION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(933) </td>
        <td>anonymous union in <br>
        struct <span class="struct">_LOADER_PARAMETER_EXTENSION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>(935) </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_LOADER_PARAMETER_EXTENSION</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1116 </td>
        <td>struct <span class="struct">_NETWORK_LOADER_BLOCK</span> </td>
        <td>808 </td>
      </tr>
      <tr>
        <td>1130 </td>
        <td>struct <span class="struct">_VIRTUAL_EFI_RUNTIME_SERVICES</span>
        </td>
        <td>822 </td>
      </tr>
      <tr>
        <td>1153 </td>
        <td>struct <span class="struct">_EFI_FIRMWARE_INFORMATION</span> </td>
        <td>845 </td>
      </tr>
      <tr>
        <td>1187 </td>
        <td>struct <span class="struct">_PCAT_FIRMWARE_INFORMATION</span> </td>
        <td>879 </td>
      </tr>
      <tr>
        <td>1192 </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/arc/firmware_information_loader_block.htm">_FIRMWARE_INFORMATION_LOADER_BLOCK</a></span>
        </td>
        <td>884 </td>
      </tr>
      <tr>
        <td>(1193) </td>
        <td>anonymous struct in <br>
        struct <span class="struct">_FIRMWARE_INFORMATION_LOADER_BLOCK</span>
        </td>
        <td>885 </td>
      </tr>
      <tr>
        <td>1237 </td>
        <td>unnamed union <span class="member">u</span> in <br>
        struct <span class="struct">_FIRMWARE_INFORMATION_LOADER_BLOCK</span>
        </td>
        <td>936 </td>
      </tr>
      <tr>
        <td>(1256) </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/arc/bldr_data_table_entry.htm">_BLDR_DATA_TABLE_ENTRY</a></span>
        </td>
        <td>955 </td>
      </tr>
      <tr>
        <td>1274 </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/arc/loader_parameter_block.htm">_LOADER_PARAMETER_BLOCK</a></span>
        </td>
        <td>971 </td>
      </tr>
      <tr>
        <td>1326 </td>
        <td>unnamed union <span class="member">u</span> in <br>
        struct <span class="struct">_LOADER_PARAMETER_BLOCK</span> </td>
        <td>1023 </td>
      </tr>
      <tr>
        <td>(1383) </td>
        <td>struct <span class="struct">_LOADER_HIVE_BLOCK</span> </td>
        <td>1040 </td>
      </tr>
      <tr>
        <td>(1397) </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/arc/nt_image_info.htm">_NT_IMAGE_INFO</a></span>
        </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>As only to be expected, the header has grown in the years since its (accidental) 
  disclosure and so the unseen ARC.H for Version 1803 has types that are not in 
  the published ARC.H for the original Windows 10. For these, there is no line number 
  to show on the right. </p>
  <p>The explanation is a little more complicated for why the two enumerations
  <span class="enum">BOOT_ENTROPY_SOURCE_RESULT_CODE</span> and
  <span class="enum">BOOT_ENTROPY_SOURCE_ID</span> have no line number on the left. 
  Their definitions can be seen in the accidentally published ARC.H for the original 
  Windows 10. A comment there warns Microsoft’s programmers that </p>
  <pre class="source">//
// Entropy result codes and source IDs
// for Boot entropy sources are defined both in arc.h and
// ntexapi.h. These two copies must be kept identical.
//</pre>
  <p>The public symbols for the Version 1803 kernel place these enumerations’ definitions 
  in <a href="ntexapi.htm">ntexapi.h</a> and thus do not give line numbers of the 
  definitions in ARC.H or even tell anything of whether the definitions remain in 
  ARC.H (though the very nearly matching gap in line numbers suggests a high likelihood 
  that the definitions are still in both headers). </p>
  <p>For why some line numbers for Version 1803 are in parentheses, remember that 
  the public symbols for the kernel in the original Windows 10 have only a few of 
  the types that show in the (accidentally) published ARC.H for that version. Although 
  very many more types show in the public symbols for the Version 1803 kernel, they 
  still are not a complete reckoning of types that are defined in the Version 1803 
  ARC.H. Alert readers will note that the previous sentence is a stronger statement 
  than can be supported just from the public symbols. From these, the strongest 
  deduction is that the public symbols for the Version 1803 kernel do not have all 
  the types that are known from the published ARC.H for two earlier releases of 
  Windows 10. It turns out, however, that there is another source of information 
  about types defined in ARC.H and this not only extends to Version 1803 (indeed, 
  to Version 1903) but is credibly complete. </p>
  <p>This other source also is type information such as shows in symbol files. What’s 
  different is that it’s in a statically linked library. That this library, named 
  CLFSMGMT.LIB and distributed in the Software Development Kit (SDK) as if for user-mode 
  programming, credibly has all the types that are defined in the kernel-mode ARC.H 
  is because this library archives an object file that resulted from creating a 
  pre-compiled header. Its type information is therefore not for types that the 
  compiler regarded as used, e.g., in source code for the other object files in 
  the library, but for types that <span class="emphasis">might</span> have got used. 
  A detraction to libraries, in terms of forensic quality, is that even when they 
  are targeted to one version of the operating system they can be correct for their 
  purpose even if built with headers that are not exactly what were used when building 
  the operating system. It happens, however, that this library for Version 1803 
  was built on the same day as the Version 1803 kernel. For types that are common 
  to the library and the public symbols, the line numbers match. The line numbers 
  from the library are almost certainly correct even for types that are missing 
  from the public symbols. These are the line numbers that are in parentheses.
  </p>
  <p>Some, even many, of these line numbers in parentheses are for anonymous structures 
  and unions which do or don’t get their own records depending on whether the header 
  was compiled as C++ or C. A good handful, however, are thought never to have been 
  revealed in public symbols and might never have been known from freely published 
  materials except for the accidental disclosure of ARC.H for two Windows releases. 
  The last of them, <span class="struct">NT_IMAGE_INFO</span>, has been added since 
  and is not known to Google at all today, 9th December 2022. </p>
  <h2>Location </h2>
  <p>There is one more complication: the ARC.H that is compiled for the kernel’s 
  public symbol files is not Microsoft’s only ARC.H. It may be a copy or extract 
  for inclusion with a HAL development kit. It is not certainly the same ARC.H, 
  if any, that is compiled when building the kernel itself. Where ARC.H is named 
  in a handful of private symbol files that Microsoft has distributed with otherwise 
  public symbols, a different location is given for it. For instance, in the downloadable 
  package of public symbols for the original release of Windows 10, appxdeploymentclient.pdb 
  names ARC.H in </p>
  <blockquote>
    d:\th.public.fre\internal\sdk\inc\minwin
  </blockquote>
  <p>which is indeed where the kernel gets many of its headers. More study is required.
  </p>
  <div class="Footer">
    <p class="Dates">This page was created on 23rd July 2020 but was not published 
    until 25th <a href="../../../../../../new/20/10.htm">October 2020</a>. It was 
    last modified on 21st February 2023. </p>
    <!--webbot bot="Include" U-Include="../../../_include/c2023.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020-2023. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="54423" -->
  </div>
</div>

</body>

</html>

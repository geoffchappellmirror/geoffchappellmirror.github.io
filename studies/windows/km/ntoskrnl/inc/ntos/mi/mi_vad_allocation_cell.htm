<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>MI_VAD_ALLOCATION_CELL</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>MI_VAD_ALLOCATION_CELL </h1>
  <p>The <span class="struct">MI_VAD_ALLOCATION_CELL</span> structure (formally
  <span class="struct">_MI_VAD_ALLOCATION_CELL</span>) was introduced for the 1511 
  release of Windows 10. The only known use of the structure is that the
  <span class="struct"><a href="mi_user_va_info.htm">MI_USER_VA_INFO</a></span> 
  structure has an array of them as its <span class="member">VadCell</span> member. 
  There are variously two or three in the array, indexed by the
  <span class="enum"><a href="mi_vad_allocation_cell_type.htm">MI_VAD_ALLOCATION_CELL_TYPE</a></span> 
  enumeration. </p>
  <p>Up to and including the original Windows 10, the <span class="struct">MI_USER_VA_INFO</span> 
  (and before it, the <span class="struct">MMWSL</span>) provided for managing bottom-up 
  and top-down allocations from one region of virtual address space. For the 1511 
  release to have bottom-up allocations from two regions, relevant members were 
  reproduced within the <span class="struct">MI_USER_VA_INFO</span> by moving them 
  into a new <span class="struct">MI_VAD_ALLOCATION_CELL</span> for each region. 
  Version 1803 elaborated so that top-down allocations join in. </p>
  <h2>Variability </h2>
  <p>The <span class="struct">MI_VAD_ALLOCATION_CELL</span> is not just an internal 
  structure with little, if any, visibility outside the kernel: it is one that exists 
  only to have extracted members from another such internal structure. Though the 
  members are few, variability cannot surprise. The following changes of size mark 
  the additions and rearrangements: </p>
  <table class="Sizes">
    <colgroup>
      <col class="Version"><col class="Size" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Version </th>
        <th>Size (x86) </th>
        <th>Size (x64) </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>1511 to 1709 </td>
        <td>0x1C </td>
        <td>0x28 </td>
      </tr>
      <tr>
        <td>1803 to 1809 </td>
        <td>0x24 </td>
        <td>0x38 </td>
      </tr>
      <tr>
        <td>1903 to 2004 </td>
        <td>0x24 </td>
        <td>0x48 </td>
      </tr>
    </tbody>
  </table>
  <h2>Layout </h2>
  <p>These sizes in the previous table and the offsets, names and types in the next 
  are from public symbol files for the Version 1511 kernel. What’s shown for later 
  versions is something of a guess because no known public symbol files for later 
  releases of Windows 10 have type information for this structure. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2">0x00 </td>
        <td rowspan="2">0x00 </td>
        <td>
        <pre class="source">RTL_BITMAP AllocationBitMap;</pre>
        </td>
        <td>1511 to 1809 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">RTL_BITMAP_EX AllocationBitMap;</pre>
        </td>
        <td>1903 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>0x10 </td>
        <td>
        <pre class="source">ULONG BitMapHint;</pre>
        </td>
        <td>1511 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>0x14 </td>
        <td>
        <pre class="source">ULONG LastAllocationSize;</pre>
        </td>
        <td>1511 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>0x18 </td>
        <td>
        <pre class="source">ULONG LastAllocationSizeHint;</pre>
        </td>
        <td>1511 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x14 (1511 to 1709) </td>
        <td>0x1C (1511 to 1709) </td>
        <td>
        <pre class="source">ULONG LowestBottomUpVadBit;</pre>
        </td>
        <td>1511 to 1709 </td>
        <td>next at 0x20 and 0x30 </td>
      </tr>
      <tr>
        <td rowspan="2">0x14 </td>
        <td rowspan="2">0x1C (1803 to 1809); <br>
        0x28 </td>
        <td>
        <pre class="source">ULONG HighestTopDownVadBit;</pre>
        </td>
        <td>1803 to 1809 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG_PTR HighestTopDownVadBit;</pre>
        </td>
        <td>1903 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x18 </td>
        <td>0x20 (1803 to 1809); <br>
        0x30 </td>
        <td>
        <pre class="source">PVOID HighestTopDownAllocationAddress;</pre>
        </td>
        <td>1803 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x18 (1511 to 1709); <br>
        0x1C </td>
        <td>0x20 (1511 to 1709); <br>
        0x28 (1803 to 1809); <br>
        0x38 </td>
        <td>
        <pre class="source">PVOID LowestBottomUpAllocationAddress;</pre>
        </td>
        <td>1511 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x20 </td>
        <td rowspan="2">0x30 (1803 to 1809); <br>
        0x40 </td>
        <td>
        <pre class="source">ULONG LowestBottomUpVadBit;</pre>
        </td>
        <td>1803 to 1809 </td>
        <td>previously at 0x14 and 0x1C </td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG_PTR LowestBottomUpVadBit;</pre>
        </td>
        <td>1903 and higher </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="member">BitMapHint</span> (as <span class="member">VadBitMapHint</span>),
  <span class="member">LastAllocationSize</span>, <span class="member">LastAllocationSizeHint</span>,
  <span class="member">LowestBottomUpVadBit</span> and <span class="member">LowestBottomUpAllocationAddress</span> 
  all have previous life as <span class="struct">MI_USER_VA_INFO</span> members.
  </p>
  <p>Version 1803 brought into each <span class="struct">MI_VAD_ALLOCATION_CELL</span> 
  what had been the one <span class="member">HighestTopDownAllocationAddress</span> 
  in the <span class="struct">MI_USER_VA_INFO</span>. It is here supposed that the 
  name and type would naturally have come too. Although the <span class="struct">
  MI_USER_VA_INFO</span> never had a <span class="member">HighestTopDownVadBit</span>, 
  this name is obvious as a partner for <span class="member">LowestBottomUpVadBi</span>t 
  and is proposed above while Microsoft’s name for it is unknown. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 10th
    <a href="../../../../../../../new/22/07.htm">August 2022</a> and was last modified 
    on 31st August 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c22.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5890" -->
  </div>
</div>

</body>

</html>

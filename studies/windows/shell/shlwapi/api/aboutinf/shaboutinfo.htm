<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SHAboutInfo</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="55064" endspan -->
<h1>SHAboutInfo </h1>
<p>This function obtains various items of text suitable for describing Windows and 
Internet Explorer to users, e.g., in an About dialog. </p>
<h2>Declaration </h2>
<pre class="source">BOOL
SHAboutInfo (
    LPTSTR lpBuffer,
    UINT cchBuffer);</pre>
<!--webbot bot="Include" U-Include="../_include/aw.htm" TAG="BODY" startspan -->

<p>The function exists in ANSI and Unicode forms. </p>

<!--webbot bot="Include" i-checksum="40026" endspan -->
<h3>Parameters </h3>
<p>The <span class="argument">lpBuffer</span> argument provides the address of a 
buffer that is to receive the descriptive string. </p>
<p>The <span class="argument">cchBuffer</span> argument provides the capacity of 
the buffer, in characters. </p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../_include/bool.htm" TAG="BODY" startspan -->

<p>The function returns TRUE for success, else FALSE for failure. </p>

<!--webbot bot="Include" i-checksum="21964" endspan -->
<h2>Behaviour </h2>
<p>The function constructs a single null-terminated string, using the tilde to separate 
the various items that the function considers worth reporting about Windows and 
Internet Explorer. Currently, seven items are reported, in the form </p>
<blockquote>
  <p><span class="placeholder">version</span>~<span class="placeholder">owner</span>~<span class="placeholder">organisation</span>~<span class="placeholder">cipherstrength</span>~<span class="placeholder">productid</span>~<span class="placeholder">updateurl</span>~<span class="placeholder">helpstring</span>
  </p>
</blockquote>
<p>Any number of these items may be empty. None may sensibly contain a tilde. If 
the given buffer is not large enough for the whole of this string, the function 
copies only as much as will fit (but still as a null-terminated string), and declares 
success. </p>
<p>Most of the items are obtained straightforwardly from entries in the
<span class="regkey">HKEY_LOCAL_MACHINE</span> branch of the registry, specifically 
from three keys which may be called, naturally enough, the Windows key, the NT key 
and the Internet Explorer key: </p>
<ul>
  <li><span class="regkey">SOFTWARE\Microsoft\Windows\CurrentVersion</span> </li>
  <li><span class="regkey">SOFTWARE\Microsoft\Windows NT\Current Version</span>
  </li>
  <li><span class="regkey">SOFTWARE\Microsoft\Internet Explorer</span> </li>
</ul>
<p>If running on NT, the function fails if it cannot open the NT key. Otherwise, 
it fails if it cannot open the Windows key. </p>
<p>Most commonly in practice, the <span class="placeholder">version</span> is constructed 
by concatenating as many as three parts: </p>
<ul>
  <li>the string value <span class="regvalue">Version</span> from the Internet Explorer 
  key; </li>
  <li>any characters after the first four of the string value
  <span class="regvalue">BuildLab</span> from the NT key, if running on NT, else 
  from the Internet Explorer key; </li>
  <li>the string value <span class="regvalue">CustomizedVersion</span> from the 
  Internet Explorer key. </li>
</ul>
<p>Of these, the first is required, else the function leaves
<span class="placeholder">version</span> empty. If <span class="regvalue">BuildLab</span> 
exists as a string value but with fewer than four characters, then results are undefined: 
the function skips the first four characters without checking that there are as 
many as four characters to skip. </p>
<p>An entirely different construction of <span class="placeholder">version</span> 
applies if the function is called in a process that does not have among its loaded 
modules one named either EXPLORER.EXE or IEXPLORE.EXE. The
<span class="placeholder">version</span> is then obtained from the SHLWAPI resources, 
currently from number 271 in the string table, which equates to “Side-by-Side Mode” 
in the U.S. release. </p>
<p>(If you doubt this dependence on the filename, make 
a copy of IEXPLORE.EXE, run the copy, call up the About Internet Explorer dialog 
and look for what it says is its version. If you name the copy ABOUT.EXE, you get 
“Side-by-Side Mode” as the <span class="placeholder">version</span>. Rename it to 
EXPLORER.EXE and you get the more meaningful <span class="placeholder">version</span>.)
</p>
<p>The registered <span class="placeholder">owner</span> is the string value
<span class="regvalue">RegisteredOwner</span> from the NT key, if running on NT, 
else from the Windows key. </p>
<p>The registered <span class="placeholder">organisation</span> is the string value
<span class="regvalue">RegisteredOrganization</span> from the NT key, if running 
on NT, else from the Windows key. </p>
<p>The <span class="placeholder">cipherstrength</span> is the maximum cipher strength 
allowed by the Microsoft Unified Security Protocol Provider. This is the one item 
that the function does not itself obtain from the registry. The function instead 
loads and interrogates one or more of SCHANNEL.DLL, SECUR32.DLL and SECURITY.DLL 
through the Security Support Provider Interface (SSPI). </p>
<p>The <span class="placeholder">productid</span> is the string value
<span class="regvalue">ProductId</span> from the <span class="regkey">Registration</span> 
subkey of the Internet Explorer key. </p>
<p>The <span class="placeholder">updateurl</span> is the string value
<span class="regvalue">IEAKUpdateUrl</span> from the Windows key. </p>
<p>The <span class="placeholder">helpstring</span> is the string value
<span class="regvalue">IEAKHelpString</span> from the NT key, if running on NT, 
else from the Windows key. </p>
<h3>Unicode Implementation </h3>
<p>Of the ANSI and Unicode forms of this function, the ANSI has the native implementation. 
The Unicode implementation provides a temporary buffer for a call to the ANSI form 
and converts the ANSI output to Unicode. It may therefore (though not likely) fail 
for lack of memory or because of some error in the character-set conversion. </p>
<h2>Use By Microsoft </h2>
<p>The only known use that Microsoft makes of this function in executables distributed 
with Windows is for the “About Internet Explorer” dialog box. The code for calling 
the function and passing the returned information as the arguments for a dialog 
box is in SHDOCVW.DLL. The dialog box that SHDOCVW asks be loaded is an HTML resource 
named ABOUT.DLG in SHDOCLC.DLL. Interpretation of the string produced by
<span class="function">SHAboutInfo</span> falls to this dialog’s script. See for 
instance the line </p>
<pre class="source">arrArgs = window.dialogArguments.split(&quot;~&quot;);</pre>
<p>which demonstrates the dialog box’s knowledge that the string has the tilde as 
a separator. </p>
<h2>Availability </h2>
<p>The <span class="function">SHAboutInfo</span> function is exported from SHLWAPI 
as ordinals 160 and 161 (for ANSI and Unicode forms respectively) in version 4.71 
and higher. </p>
<!--webbot bot="Include" U-Include="../_include/undoc471.htm" TAG="BODY" startspan -->

<p>Though this function dates from as long ago as 1997, it was still not 
documented by Microsoft in the MSDN Library at least as late as the CD edition 
dated January 2004. </p>

<!--webbot bot="Include" i-checksum="43173" endspan -->
<p>Note in particular that Microsoft did not document <span class="function">SHAboutInfo</span> 
among the
<a target="_top" href="http://msdn.microsoft.com/library/ms807073.aspx">Settlement 
Program Interfaces</a>. That this function is the immediate source of input for 
the About Internet Explorer dialog surely puts beyond doubt that it is used by a 
component of Internet Explorer. That this function escaped being documented for 
the settlement would seem therefore to imply that Microsoft interprets the settlement’s 
definitions such that SHLWAPI.DLL (or at least the source file that implements this 
function) is a component of Internet Explorer but not of Windows. </p>
<div class="Footer">
  <p class="Dates">This page was created on 10th September 2004 and was last modified 
  on 21st December 2008. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0408.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2004-2008. Geoff Chappell. All rights reserved.
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="3919" endspan -->
</div>

</body>

</html>

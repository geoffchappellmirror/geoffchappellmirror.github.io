<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>CL /noBool</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>CL /noBool </h1>
<h2>Syntax </h2>
<p>positive: </p>
<blockquote>
  <p><span class="switch">/noBool</span> </p>
</blockquote>
<p>negative: </p>
<blockquote>
  <p><span class="switch">/noBool-</span> </p>
</blockquote>
<h3>Relations </h3>
<p>The positive and negative forms override each other, of course. </p>
<!--webbot bot="Include" U-Include="_include/pm_positive.htm" TAG="BODY" startspan -->

<p>The positive form passes to the front-end compiler for C++ only (C1XX). The negative 
form does not pass to any compiler module. </p>

<!--webbot bot="Include" i-checksum="54279" endspan -->
<h2>Behaviour </h2>
<p>The C++ language provides a keyword, <span class="keyword">bool</span>, to represent 
a built-in type that is specialised to the integral values 0 and 1, which are in 
turn represented by keywords <span class="keyword">false</span> and
<span class="keyword">true</span> respectively. Conditional expressions evaluate 
to this built-in type. </p>
<p>The <span class="switch">/noBool</span> option suppresses all three of these 
keywords and leaves them available as arbitrary identifiers. The integral type that 
would have been represented by the <span class="keyword">bool</span> keyword remains 
built-in. Conditional expressions still evaluate to this type. It is just that the 
type is not accessible through any identifier. </p>
<div class="Footer">
  <p class="Dates">This page was created on 27th October 2005 and was last modified 
  on 12th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62424" endspan -->
</div>

</body>

</html>

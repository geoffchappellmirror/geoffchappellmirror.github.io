<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>LIBRARY, NAME and VXD</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>LIBRARY, NAME and VXD </h1>
<p>The <span class="def">NAME</span> and <span class="def">VXD</span> statements 
are essentially the same, except that a <span class="def">VXD</span> statement 
is supported only if LIB was given the <span class="switch">/vxd</span> switch. 
Even when the <span class="def">VXD</span> statement is supported, warnings and 
errors are described as coming from a <span class="def">NAME</span> statement. 
The
<span class="def">LIBRARY</span> statement differs from the others on just a few 
points. </p>
<p>Only one <span class="def">LIBRARY</span>, <span class="def">NAME</span> or
<span class="def">VXD</span> statement is permitted for the file. Each 
additional such statement causes a warning (LNK4017) about being not supported, 
and is then ignored. </p>
<h2>Syntax </h2>
<p><span class="def">LIBRARY</span>, <span class="def">NAME</span> and
<span class="def">VXD</span> are single-line statements. An empty statement is 
valid. If the statement is to have any arguments, then the statement tag must be 
followed immediately by a space or tab. There may then be any amount of white 
space, including none, before the first argument. An overview of the syntax is: </p>
<blockquote>
  <p><span class="placeholder">tag</span><span class="def"> </span>
  <span class="placeholder">pathname</span><span class="def"> </span>[<span class="placeholder">attributes</span>]<span class="def">
  </span></p>
</blockquote>
<p>where <span class="placeholder">tag</span> is one of <span class="def">
LIBRARY</span>,
<span class="def">NAME</span> or <span class="def">VXD</span>. </p>
<h3>Pathname </h3>
<p>The <span class="placeholder">pathname</span> extends to the next white space 
that does not appear between successive pairs of double-quotes. All 
double-quotes in the <span class="placeholder">pathname</span>, whether paired 
or not, are discarded.
</p>
<p>The <span class="placeholder">pathname</span> is treated as a drive, path, 
file name and file extension. Although syntactically valid, the drive and path 
are not supported. Their presence results in a warning (LNK4093) that the drive 
and path are ignored. To be free of warnings, the <span class="placeholder">
pathname</span> 
argument must have the form: </p>
<blockquote>
  <p><span class="placeholder">filename</span>[<span class="def">.</span><span class="placeholder">extension</span>]<span class="def">
  </span></p>
</blockquote>
<p>In the absence of an <span class="placeholder">extension</span>, LIB defaults 
to VXD when building for a VxD (whatever the statement tag), else to EXE for a
<span class="def">NAME</span> statement (with no default for a <span class="def">
LIBRARY</span> statement). </p>
<h3>Attributes </h3>
<p>The remainder of the line is interpreted as the <span class="placeholder">
attributes</span> 
argument. This argument is compound. Each attribute may be preceded by white 
space. Each extends to the next white space that does not appear between 
successive pairs of double-quotes. All double-quotes are discarded. </p>
<p>Attributes are case-insensitive. It is a fatal error (LNK1118) to have an 
unrecognised keyword among the <span class="placeholder">attributes</span> or to 
have a recognised attribute in unsuitable circumstances. Some keywords are 
recognised, but then ignored after a warning (LNK4017). </p>
<table>
  <tr>
    <td>Attribute </td>
    <td>Support </td>
  </tr>
  <tr>
    <td><span class="attribute">BASE=</span><span class="placeholder">address</span>
    </td>
    <td>fatal error if building a VxD </td>
  </tr>
  <tr>
    <td><span class="attribute">DYNAMIC</span> </td>
    <td>fatal error unless building a VxD </td>
  </tr>
  <tr>
    <td><span class="attribute">INITINSTANCE</span> </td>
    <td>fatal error if building a VxD; <br>
    else warning </td>
  </tr>
  <tr>
    <td><span class="attribute">LONGNAMES</span> </td>
    <td>fatal error if building a VxD; <br>
    else warning </td>
  </tr>
  <tr>
    <td><span class="attribute">NEWFILES</span> </td>
    <td>fatal error if building a VxD; <br>
    else warning </td>
  </tr>
  <tr>
    <td><span class="attribute">NOTWINDOWCOMPAT</span> </td>
    <td>fatal error </td>
  </tr>
  <tr>
    <td><span class="attribute">WINDOWAPI</span> </td>
    <td>fatal error if building a VxD </td>
  </tr>
  <tr>
    <td><span class="attribute">WINDOWCOMPAT</span> </td>
    <td>fatal error if building a VxD </td>
  </tr>
</table>
<h4>Base </h4>
<p>The <span class="attribute">BASE</span> attribute requires an equals sign and 
an argument. The equals sign must follow immediately. There can be spaces 
between the equals sign and the <span class="placeholder">address</span> if 
enclosed between double-quotes. The <span class="placeholder">address</span> is 
interpreted numerically, in decimal, hexadecimal or octal notation, with a sign 
prefix permitted, but evaluated as an unsigned integer truncated to 64 bits. It 
is a fatal error (LNK1118) not to provide the equals sign and an <span class="placeholder">
address</span>. Curiously, this error is described as a syntax error in a <span class="def">
NAME</span> statement, even if the statement has a <span class="def">LIBRARY</span> 
tag. </p>
<h2>Command-Line Translation </h2>
<p>A non-empty <span class="def">LIBRARY</span> statement translates into
<span class="switch">/dll</span> and <span class="switch">/out</span> options 
for the export-file command line. A non-empty <span class="def">NAME</span> or
<span class="def">VXD</span> statement translates into <span class="switch">/out</span> 
and <span class="switch">/name</span> options. All three may add a
<span class="switch">/base</span>, <span class="switch">/exetype</span> or
<span class="switch">/subsystem</span> option, depending on what
<span class="placeholder">attributes</span> appear in the definition. </p>
<p>The <span class="switch">/dll</span> option, emitted only for a
<span class="def">LIBRARY</span> statement, is simply: </p>
<blockquote>
  <p><span class="switch">/DLL </span></p>
</blockquote>
<p>The <span class="switch">/out</span> option has the form: </p>
<blockquote>
  <p><span class="switch">/OUT:</span><span class="placeholder">filename</span>[<span class="switch">.</span><span class="placeholder">extension</span>]<span class="switch">
  </span></p>
</blockquote>
<p>or </p>
<blockquote>
  <p><span class="switch">/OUT:&quot;</span><span class="placeholder">filename</span>[<span class="switch">.</span><span class="placeholder">extension</span>]<span class="switch">&quot;
  </span></p>
</blockquote>
<p>where <span class="placeholder">extension</span> may be a default (as 
described above) and the <span class="switch">/out</span> argument is enclosed 
in double-quotes if <span class="placeholder">pathname</span> contains at least 
one pair of double-quotes (even if the double-quotes are in the <span class="placeholder">
drive</span> or
<span class="placeholder">path</span> components that are otherwise ignored).
</p>
<p><span class="def">NAME</span> and <span class="def">VXD</span>, but not
<span class="def">LIBRARY</span>, produce a <span class="switch">/name</span> 
option:
</p>
<blockquote>
  <p><span class="switch">/NAME:</span><span class="placeholder">filename</span><span class="switch">
  </span></p>
</blockquote>
<p>with no enclosure in double-quotes, even if <span class="placeholder">
filename</span> 
contains white space. </p>
<p>Each occurrence of the <span class="attribute">BASE</span> attribute 
translates to a <span class="switch">/base</span> option. The form is: </p>
<blockquote>
  <p><span class="switch">/BASE:0x</span><span class="placeholder">address</span><span class="switch">
  </span></p>
</blockquote>
<p>where <span class="placeholder">address</span> in the command-line option is 
a hexadecimal representation of the <span class="placeholder">address</span> in 
the attribute. </p>
<p>Each occurrence of any other supported attribute translates as follows: </p>
<table>
  <tr>
    <td>Attribute </td>
    <td>Export-File Command Line </td>
  </tr>
  <tr>
    <td><span class="attribute">DYNAMIC</span> </td>
    <td><span class="switch">/EXETYPE:DYNAMIC</span> </td>
  </tr>
  <tr>
    <td><span class="attribute">WINDOWSAPI</span> </td>
    <td><span class="switch">/SUBSYSTEM:WINDOWS</span> </td>
  </tr>
  <tr>
    <td><span class="attribute">WINDOWSCOMPAT</span> </td>
    <td><span class="switch">/SUBSYSTEM:CONSOLE</span> </td>
  </tr>
</table>
<h3>Buffer Overrun </h3>
<p>The code for generating the <span class="switch">/out</span> and
<span class="switch">/name</span> options uses a 128-byte buffer on the stack 
but does not check the lengths of the strings it copies there. A sufficiently 
long
<span class="placeholder">filename</span> can therefore induce an overrun. 
However, in the version studied for these notes, namely 7.00.9466, the placement 
of buffers is such that the overrun does not corrupt anything that can still be 
needed. </p>
<div class="Footer">
  <p class="Dates">This page was created on 8th May 1999 and was last modified 
  on 7th January 2010. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c9910.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 1999-2010. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="63648" endspan -->
</div>

</body>

</html>
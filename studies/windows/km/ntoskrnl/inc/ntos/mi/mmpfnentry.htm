<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>MMPFNENTRY</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>MMPFNENTRY </h1>
  <p>The <span class="struct">MMPFNENTRY</span> structure (formally
  <span class="struct">_MMPFNENTRY</span>) is nowadays a set of bit flags that are 
  thought to exist only in the <span class="member"><a href="mmpfn/u3.htm">u3</a></span> 
  member of an <span class="struct"><a href="mmpfn/index.htm">MMPFN</a></span>. 
  The 32-bit <span class="member">u3</span> is in essence 16 bits of flags and a 
  16-bit reference count, in that order originally, but later reversed. </p>
  <p>For its original placement in <span class="member">u3</span>, dating from version 
  4.0, the <span class="struct">MMPFNENTRY</span> is the 4-byte
  <span class="member">e1</span> branch. Though the flags are all in the word at 
  offset 0x0C in the <span class="struct">MMPFN</span>, they are formally
  <span class="type">ULONG</span> bit fields with space for the reference count 
  left at the end as one 16-bit field named <span class="member">DontUse</span>. 
  The reference count is instead accessed through the <span class="member">e2</span> 
  branch of the union, also 4 bytes, but defining the <span class="member">ReferenceCount</span> 
  as a <span class="type">USHORT</span> (at offset 0x0E in the
  <span class="struct">MMPFN</span>) after leaving space for the flags as a
  <span class="type">USHORT</span> named <span class="member">ShortFlags</span>.
  </p>
  <p>The flags and reference count are swapped for the version 5.2 from Windows 
  Server 2003 SP1, and in all versions since. This change reduced the
  <span class="struct">MMPFNENTRY</span> to two bytes. It then is just 16 bits of 
  flags that follow the <span class="member">ReferenceCount</span>. The flags were 
  not rearranged, but they formally change type to be <span class="type">USHORT</span> 
  bit fields. Version 6.0 reorganises them into two bytes of <span class="type">
  UCHAR</span> bit fields. The 1607 release of Windows 10 discontinues the
  <span class="struct">MMPFNENTRY</span> in favour of separating the two bytes of 
  flags into their own structures, named <span class="struct">MMPFNENTRY1</span> 
  and <span class="struct">MMPFNENTRY3</span>. </p>
  <p>The <span class="struct">MMPFNENTRY</span> has so long been a container just 
  for 16 bits of flags that it’s only natural to wonder in what sense are they any 
  sort of <span class="emphasis">entry</span>. For that, look back to when the
  <span class="struct">MMPFN</span> has neither a <span class="member">u3</span> 
  nor bit flags at offset 0x0C. Before version 4.0, its only bit flags are at offset 
  0x14 in combination with the <span class="member">PteFrame</span>. This dword 
  is in the style of a Page Table Entry (PTE), with a 20-bit Page Frame Number (PFN) 
  in the high bits, leaving the low 12 bits for flags. It is here thought that this 
  combination is the original <span class="struct">MMPFNENTRY</span> and that when 
  version 4.0 moved these flags to offset 0x0C and left the <span class="member">
  PteFrame</span> behind, the name <span class="struct">MMPFNENTRY</span> followed 
  the flags. </p>
  <p>Inevitably, pressure for more flags kept building. Whatever was gained by separating 
  the old flags from <span class="member">PteFrame</span>, it left 12 bits spare 
  at offset 0x14. By version 5.1, <span class="member">PteFrame</span> is recast 
  into another union, <span class="member"><a href="mmpfn/u4.htm">u4</a></span>, 
  with new flags in the high bits. Some flags that moved with the
  <span class="struct">MMPFNENTRY</span> then move back to their old site. </p>
  <h2>Four-Byte Original </h2>
  <p>The <span class="struct">MMPFNENTRY</span> starts as a four-byte structure 
  of <span class="type">ULONG</span> bit fields before 64-bit Windows exists. It 
  is the whole dword at offset 0x14 in the <span class="struct">MMPFN</span> before 
  version 4.0 and then moved to offset 0x0C in <span class="member">u3</span>.
  </p>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00000001 </td>
        <td>
        <pre class="source">ULONG Modified : 1;</pre>
        </td>
        <td>3.10 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000002 </td>
        <td>
        <pre class="source">ULONG ReadInProgress : 1;</pre>
        </td>
        <td>3.10 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000004 </td>
        <td>
        <pre class="source">ULONG WriteInProgress : 1;</pre>
        </td>
        <td>3.10 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000008 </td>
        <td>
        <pre class="source">ULONG PrototypePte : 1;</pre>
        </td>
        <td>3.10 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x00000070 (3.10 to 5.1); <br>
        0x000000F0 </td>
        <td>
        <pre class="source">ULONG PageColor : 3;</pre>
        </td>
        <td>3.10 to 5.1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG PageColor : 4;</pre>
        </td>
        <td>early 5.2 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000080 (3.10 to 5.1) </td>
        <td>
        <pre class="source">ULONG ParityError : 1;</pre>
        </td>
        <td>3.10 to 5.1 </td>
        <td>next as 0x00008000 </td>
      </tr>
      <tr>
        <td>0x00000700 </td>
        <td>
        <pre class="source">ULONG PageLocation : 3;</pre>
        </td>
        <td>3.10 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00000800 (3.10 to 5.0) </td>
        <td>
        <pre class="source">ULONG InPageError : 1;</pre>
        </td>
        <td>3.10 to 5.0 </td>
        <td>next in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td>0x00001000 (5.0) </td>
        <td>
        <pre class="source">ULONG VerifierAllocation : 1;</pre>
        </td>
        <td>5.0 only </td>
        <td>next in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td>0x00002000 (5.0); <br>
        0x00000800 </td>
        <td>
        <pre class="source">ULONG RemovalRequested : 1;</pre>
        </td>
        <td>5.0 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00003000 </td>
        <td>
        <pre class="source">ULONG CacheAttribute : 2;</pre>
        </td>
        <td>5.1 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">&nbsp;</td>
        <td>
        <pre class="source">ULONG Reserved : 4;</pre>
        </td>
        <td>4.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG Reserved : 1;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x00004000 </td>
        <td>
        <pre class="source">ULONG Rom : 1;</pre>
        </td>
        <td>5.1 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x00008000 </td>
        <td>
        <pre class="source">ULONG LockCharged : 1;</pre>
        </td>
        <td>5.0 to 5.1 </td>
        <td>next in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG ParityError : 1;</pre>
        </td>
        <td>early 5.2 only </td>
        <td>previously 0x00000080 </td>
      </tr>
      <tr>
        <td rowspan="2">0xFFFFF000 (3.10 to 3.51); <br>
        0xFFFF0000 </td>
        <td>
        <pre class="source">ULONG PteFrame : 20;</pre>
        </td>
        <td>3.10 to 3.51 </td>
        <td>next in <span class="struct">MMPFN</span> </td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG DontUse : 16;</pre>
        </td>
        <td>4.0 to early 5.2 </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The multi-bit <span class="member">PageLocation</span> and
  <span class="member">CacheAttribute</span> take their values from the
  <span class="enum"><a href="../mm/mmlists.htm">MMLISTS</a></span> and
  <span class="enum">MI_PFN_CACHE_ATTRIBUTE</span> enumerations, respectively.
  </p>
  <p>When version 4.0 moved 12 bits of flags from the dword at offset 0x14 to the 
  word at offset 0x0C without rearrangement, it gained 4 bits of space but is not 
  known to have defined any of these bits. Version 5.0 is known (from public symbol 
  files) to define one of the new four as <span class="member">Reserved</span>, 
  apparently having found use for only three. Presumably, those that are not used 
  in version 4.0 are also defined as <span class="member">Reserved</span>. </p>
  <h2>Windows Server 2003 SP1 </h2>
  <p>The version 5.2 from Windows Server 2003 SP1 reduced the
  <span class="struct">MMPFNENTRY</span> to a two-byte structure of
  <span class="type">USHORT</span> bit fields. That each bit retained its position 
  from the four-byte <span class="struct">MMPFNENTRY</span> was very short-lived: 
  the few that Windows Vista didn’t rearrange (see next section) were instead moved 
  away: </p>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x0001 </td>
        <td>
        <pre class="source">USHORT Modified : 1;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0x10 in first byte </td>
      </tr>
      <tr>
        <td>0x0002 </td>
        <td>
        <pre class="source">USHORT ReadInProgress : 1;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0x20 in first byte </td>
      </tr>
      <tr>
        <td>0x0004 </td>
        <td>
        <pre class="source">USHORT WriteInProgress : 1;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0x08 in first byte </td>
      </tr>
      <tr>
        <td>0x0008 </td>
        <td>
        <pre class="source">USHORT PrototypePte : 1;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td>0x00F0 </td>
        <td>
        <pre class="source">USHORT PageColor : 4;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td>0x0700 </td>
        <td>
        <pre class="source">USHORT PageLocation : 3;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0x07 in first byte </td>
      </tr>
      <tr>
        <td>0x0800 </td>
        <td>
        <pre class="source">USHORT RemovalRequested : 1;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0x40 in second byte </td>
      </tr>
      <tr>
        <td>0x3000 </td>
        <td>
        <pre class="source">USHORT CacheAttribute : 2;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0xC0 in first byte </td>
      </tr>
      <tr>
        <td>0x4000 </td>
        <td>
        <pre class="source">USHORT Rom : 1;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0x08 in second byte </td>
      </tr>
      <tr>
        <td>0x8000 </td>
        <td>
        <pre class="source">USHORT ParityError : 1;</pre>
        </td>
        <td>late 5.2 only </td>
        <td>next as 0x80 in second byte </td>
      </tr>
    </tbody>
  </table>
  <h2>Windows Vista and Higher </h2>
  <p>Windows Vista reorganised the <span class="struct">MMPFNENTRY</span> into a 
  two-byte structure of <span class="type">UCHAR</span> bit fields. The 1607 release 
  of Windows 10 then redefines each byte as its own structure,
  <span class="struct">MMPFNENTRY1</span> and <span class="struct">MMPFNENTRY3</span> 
  respectively, each still as <span class="type">UCHAR</span> bit fields. </p>
  <h3>First Byte </h3>
  <p>The flags in the new <span class="struct">MMPFNENTRY1</span> or in the first 
  byte of the two-byte <span class="struct">MMPFNENTRY</span> are accessed from 
  an <span class="struct">MMPFN</span> through its <span class="member">u3.e1</span> 
  nesting. </p>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset / Mask </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 / 0x07 </td>
        <td>
        <pre class="source">UCHAR PageLocation : 3;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously 0x0700 </td>
      </tr>
      <tr>
        <td>0x00 / 0x08 </td>
        <td>
        <pre class="source">UCHAR WriteInProgress : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously 0x0004 </td>
      </tr>
      <tr>
        <td>0x00 / 0x10 </td>
        <td>
        <pre class="source">UCHAR Modified : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously 0x0001 </td>
      </tr>
      <tr>
        <td>0x00 / 0x20 </td>
        <td>
        <pre class="source">UCHAR ReadInProgress : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously 0x0002 </td>
      </tr>
      <tr>
        <td>0x00 / 0xC0 </td>
        <td>
        <pre class="source">UCHAR CacheAttribute : 2;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously 0x3000 </td>
      </tr>
    </tbody>
  </table>
  <p>All these flags were previously <span class="type">USHORT</span> bit fields 
  in the two-byte <span class="struct">MMPFNENTRY</span>. </p>
  <h3>Second Byte </h3>
  <p>The flags in the new <span class="struct">MMPFNENTRY3</span> are accessed from 
  an <span class="struct">MMPFN</span> through its <span class="member">u3.e3</span> 
  nesting. Before 1607, these flags are in the second byte of the two-byte
  <span class="struct">MMPFNENTRY</span> and are accessed through
  <span class="member">u3.e1</span>, just like the flags in the first byte. </p>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset / Mask </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x01 / 0x07 </td>
        <td>
        <pre class="source">UCHAR Priority : 3;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td rowspan="2">0x01 / 0x08 </td>
        <td>
        <pre class="source">UCHAR Rom : 1;</pre>
        </td>
        <td>6.0 to 6.1 </td>
        <td>previously 0x4000 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR OnProtectedStandby;</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x01 / 0x10 </td>
        <td>
        <pre class="source">UCHAR InPageError : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td rowspan="3">0x01 / 0x20 </td>
        <td>
        <pre class="source">UCHAR KernelStack : 1;</pre>
        </td>
        <td>6.0 to 6.1 </td>
        <td>previously in <span class="member">u4</span> </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR Spare : 1;</pre>
        </td>
        <td>6.2 to 6.3 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">UCHAR SystemChargedPage : 1;</pre>
        </td>
        <td>10.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x01 / 0x40 </td>
        <td>
        <pre class="source">UCHAR RemovalRequested : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously 0x0800 </td>
      </tr>
      <tr>
        <td>0x01 / 0x80 </td>
        <td>
        <pre class="source">UCHAR ParityError : 1;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously 0x8000 </td>
      </tr>
    </tbody>
  </table>
  <p>Of the several flags that version 6.0 moves to the <span class="struct">MMPFNENTRY</span> 
  from <span class="member">u4</span>, the ancient <span class="member">InPageError</span> 
  is special for moving back and forth. It moved with the <span class="struct">MMPFNENTRY</span> 
  when version 4.0 separated the flags from the <span class="member">PteFrame</span>. 
  It rejoined the <span class="member">PteFrame</span> in <span class="member">u4</span> 
  for version 5.1. Its move for version 6.0 is a coming home. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 7th May 2019 but was not published 
    until 26th <a href="../../../../../../../new/19/05.htm">May 2019</a>. It was 
    last modified on 9th <a href="../../../../../../../new/22/07.htm">August 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1922.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2019-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5309" -->
  </div>
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>KAFFINITY_EX</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>KAFFINITY_EX </h1>
<p>The <span class="struct">KAFFINITY_EX</span> structure is used by the kernel 
to represent an arbitrary boolean property per processor. It is essentially a dressing-up 
of a bitmap that allows one bit per processor. Outside the kernel, the structure 
is opaque. The kernel exports functions that support a range of operations such 
as setting, clearing and counting bits. All date from version 6.1 unless otherwise 
noted: </p>
<ul>
  <li><span class="function">KeAddGroupAffinityEx</span> </li>
  <li><span class="function">KeAddProcessorAffinityEx</span> </li>
  <li><span class="function">KeAndAffinityEx</span> </li>
  <li><span class="function">KeAndGroupAffinityEx</span> </li>
  <li><span class="function">KeCheckProcessorAffinityEx</span> </li>
  <li><span class="function">KeComplementAffinityEx</span> </li>
  <li><span class="function">KeCopyAffinityEx</span> </li>
  <li><span class="function">KeCountSetBitsAffinityEx</span> </li>
  <li><span class="function">KeFindFirstSetLeftAffinityEx</span> </li>
  <li><span class="function">KeFindFirstSetRightAffinityEx</span> (6.3 and higher)
  </li>
  <li><span class="function">KeFirstGroupAffinityEx</span> </li>
  <li><span class="function">KeInitializeAffinityEx</span> </li>
  <li><span class="function">KeInterlockedClearProcessorAffinityEx</span> </li>
  <li><span class="function">KeInterlockedSetProcessorAffinityEx</span> </li>
  <li><span class="function">KeIsEmptyAffinityEx</span> </li>
  <li><span class="function">KeIsEqualAffinityEx</span> </li>
  <li><span class="function">KeIsSingleGroupAffinityEx</span> </li>
  <li><span class="function">KeIsSubsetAffinityEx</span> </li>
  <li><span class="function">KeOrAffinityEx</span> </li>
  <li><span class="function">KeQueryGroupAffinityEx</span> </li>
  <li><span class="function">KeRemoveGroupAffinityEx</span> </li>
  <li><span class="function">KeRemoveProcessorAffinityEx</span> </li>
  <li><span class="function">KeSubtractAffinityEx</span> </li>
</ul>
<h2>Documentation Status </h2>
<p>The <span class="struct">KAFFINITY_EX</span> structure is not documented. Neither 
are the functions, though they are declared in the NTOSP.H from the Enterprise edition 
of the Windows Driver Kit (WDK) for Windows 10 Version 1511. </p>
<h2>Layout </h2>
<p>The <span class="struct">KAFFINITY_EX</span> expands as successive Windows versions 
allow more processor groups: </p>
<table>
  <tr>
    <th>Version </th>
    <th>Size (x86) </th>
    <th>Size (x64) </th>
  </tr>
  <tr>
    <td>6.1 </td>
    <td>0x0C </td>
    <td>0x28 </td>
  </tr>
  <tr>
    <td>6.2 to 10.0 </td>
    <td>0x0C </td>
    <td>0xA8 </td>
  </tr>
</table>
<p>Sizes, offsets, types and names in the table that follows are from Microsoft’s 
symbol files for the kernel. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset </th>
    <th>Definition </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">USHORT Count;</pre>
    </td>
  </tr>
  <tr>
    <td>0x02 </td>
    <td>
    <pre class="source">USHORT Size;</pre>
    </td>
  </tr>
  <tr>
    <td>0x04 </td>
    <td>
    <pre class="source">ULONG Reserved;</pre>
    </td>
  </tr>
  <tr>
    <td>0x08 </td>
    <td>
    <pre class="source">KAFFINITY Bitmap [MAX_PROC_GROUPS];</pre>
    </td>
  </tr>
</table>
<p>Here, a macro, <span class="macro">MAX_PROC_GROUPS</span>, is presumed for the 
maximum number of processor groups: </p>
<ul>
  <li>1 for 32-bit Windows; </li>
  <li>4 for 64-bit Windows in version 6.1; </li>
  <li>20 for 64-bit Windows in version 6.2 and higher. </li>
</ul>
<p>The <span class="member">Count</span> and <span class="member">Size</span> count 
processor groups. They are initially 1 and <span class="macro">MAX_PROC_GROUPS</span>. 
The <span class="member">Count</span> grows, up to the <span class="member">Size</span>, 
as bits get set further into the bitmap. </p>
<div class="Footer">
  <p class="Dates">This page was created on 28th October 2016 and was last modified 
  on 17th December 2019. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1619.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2019. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5029" -->
</div>

</body>

</html>

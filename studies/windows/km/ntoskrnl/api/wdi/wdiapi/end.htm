<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EtwWriteEndScenario</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>EtwWriteEndScenario </h1>
<p>This function writes an event, but first ends a scenario. </p>
<h2>Declaration </h2>
<pre class="source">NTSTATUS 
EtwWriteEndScenario (
    REGHANDLE RegHandle, 
    PCEVENT_DESCRIPTOR EventDescriptor, 
    LPCGUID ActivityId, 
    ULONG UserDataCount, 
    PEVENT_DATA_DESCRIPTOR UserData);</pre>
<h3>Arguments </h3>
<p>The <span class="argument">RegHandle</span> argument specifies an event provider.
</p>
<p>The <span class="argument">EventDescriptor</span> argument is the address of 
a structure that describes an event to write. </p>
<p>The <span class="argument">ActivityId</span> argument is the address of a
<span class="struct">GUID</span> to associate with this instance of the event and 
which is already associated with the scenario, i.e., from having been given to or 
generated by the matching <span class="function"><a href="start.htm">EtwWriteStartScenario</a></span>.
</p>
<p>The <span class="argument">UserDataCount</span> argument specifies the number 
of data elements to write with the event. The <span class="argument">UserData</span> 
argument is the address of an array of structures that each describe one of those 
data elements. </p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../../_include/ntstatus.htm" TAG="BODY" startspan -->

<p>The function returns <span class="constant">STATUS_SUCCESS</span> if successful, 
else a negative error code. </p>

<!--webbot bot="Include" endspan i-checksum="8" -->
<h2>Availability </h2>
<p>The <span class="function">EtwWriteEndScenario</span> function is exported by 
name from the kernel in version 6.0 and higher. </p>
<h2>Documentation Status </h2>
<p>The <span class="function">EtwWriteEndScenario</span> function is not documented. 
Neither is it declared in any header from any Windows Driver Kit (WDK). </p>
<p>Pending discovery of Microsoft’s names and types for the function’s arguments, 
this note treats the function as the documented <span class="function">EtwWrite</span> 
function with extra behaviour and supposes that names and types are duplicated.
</p>
<h2>Behaviour </h2>
<p>The <span class="argument">EventDescriptor</span> and <span class="argument">
ActivityId</span> arguments are required. If either is <span class="constant">NULL</span>, 
the function returns <span class="constant">STATUS_INVALID_PARAMETER</span>. </p>
<p>The <span class="argument">RegHandle</span> argument is a handle in the sense 
of representing a registration of an event provider. In version 6.2 and higher, 
it (or its low 32-bits on 32-bit Windows) is a pointer to an
<span class="struct"><a href="../../etw/register/reg_entry/index.htm">ETW_REG_ENTRY</a></span>. 
If instead it is <span class="constant">NULL</span> or if the given event is not 
enabled for the given provider, the function returns <span class="constant">STATUS_INVALID_HANDLE</span>.
</p>
<p>With this validation and preparation done, the function proceeds to its two essential 
tasks. First, it ends the scenario, if any, that’s represented by the
<span class="argument">ActivityId</span>. Second, even if unable to end the scenario, 
the function then writes the event. The function’s success or failure is at writing 
the event. </p>
<div class="Footer">
  <p class="Dates">This page was created on 28th
  <a href="../../../../../../../new/18/12.htm">December 2018</a> and was last modified 
  on 10th May 2020. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1820.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2018-2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5149" -->
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>KSPIN_LOCK_QUEUE_NUMBER</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>KSPIN_LOCK_QUEUE_NUMBER </h1>
  <p>With Windows XP, Microsoft introduced the queued spin lock as improving on 
  the basic spin lock because it “guarantees that processors acquire the spin lock 
  on a first-come first-served basis”. Each contender for a lock not only specifies 
  which lock but also provides a <span class="struct">KSPIN_LOCK_QUEUE</span> structure 
  so that its contention for the lock can be queued. What Microsoft did not say 
  when introducing queued spin locks for general use is that queued spin locks existed 
  earlier for particular purposes. The <span class="enum">KSPIN_LOCK_QUEUE_NUMBER</span> 
  lists those purposes. Each purpose has its own per-processor queued spin lock. 
  Collectively, these are the <span class="member">LockQueue</span> array of
  <span class="struct">KSPIN_LOCK_QUEUE</span> structures in each
  <span class="struct"><a href="../../ntos/kprcb.htm">KPRCB</a></span>. The
  <span class="enum">KSPIN_LOCK_QUEUE_NUMBER</span> indexes this array. </p>
  <p>In 32-bit Windows, the <span class="enum">KSPIN_LOCK_QUEUE_NUMBER</span> is 
  an enumeration (formally <span class="enum">_KSPIN_LOCK_QUEUE_NUMBER</span>). 
  For 64-bit Windows, Microsoft seems to have rethought the exposure, e.g., in symbol 
  files, and the <span class="type">KSPIN_LOCK_QUEUE_NUMBER</span> is instead defined 
  as a <span class="type">ULONG64</span>. Either way, the possible values are the 
  same. </p>
  <p>The <span class="enum">KSPIN_LOCK_QUEUE_NUMBER</span> is not documented, but 
  a C-language definition has long been published, first in NTDDK.H from the Device 
  Driver Kit (DDK) for Windows XP and later in WDM.H. Its existence in these kits 
  as anything other than an opaque type is something of a mystery, since the only 
  use that is made of it in any other header from a DDK or Windows Driver Kit (WDK) 
  is in NTIFS.H for declarations of such functions as <span class="function">KeAcquireQueuedSpinLock</span> 
  which have only ever been documented as reserved. </p>
  <table class="Enum">
    <colgroup>
      <col class="Value"><col class="Name"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2">0x00 </td>
        <td><span class="constant">LockQueueDispatcherLock</span> </td>
        <td>5.0 to 6.0 </td>
      </tr>
      <tr>
        <td><span class="constant">LockQueueUnusedSpare0</span> </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td rowspan="4">0x01 </td>
        <td><span class="constant">LockQueueContextSwapLock</span> </td>
        <td>5.0 to 5.1 </td>
      </tr>
      <tr>
        <td><span class="constant">LockQueueUnusedSpare1</span> </td>
        <td>5.2 </td>
      </tr>
      <tr>
        <td><span class="constant">LockQueueExpansionLock</span> </td>
        <td>6.0 to 6.3 </td>
      </tr>
      <tr>
        <td><span class="constant">LockQueueUnusedSpare1</span> </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x02 </td>
        <td><span class="constant">LockQueuePfnLock</span> </td>
        <td>5.0 to 6.0 </td>
      </tr>
      <tr>
        <td><span class="constant">LockQueueUnusedSpare2</span> </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x03 </td>
        <td><span class="constant">LockQueueSystemSpaceLock</span> </td>
        <td>5.0 to 6.3 </td>
      </tr>
      <tr>
        <td><span class="constant">LockQueueUnusedSpare3</span> </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td><span class="constant">LockQueueVacbLock</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>0x05 </td>
        <td><span class="constant">LockQueueMasterLock</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>0x06 </td>
        <td><span class="constant">LockQueueNonPagedPoolLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x07 </td>
        <td><span class="constant">LockQueueIoCancelLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td><span class="constant">LockQueueWorkQueueLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x09 </td>
        <td><span class="constant">LockQueueIoVpbLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x0A </td>
        <td><span class="constant">LockQueueIoDatabaseLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x0B </td>
        <td><span class="constant">LockQueueIoCompletionLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td><span class="constant">LockQueueNtfsStructLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x0D </td>
        <td><span class="constant">LockQueueAfdWorkQueueLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td>0x0E </td>
        <td><span class="constant">LockQueueBcbLock</span> </td>
        <td>5.1 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x0F</td>
        <td><span class="constant">LockQueueMmNonPagedPoolLock</span> </td>
        <td>5.2 to 6.3 </td>
      </tr>
      <tr>
        <td><span class="constant">LockQueueUnusedSpare15</span> </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td><span class="constant">LockQueueUnusuedSpare16</span> </td>
        <td>late 5.2 and higher </td>
      </tr>
      <tr>
        <td>0x11 </td>
        <td><span class="constant">LockQueueTimerTableLock</span> </td>
        <td>late 5.2 to 6.0 </td>
      </tr>
      <tr>
        <td>0x06 (5.0); <br>
        0x0F (5.1); <br>
        0x10 (early 5.2); <br>
        0x21 (late 5.2 to early 6.0); <br>
        0x31 (late 6.0); <br>
        0x11 </td>
        <td><span class="constant">LockQueueMaximumLock</span> </td>
        <td>5.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>Because the availability of C-language definitions and of type information 
  in symbol files begins with Windows XP, interpretation for version 5.0 is not 
  certain. Even in that version the <span class="member">LockQueue</span> array 
  has space for 0x10 queued spin locks. That only the first six are seen to be used 
  (or even initialised) doesn’t mean that more were not defined. </p>
  <p>The value <span class="constant">LockQueueTimerTableLock</span> selects a cache-aligned 
  array of 0x10 or 0x20 lock queues for accessing the kernel’s timer table (shared 
  among processors). This became redundant when Windows 7 introduced per-processor 
  timer tables. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 15th
    <a href="../../../../../../../new/17/05.htm">May 2017</a> from material that 
    was first published on 14th November 2016. It was last modified on 3rd October 
    2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SECTION_IMAGE_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="33595" -->
<div class="Main">
  <!--webbot bot="Include" U-Include="../../../../../_include/preview.htm" TAG="BODY" startspan -->

<div class="Header">
  <p class="alert">CURRENT WORK ITEM - PREVIEW ONLY </p>
</div>

<!--webbot bot="Include" endspan i-checksum="8381" -->
  <h1>SECTION_IMAGE_INFORMATION </h1>
  <p>The <span class="struct">SECTION_IMAGE_INFORMATION</span> is a structure that 
  the Memory Manager keeps about an executable image that backs a section. It was 
  originally nested into the <span class="struct">SEGMENT</span> structure and is 
  still built in the same pool allocation. Windows 2000 changed it to be merely 
  pointed to from the <span class="struct">SEGMENT</span>. Starting with Windows 
  Vista, this <span class="struct">SECTION_IMAGE_INFORMATION</span> is itself nested 
  into an <span class="struct">MI_SECTION_IMAGE_INFORMATION</span> as a member named
  <span class="member">ExportedImageInformation</span> (presumably for explicit 
  differentiation from the <span class="struct">MI_EXTRA_IMAGE_INFORMATION</span> 
  that follows as a member named <span class="member">InternalImageInformation</span>).
  </p>
  <p>Though the <span class="struct">SECTION_IMAGE_INFORMATION</span> has always 
  been implemented as bookkeeping for the <span class="struct">SEGMENT</span>, it 
  has for just as long been exposed through interfaces. Copies are fetched from 
  the <span class="struct">SEGMENT</span> for two interfaces that are callable from 
  user mode. </p>
  <p>The lower-level of these interfaces is the <span class="function">NtQuerySection</span> 
  and <span class="function">ZwQuerySection</span> functions. Though the latter 
  is not a kernel export until version 3.50 (and the former never is), both are 
  exported from NTDLL (the latter as an alias of the former) right from the start. 
  As with many similar functions, this one’s output is selected by an information 
  class. Successful output for the information class <span class="constant">SectionImageInformation</span> 
  is a (possibly adjusted) copy of the <span class="struct">SECTION_IMAGE_INFORMATION</span> 
  from the queried section’s <span class="struct">SEGMENT</span>. </p>
  <p>A higher-level interface is <span class="function">RtlCreateUserProcess</span>. 
  This too is an ancient export from NTDLL. The caller provides space for an
  <span class="struct">
  <a href="../../../shared/ntrtl/rtl_user_process_information.htm">RTL_USER_PROCESS_INFORMATION</a></span> 
  structure that the function fills in if it succeeds at creating the process and 
  its initial thread. This is in some sense an elaboration of the even higher-level
  <span class="struct">PROCESS_INFORMATION</span> that is a similar provision for 
  the <span class="function">CreateProcess</span> function. Lke the documented
  <span class="struct">PROCESS_INFORMATION</span>, the undocumented
  <span class="struct">RTL_USER_PROCESS_INFORMATION</span> contains not just the 
  handles and IDs of the process and thread. What’s extra is that it also has a
  <span class="struct">SECTION_IMAGE_INFORMATION</span> that is copied from the
  <span class="struct">SEGMENT</span> for the image section. </p>
  <h2>Layout </h2>
  <p>The <span class="struct">SECTION_IMAGE_INFORMATION</span> is 0x30 and 0x40 
  bytes in 32-bit and 64-bit Windows, respectively, in all known versions at least 
  to the 2004 release of Windows 10. Names and definitions in the table that follows 
  are from type information in Microsoft’s symbol files for the kernel starting 
  with Windows 2000 SP3. Type information for two earlier versions is known from 
  statically linked libraries named GDISRVL.LIB and SHELL32.LIB which Microsoft 
  distributed with the Device Driver Kit (DDK) for Windows NT 3.51 and 4.0, respectively. 
  What’s known for other versions is something of a guess from inspecting binaries 
  for continuity with later versions. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>
        <pre class="source">PVOID TransferAddress;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>0x08 </td>
        <td>
        <pre class="source">ULONG ZeroBits;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>0x10 </td>
        <td>
        <pre class="source">ULONG_PTR MaximumStackSize;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>0x18 </td>
        <td>
        <pre class="source">ULONG_PTR CommittedStackSize;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>0x20 </td>
        <td>
        <pre class="source">ULONG SubSystemType;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td rowspan="2">0x14 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">union {
    struct {
        USHORT SubSystemMajorVersion;
        USHORT SubSystemMinorVersion;
    };
    ULONG SubSystemVersion;
};</pre>
        </td>
        <td>3.10 to 3.50 </td>
      </tr>
      <tr>
        <td>0x24 </td>
        <td>
        <pre class="source">union {
    struct {
        USHORT SubSystemMinorVersion;
        USHORT SubSystemMajorVersion;
    };
    ULONG SubSystemVersion;
};</pre>
        </td>
        <td>3.51 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x18 </td>
        <td rowspan="2">0x28 </td>
        <td>
        <pre class="source">ULONG GpValue;</pre>
        </td>
        <td>3.10 to 6.3 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    struct {
        USHORT MajorOperatingSystemVersion;
        USHORT MinorOperatingSystemVersion;
    };
    ULONG OperatingSystemVersion;
};</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x1C </td>
        <td>0x2C </td>
        <td>
        <pre class="source">USHORT ImageCharacteristics;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x1E </td>
        <td>0x2E </td>
        <td>
        <pre class="source">USHORT DllCharacteristics;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x20 </td>
        <td>0x30 </td>
        <td>
        <pre class="source">USHORT Machine;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x22 </td>
        <td>0x32 </td>
        <td>
        <pre class="source">BOOLEAN ImageContainsCode;</pre>
        </td>
        <td>4.0 and higher </td>
      </tr>
      <tr>
        <td rowspan="3">0x22 (3.10 to 3.51); <br>
        0x23 </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">USHORT Spare1;</pre>
        </td>
        <td>3.10 to 3.51 </td>
      </tr>
      <tr>
        <td rowspan="2">0x33 </td>
        <td>
        <pre class="source">UCHAR Spare1;</pre>
        </td>
        <td>4.0 to 5.2 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    UCHAR <a href="imageflags.htm">ImageFlags</a>;
    struct {
        /*  changing bit fields, follow link */
    };
};</pre>
        </td>
        <td>6.0 and higher </td>
      </tr>
      <tr>
        <td>0x24 </td>
        <td>0x34 </td>
        <td>
        <pre class="source">ULONG LoaderFlags;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x28 </td>
        <td>0x38 </td>
        <td>
        <pre class="source">ULONG ImageFileSize;</pre>
        </td>
        <td>late 5.2 and higher </td>
      </tr>
      <tr>
        <td rowspan="3">0x28 (3.10 to early 5.2); <br>
        0x2C </td>
        <td>&nbsp;</td>
        <td>
        <pre class="source">ULONG Reserved [2];</pre>
        </td>
        <td>3.10 to early 5.2 </td>
      </tr>
      <tr>
        <td rowspan="2">0x3C </td>
        <td>
        <pre class="source">ULONG Reserved [1];</pre>
        </td>
        <td>late 5.2 only </td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG CheckSum;</pre>
        </td>
        <td>6.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="member">GpValue</span> and <span class="member">LoaderFlags</span> 
  members are known to be defined as early as version 3.51, but use in earlier versions 
  has not yet been found (not that any effort has been put into looking). </p>
  <p>Exactly what definition Microsoft started with for the subsystem version number 
  may never be known. The essential point is that the order of major and minor version 
  numbers changed. The <span class="struct">IMAGE_OPTIONAL_HEADER</span> from which 
  the version numbers are obtained has all three of its pairs of major and minor 
  versions ordered as major then minor. When the implementation in versions 3.10 
  and 3.50 composes a 32-bit version number from the header’s
  <span class="member">MajorSubsystemVersion</span> and <span class="member">MinorSubsystemVersion</span>, 
  it keeps the minor as the more significant. Later versions transfer the major 
  and minor version numbers separately but reverse the order. Curiously, for the
  <span class="member">MajorOperatingSystemVersion</span> and
  <span class="member">MinorOperatingSystemVersion</span>, which are not saved until 
  version 10.0, the header’s order is retained. </p>
  <p>The <span class="member">ImageContainsCode</span> if the header shows a non-zero
  <span class="member">SizeOfCode</span> or a non-zero <span class="member">AddressOfEntryPoint</span>.
  </p>
  <div class="Footer">
    <p class="Dates">This page was created on 16th September 2019 but was not published 
    until 22nd <a href="../../../../../../../../new/22/12.htm">January 2023</a>. 
    It was last modified on 20th February 2023. </p>
    <!--webbot bot="Include" U-Include="../../../../../_include/c23.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2023. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="1568" -->
  </div>
</div>

</body>

</html>

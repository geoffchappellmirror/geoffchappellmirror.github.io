<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>New in August 2017</title>
<link rel="stylesheet" type="text/css" href="../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/tree.css">
<script type="text/javascript" src="../../_scripts/master.js"></script>
<script type="text/javascript" src="../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/tree.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript Header" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="14880" -->
<div class="Main">
  <h1>New in August 2017 </h1>
  <p>Everyone who does security research into Windows—truly meaning Windows, not 
  just programs that happen to run on Windows—knows WIN32K.SYS as the gift that 
  keeps on giving. But how much of that industry’s investigations into WIN32K is 
  hunter-gathering? Is the research effort—indeed, the industry overall—held back 
  because each researcher surveys just enough background for immediate needs? Might 
  everyone do better if the raw materials of everyone’s security research were farmed 
  or mined? </p>
  <p>Many of the WIN32K structures are sort-of known to everyone because type information 
  once slipped into public view via the WIN32K symbol files. That was just for Windows 
  7, however. Public symbol files since then have disclosed much less. Discovering 
  the layouts for other versions is far from trivial, yet is surely an effort that 
  could benefit many. I’ve been wondering about this for a while and this month 
  I sketch how the work might go. </p>
  <p>The structures that I’ve started with show yet another way that WIN32K keeps 
  giving: the symbol files that Microsoft released for Windows 7 are demonstrably 
  incorrect. It’s not that they are the wrong symbol files for the executable. As 
  far as can be known from time stamps, including for using the symbol files in 
  a debugger or disassembler, these are the matching symbol files. Yet somehow they 
  got built with incorrect type information. Some structures’ sizes are incorrect. 
  Offsets of some members are incorrect. Some members that plainly are used by routines 
  in the matching executable (and even by those same routines in older versions) 
  do not appear at all in the type information for the structure. </p>
  <p>How these symbol files got their incorrect type information, I don’t know. 
  That it evidently can happen should be a lesson to all reverse engineers. Mechanical 
  extraction of type information from symbol files for easy reproduction as a reverse-engineering 
  resource is all very well, but when it comes to the nitty-gritty of
  <span class="emphasis">relying</span> on such resources there is surely no substitute 
  for personal curation by an expert analyst. Make no mistake here: even though 
  this is work in progress, I mean it as setting the standard. </p>
  <h2>Kernel </h2>
  <div class="Tree">
    <ul>
      <li class="Expanded Branch">WIN32K
      <ul>
        <li class="Expanded Branch">Structures
        <ul>
          <li class="Expanded Branch"><a href="../../studies/windows/km/win32k/structs/processinfo/index.htm">PROCESSINFO</a>
          <ul>
            <li><a href="../../studies/windows/km/win32k/structs/processinfo/flags.htm">Flags</a> </li>
          </ul>
          </li>
          <li><a href="../../studies/windows/km/win32k/structs/qmsg.htm">QMSG</a> </li>
          <li><a href="../../studies/windows/km/win32k/structs/tdb.htm">TDB</a> </li>
          <li class="Expanded Branch"><a href="../../studies/windows/km/win32k/structs/threadinfo/index.htm">THREADINFO</a>
          <ul>
            <li><a href="../../studies/windows/km/win32k/structs/threadinfo/dwcompatflags.htm">dwCompatFlags</a> </li>
            <li><a href="../../studies/windows/km/win32k/structs/threadinfo/qwcompatflags2.htm">qwCompatFlags2</a> </li>
            <li><a href="../../studies/windows/km/win32k/structs/threadinfo/ulthreadflags2.htm">ulThreadFlags2</a> </li>
          </ul>
          </li>
          <li><a href="../../studies/windows/km/win32k/structs/userstartupinfo.htm">USERSTARTUPINFO</a> </li>
          <li><a href="../../studies/windows/km/win32k/structs/wowprocessinfo.htm">WOWPROCESSINFO</a> </li>
          <li><a href="../../studies/windows/km/win32k/structs/wowthreadinfo.htm">WOWTHREADINFO</a> </li>
        </ul>
        </li>
      </ul>
      </li>
    </ul>
  </div>
  <h2>Win32 </h2>
  <p>And look! Here’s a stray from work that may get published next month. I briefly 
  had it among the WIN32K structures but I have since decided that if anything WIN32K 
  creates in kernel mode is visible in user mode, even if only for reading, then 
  it might better go in the user-mode section. </p>
  <div class="Tree">
    <ul>
      <li class="Expanded Branch">USER32
      <ul>
        <li class="Expanded Branch">Structures
        <ul>
          <li><a href="../../studies/windows/win32/user32/structs/cls.htm">CLS</a> </li>
        </ul>
        </li>
      </ul>
      </li>
    </ul>
  </div>
  <div class="Footer">
    <!-- webbot bot="Include" U-Include="../../_include/c17.htm" TAG="BODY" -->
  </div>
</div>

</body>

</html>

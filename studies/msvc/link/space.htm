<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>White Space in LINK.EXE Directives</title>
<link rel="stylesheet" type="text/css" href="../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../_styles/msvc.css">
<script type="text/javascript" src="../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../_scripts/document.js"></script>
<script type="text/javascript" src="../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="22703" endspan -->
<h1>White Space in LINK.EXE Directives </h1>
<p>In general, directives are separated by white space in the source text. However, 
they may themselves contain white space due to a facility for enclosure by double-quotes. 
This facility works very slightly differently, but with non-trivial implications, 
depending on the source. </p>
<p>Directives on the actual command line are separated by the C Run-Time Library 
(specifically by the <span class="function">__getmainargs</span> function in MSVCR70.DLL), 
according to the usual C-language rules of parsing command-line arguments for the
<span class="function">main</span> function. The separated arguments become the 
separate directives. The parsing treats the double-quote and backslash specially. 
Where a double-quote is preceded by an odd number of backslashes, it is a
<span class="definition">literal</span> double-quote. What passes from the command 
line into the argument is one backslash for each pair, plus one double-quote. Where 
a double-quote is preceded by an even number of backslashes, including by no backslashes, 
what passes into the argument is one backslash for each pair. The double-quote is 
discarded except to signify that until the next non-literal double-quote (if any), 
white space does not act as an argument separator. This matching non-literal double-quote 
also does not pass into the argument. </p>
<p>For directives from other sources, i.e., from command files and environment variables, 
separation is handled by the linker’s own code which does not go to quite the same 
trouble. Backslashes are always just backslashes and there is no support for a literal 
double-quote. Any double-quote disables white space as a separator of directives 
until the next double-quote (if any). Neither the first double-quote nor its match 
passes from the source text into the directive. </p>
<p>Whether the difference has any effect in practice depends on what the programmer 
wants to do, and with what methods and tools. There follow a few quick speculations.
</p>
<p>Occasions for wanting a double-quote inside a directive must be very few, especially 
since the double-quote is not a valid character in filenames or symbols. However, 
should such a directive be wanted, it can be given only on the actual command line, 
and only by knowing to use the backslash as an escape character. </p>
<p>The special interpretation of the backslash makes for some trouble if composing 
a pathname from elements that already have their white space enclosed by double-quotes. 
If the pathname goes into a directive on the actual command line, then a straightforward 
concatenation with backslashes between path elements is unreliable since a double-quote 
at the start of an element becomes literal and the preceding backslash disappears.
</p>
<div class="Footer">
  <p class="Dates">This page was created on 26th September 2005 and was last modified 
  on 9th June 2009. </p>
  <!--webbot bot="Include" U-Include="../_include/c0509.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2005-2009. Geoff Chappell. All rights reserved.
<a href="../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62439" endspan -->
</div>

</body>

</html>

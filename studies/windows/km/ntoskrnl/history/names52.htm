<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Kernel Exports Added for Version 5.2</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/km.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="63592" -->
<div class="Main">
  <h1>Kernel Exports Added for Version 5.2 </h1>
  <p>This page lists the 45 exports that were newly exported from the Windows kernel 
  for the original Windows Server 2003. All but one are still exported as of version 
  10.0. </p>
  <p>Also listed are the 97 and 2 more that are first exported from the Windows 
  kernel in the builds of version 5.2 for Windows Server 2003 SP1 and SP2, respectively. 
  This is the one and only time that a service pack adds more exports than did the 
  same version’s original release. The reason, of course, is that Windows Server 
  2003 SP1 is the first x64 build. </p>
  <h2>Conventions </h2>
  <!--webbot bot="Include" U-Include="_include/conventions.htm" TAG="BODY" startspan -->

<p>To convey more detail with less text, the page relies heavily on several types 
of shortcut. </p>

<!--webbot bot="Include" endspan i-checksum="31086" -->
  <!--webbot bot="Include" U-Include="_include/variables.htm" TAG="BODY" startspan -->

<p>The first is that although a few of the kernel’s exports are of variables rather 
than functions, I tend to talk of all as functions, hoping that no confusion will 
be caused by the loose terminology. The variables are indicated by a parenthetical 
“data” after their first appearance in the Functions column. </p>

<!--webbot bot="Include" endspan i-checksum="20269" -->
  <h3>Colours </h3>
  <!--webbot bot="Include" U-Include="../../_include/colours.htm" TAG="BODY" startspan -->

<p>Documentation status is summarised by colour coding. <span class="NoScript">(Had 
the website’s scripts run as expected, then hovering over any colour-coded text 
would produce a tooltip that shows why the text is coloured.) </span>
<span class="ScriptOnly">(To decode a colour, hover for a tooltip.) </span></p>
<p>Functions that appear to be completely undocumented are
<span class="undocumented">highlighted yellow</span>. If a function is documented 
now but was not documented in the first contemporaneous Device Driver Kit (DDK), 
Windows Driver Kit (WDK) or Installable File System (IFS) Kit, then it is
<span class="delayed">shaded yellow</span> to retain some of its previous status. 
If a function is documented as reserved or obsolete, it is
<span class="reserved">shaded red</span> or <span class="obsolete">shaded grey</span>, 
respectively. Otherwise, functions that have their own non-trivial documentation 
are left with no background colour. </p>
<p>Many undocumented functions and some variables have C-language declarations in 
one or another header file. To show them as being not completely undocumented they 
are <span class="declared">shaded orange</span>, except for one special case. Some 
declarations are known only from “minwin” headers that Microsoft published in early 
editions of the WDK for Windows 10 which seem since to have been withdrawn. These 
are <span class="minwin">highlighted orange</span> to indicate that public disclosure 
even of the declaration was exceptional. </p>

<!--webbot bot="Include" endspan i-checksum="57742" -->
  <h3>Actual Availability </h3>
  <!--webbot bot="Include" U-Include="_include/exporthistory.htm" TAG="BODY" startspan -->

<p>The default understanding is that exporting continues for all later versions, 
and in both the x86 and x64 builds. Exceptions are sketched in a column headed Export 
History. </p>

<!--webbot bot="Include" endspan i-checksum="64859" -->
  <!--webbot bot="Include" U-Include="_include/x86only.htm" TAG="BODY" startspan -->

<p>The description “x86 only” means that the function is not exported from any known 
x64 build but is exported from the x86 build of at least some version that has an 
x64 build. If it had already ceased as an export before Windows Server 2003 SP1, 
the “x86 only” is left unstated. </p>

<!--webbot bot="Include" endspan i-checksum="43035" -->
  <!--webbot bot="Include" U-Include="_include/x64only.htm" TAG="BODY" startspan -->

<p>The description “x64 only” means straightforwardly that the function is exported 
from x64 builds but not from any known x86 build. </p>

<!--webbot bot="Include" endspan i-checksum="6775" -->
  <!--webbot bot="Include" U-Include="_include/discontinued.htm" TAG="BODY" startspan -->

<p>That a function is “discontinued in” some version means that the function is 
exported up to but not including the stated version and not in any later version 
unless “restored”. </p>

<!--webbot bot="Include" endspan i-checksum="31363" -->
  <h3>Documented Availability </h3>
  <!--webbot bot="Include" U-Include="_include/docdeclhistory.htm" TAG="BODY" startspan -->

<p>It’s nothing but fair to note that the majority of these functions were not documented 
immediately. Even more were then or later said to require later versions. These 
misrepresentations of actual availability show also in C-language declarations for 
the functions’ use in programming. Conveying these differences between what the 
kernel exported and what Microsoft presented for drivers to import is the concern 
of columns headed Documentation History and Declaration History. </p>
<p class="alert">Conventions still in development! </p>

<!--webbot bot="Include" endspan i-checksum="26474" -->
  <h2>Tabulation </h2>
  <!--webbot bot="Include" U-Include="_include/tabulation.htm" TAG="BODY" startspan -->

<p>As much as I might like to condense into one table as much as might be imagined 
is possible to summarise about all these functions’ history of availability both 
in the binary and according to the documentation and headers, many functions both 
individually and in groups demand additional explanation in text. I therefore break 
the tabulation according to Microsoft’s scheme of prefixes for separate areas of 
functionality within the otherwise monolithic kernel. Each function has its own 
row in one table, but please be sure to check for explanatory text before and (more 
usually) after the table. </p>

<!--webbot bot="Include" endspan i-checksum="36034" -->
  <p>Not quite half of these new exports for version 5.2 are nowadays documented, 
  i.e., after nearly 20 years. For most, the documentation states (correctly) that 
  the function is “available on Microsoft Windows Server 2003 and later”. A handful 
  are documented as if they are not available until Windows Vista. A handful are 
  documented only as being reserved, without saying which versions have them. Another 
  fifth of the new functions are undocumented but with declarations in one or another 
  of the WDK header files. Declarations, both of these and the documented functions, 
  are mostly conditional (again correctly) on building for Windows Server 2003 or 
  higher. The remaining third of the new functions had neither documentation nor 
  declaration for well more than a decade. Then, apparently only by oversight for 
  those early editions of the WDK for Windows 10, Microsoft published declarations 
  for most of them! </p>
  <h3><span class="functionprefix">Dbg</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="undocumented function">DbgCommandString</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Ex</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">ExAcquireFastMutex</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 3.50) </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="declared function">ExAcquireRundownProtectionCacheAware</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExAcquireRundownProtectionCacheAwareEx</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExAllocateCacheAwareRundownProtection</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExEnterCriticalRegionAndAcquireFastMutexUnsafe</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">ExEnterCriticalRegionAndAcquireResourceExclusive</span>
        </td>
        <td>starts in SP1 </td>
        <td>before 6.3, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExEnterCriticalRegionAndAcquireResourceShared</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExEnterCriticalRegionAndAcquireSharedWaitForExclusive</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExFreeCacheAwareRundownProtection</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExInitializeRundownProtectionCacheAware</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">ExQueryDepthSList</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExReInitializeRundownProtectionCacheAware</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">ExReleaseFastMutex</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 3.50) </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="minwin function">ExReleaseFastMutexUnsafeAndLeaveCriticalRegion</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">ExReleaseResourceAndLeaveCriticalRegion</span>
        </td>
        <td>starts in SP1 </td>
        <td>before 6.3, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExReleaseRundownProtectionCacheAware</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExReleaseRundownProtectionCacheAwareEx</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExRundownCompletedCacheAware</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExSizeOfRundownProtectionCacheAware</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">ExTryToAcquireFastMutex</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 3.50) </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="declared function">ExWaitForRundownProtectionReleaseCacheAware</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExfReleasePushLockExclusive</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExfReleasePushLockShared</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExfTryToWakePushLock</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExfUnblockPushLock</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">ExiAcquireFastMutex</span> </td>
        <td>starts in SP1; <br>
        x86 only </td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">ExiReleaseFastMutex</span> </td>
        <td>starts in SP1; <br>
        x86 only </td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">ExiTryToAcquireFastMutex</span>
        </td>
        <td>starts in SP1; <br>
        x86 only </td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExpInterlockedFlushSList</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExpInterlockedPopEntrySList</span>
        </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExpInterlockedPushEntrySList</span>
        </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="function">ExAcquireFastMutex</span>,
  <span class="function">ExReleaseFastMutex</span> and <span class="function">ExTryToAcquireFastMutex</span> 
  functions have earlier history as exports from the HAL. In this sense, they date 
  from version 3.50 and have always been documented. The x64 processor architecture 
  brought a rethink of how some functionality is distributed between the kernel 
  and the HAL such that x64 Windows has only ever known these functions as exports 
  from the kernel. The x86 implementations also moved to the kernel at this time 
  but with the complication of being renamed to start with the
  <span class="functionprefix">Exi</span> prefix. When this was tidied for Windows 
  8, the <span class="functionprefix">Exi</span> functions joined the few kernel 
  exports that have been lost from the declarations and become undocumented. </p>
  <p>Though <span class="function">ExQueryDepthSList</span> is an exported function 
  only on x64 builds, it is older as an x86 macro. This is first defined in the 
  NTDDK.H from the DDK for Windows NT 4.0 and is first documented in the DDK for 
  Windows 2000. </p>
  <h3><span class="functionprefix">FsRtl</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="declared function">FsRtlAddBaseMcbEntry</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">FsRtlGetNextBaseMcbEntry</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">FsRtlInitializeBaseMcb</span> </td>
        <td>before 2018, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">FsRtlLookupBaseMcbEntry</span> </td>
        <td>before 2018, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="declared function">FsRtlLookupLastBaseMcbEntry</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">FsRtlLookupLastBaseMcbEntryAndIndex</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">FsRtlNumberOfRunsInBaseMcb</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">FsRtlRemoveBaseMcbEntry</span> </td>
        <td>before 2018, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="declared function">FsRtlResetBaseMcb</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">FsRtlSplitBaseMcb</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">FsRtlTruncateBaseMcb</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">FsRtlUninitializeBaseMcb</span> </td>
        <td>before 2018, <span class="declared">declared</span> </td>
      </tr>
    </tbody>
  </table>
  <p>For very many years, Microsoft did not document any functions that work with 
  the <span class="struct">BASE_MCB</span> structure, which version 5.2 extracted 
  from the older <span class="struct">LARGE_MCB</span>. That they are all declared 
  but undocumented looked to be still true when checking online on 13th October 
  2018. Now in 2020, Microsoft’s website has documentation for four of them, all 
  dated 19th October 2018. </p>
  <h3>One Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">InitializeSListHead</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>before 2018, SDK <br>
        documented start is 5.0 </td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="function">InitializeSListHead</span> function dates from version 
  5.1 as an x86 macro defined concurrently with the newly exported functions
  <span class="function">InterlockedPopEntrySList</span> and
  <span class="function">InterlockedPushEntrySList</span>. These provide for lock-less 
  use of the sequenced single-linked list that had been introduced for version 4.0. 
  Lock-less use presented some difficulty for early 64-bit Windows which could not 
  (yet) require the <span class="instruction">cmpxchg16b</span> instruction. Perhaps 
  to have more freedom over the implementation’s development, 64-bit Windows has 
  only ever known <span class="function">InitializeSListHead</span> (and
  <span class="function">ExQueryDepthSList</span>, above) as exported functions, 
  not macros. How this matters for a historical survey is that these functions for 
  lock-less use of sequenced single-linked lists were for many years documented 
  not in any DDK but in the Software Development Kit (SDK) for user-mode progamming. 
  Not until 2018 when Microsoft reorganised its programming documentation around 
  which headers have functions’ declarations is <span class="function">InitializeSListHead</span> 
  explicitly documented for kernel-mode programming. How it is then said to have 
  been available as early as 5.0 is not known. </p>
  <h3><span class="functionprefix">Io</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">IoCsqInitializeEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCsqInsertIrpEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">IoGetPagingIoPriority</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="function">IoIs32bitProcess</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>documented start is 5.1 </td>
      </tr>
      <tr>
        <td><span class="declared function">IoTranslateBusAddress</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIDeviceObjectToProviderId</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="function">IoIs32bitProcess</span> function was documented 
  well in advance, in the DDK for Windows XP, as “only available in Windows XP and 
  later, for 64-bit platforms.” Though the DDK for Windows 2003 dropped the warning 
  that “This is preliminary documentation and subject to change”, the function is 
  to this day presented as “Available in 64-bit versions of Windows XP and later”. 
  Given this study’s restriction of interest to x86 and x64 processor architectures, 
  the only known 64-bit Windows XP is in fact version 5.2 SP1. </p>
  <p>Also documented well in advance, though starting with the DDK for Windows 2000, 
  is <span class="function">IoWMIDeviceObjectToProviderId</span>. It is documented 
  for both 32-bit and 64-bit Windows. Its x86 support is by macro. </p>
  <h3><span class="functionprefix">Kd</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">KdChangeOption</span> </td>
        <td>starts in SP1 </td>
        <td>before 6.1, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">KdRefreshDebuggerNotPresent</span>
        </td>
        <td>&nbsp;</td>
        <td>before SP1, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="minwin function">KdSystemDebugControl</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Ke</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">KeAcquireGuardedMutex</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeAcquireGuardedMutexUnsafe</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeAcquireInStackQueuedSpinLock</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.1) </td>
        <td>&nbsp;</td>
        <td>since 6.0, declared start is 5.1 </td>
      </tr>
      <tr>
        <td><span class="delayed function">KeAcquireInStackQueuedSpinLockForDpc</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented start is 6.0 </td>
        <td>since 6.0, declared start is 6.0 </td>
      </tr>
      <tr>
        <td><span class="undocumented function">KeAcquireInStackQueuedSpinLockRaiseToSynch</span>
        </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.1) </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed reserved function">KeAcquireQueuedSpinLock</span>
        </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.0) </td>
        <td>before 5.1 (IFS) to 6.0, <span class="undocumented">undocumented</span>
        </td>
        <td>since 6.0, declared start is 5.1 </td>
      </tr>
      <tr>
        <td><span class="undocumented function">KeAcquireQueuedSpinLockRaiseToSynch</span>
        </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.0) </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">KeAcquireSpinLockForDpc</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented start is 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeAcquireSpinLockRaiseToDpc</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
        <td>since 6.0, conditionally declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="delayed reserved function">KeAcquireSpinLockRaiseToSynch</span>
        </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 4.0) </td>
        <td>before 5.0, <span class="declared">declared</span> </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="function">KeAreAllApcsDisabled</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeDeregisterNmiCallback</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeEnterGuardedRegion</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">KeExpandKernelStackAndCallout</span>
        </td>
        <td>starts in SP1; <br>
        before 6.0, x64 only; </td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">KeGenericCallDpc</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeGetCurrentIrql</span> </td>
        <td>starts in SP1; <br>
        x64 only; <br>
        (x86 from HAL since 3.10) </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeInitializeCrashDumpHeader</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>before 6.2, not declared </td>
      </tr>
      <tr>
        <td><span class="function">KeInitializeGuardedMutex</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">KeInitializeThreadedDpc</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented start is 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">KeInvalidateAllCaches</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">KeIpiGenericCall</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">KeIsWaitListEmpty</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared variable">KeLastBranchMSR</span> (data) </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeLeaveGuardedRegion</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeLowerIrql</span> </td>
        <td>starts in SP1; <br>
        x64 only; <br>
        (x86 from HAL since 3.10) </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">KeQueryMultiThreadProcessorSet</span>
        </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">KeQueryPrcbAddress</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeRaiseIrqlToDpcLevel</span> </td>
        <td>starts in SP1; <br>
        x64 only; <br>
        (x86 from HAL since 4.0) </td>
        <td>before 5.1, <span class="declared">declared</span>; <br>
        since 6.1 revision, documented start is 5.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeRegisterNmiCallback</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeReleaseGuardedMutex</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeReleaseGuardedMutexUnsafe</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeReleaseInStackQueuedSpinLock</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.1) </td>
        <td>&nbsp;</td>
        <td>since 6.0, declared start is 5.1 </td>
      </tr>
      <tr>
        <td><span class="delayed function">KeReleaseInStackQueuedSpinLockForDpc</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented start is 6.0 </td>
        <td>since 6.0, declared start is 6.0 </td>
      </tr>
      <tr>
        <td><span class="delayed reserved function">KeReleaseQueuedSpinLock</span>
        </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.0) </td>
        <td>before 5.1 (IFS) to 6.0, <span class="undocumented">undocumented</span>
        </td>
        <td>since 6.0, declared start is 5.1 </td>
      </tr>
      <tr>
        <td><span class="function">KeReleaseSpinLock</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 3.10) </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>since 6.0, conditionally declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="delayed function">KeReleaseSpinLockForDpc</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented start is 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">KeSignalCallDpcDone</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">KeSignalCallDpcSynchronize</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">KeTestSpinLock</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeTryToAcquireGuardedMutex</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed reserved function">KeTryToAcquireQueuedSpinLock</span>
        </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.0) </td>
        <td>before 5.1 (IFS) to 6.0, <span class="undocumented">undocumented</span>
        </td>
        <td>since 6.0, declared start is 5.1 </td>
      </tr>
      <tr>
        <td><span class="undocumented function">KeTryToAcquireQueuedSpinLockRaiseToSynch</span>
        </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        (x86 from HAL since 5.0) </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeTryToAcquireSpinLockAtDpcLevel</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>in 6.0, declared start is 5.1 (x86) </td>
      </tr>
      <tr>
        <td><span class="declared function">KfRaiseIrql</span> </td>
        <td>starts in SP1; <br>
        x64 only; <br>
        (x86 from HAL since 3.50) </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">KiCheckForKernelApcDelivery</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">KiCheckForSListAddress</span>
        </td>
        <td>starts in SP2; <br>
        x86 only </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">KiCpuId</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only; <br>
        discontinued in 6.3 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>Documentation even in 2020 would have it that the several functions that work 
  with the guarded region and guarded mutex are available on Windows Server 2003 
  without requiring SP1. The original Windows Server 2003 certainly does have the 
  notion of a guarded region and plausibly has inlined routines that implement a 
  guarded mutex as a fast mutex acquired in a guarded region, but it does not export 
  any functions for this work. </p>
  <p>Though the Interrupt Request Level (IRQL) is fundamental in kernel-mode programming 
  it was at first the business of the HAL. For x86 Windows, functions that work 
  with the IRQL are HAL exports only and functions that work with the various types 
  of spin lock are distributed between the HAL and the kernel according to whether 
  they involve the IRQL. For x64 Windows, the IRQL has direct support from the processor 
  (through the <span class="register">cr8</span> register) and the HAL’s involvement 
  is simplified away. Old friends from the 32-bit HAL, along with some obscurities, 
  become new exports from the 64-bit kernel. Thus does it happen that a function 
  is listed above as newly exported from the kernel but is documented as having 
  earlier availability. This is not remarked on above, when correct for the function 
  as a HAL export. </p>
  <p>Between x86 and x64 Windows, the <span class="function">KeAcquireSpinLockRaiseToDpc</span> 
  function is genuinely new for Windows Server 2003 SP1, but it does have earlier 
  history, just not for the x86. The DDK for Windows NT 4.0 declares it as an exported 
  function for all processor architectures other than the x86. It is first documented 
  in the DDK for Windows XP. Starting with the revised WDK for Windows 7, it is 
  said to be “Available in the 64-bit versions of Windows 2000 and in later 64-bit 
  versions of Windows.” No 64-bit Windows 2000 is known to this study, which is 
  limited just to the i386 (x86) and amd64 (x64) processor architectures. A 64-bit 
  Windows XP is, but only as a marketing name, its kernel actually being version 
  5.2 SP1. ;</p>
  <p>The <span class="function">KeDeregisterNmiCallback</span> and
  <span class="function">KeRegisterNmiCallback</span> functions are documented in 
  the DDK for Windows XP as being available for Windows XP. So may have been the 
  plan, but they were not exported so early, nor even declared in any header, and 
  there is no support for the callback in the version 5.1 kernel’s NMI handling.
  </p>
  <p>That <span class="function">KeAreAllApcsDisabled</span> has always been documented 
  as being available in Windows Server 2003 without the qualification of needing 
  SP1 may tell something of Microsoft’s methods for browsing its source code for 
  what to document. If the function does exist before Windows Server 2003 SP1, it 
  is only as an internal routine and only then inline (which can be seen very plainly 
  in the internal routine that symbol files name <span class="internal routine">
  RtlpCaptureStackTraceForLogging</span>). </p>
  <p>The <span class="function">KeInitializeCrashDumpHeader</span> function is documented 
  from the start as being “Declared in <i>wdm.h</i> and <i>ntddk.h</i>” but the 
  WDK for Windows 8 is the first that actually does declare the function in any 
  header. </p>
  <p>The <span class="function">KeTryToAcquireSpinLockAtDpcLevel</span> function 
  has earlier history that is not shown above. Even on the x86, this function would 
  not have been a HAL export. Indeed, it can be identified in the x86 kernel even 
  in version 3.10 as the internal routine that symbol files name
  <span class="internal routine">KiTryToAcquireSpinLock</span>. The intention seems 
  to have been to export this, renamed and slightly changed to
  <span class="keyword">__fastcall</span>, from the version 5.1 kernel. It’s documented 
  in the DDK for Windows XP and declared in NTDDK.H and WDM.H. As late as the WDK 
  for Windows Vista, it has an x86-specific declaration in a conditional block for 
  Windows XP and higher. Even so, the x86 kernel doesn’t export this function until 
  there’s also an x64 kernel. </p>
  <h3><span class="functionprefix">Mm</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">MmAllocatePagesForMdlEx</span> </td>
        <td>starts in SP1 </td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed reserved function">MmCreateMirror</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">MmDoesFileHaveUserWritableReferences</span>
        </td>
        <td>starts in SP2 </td>
        <td>before 6.1, <span class="undocumented">undocumented</span>; <br>
        documented start is 6.0 </td>
        <td>declared start is 6.0 </td>
      </tr>
      <tr>
        <td><span class="delayed reserved function">MmIsIoSpaceActive</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Ps</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="minwin function">PsGetCurrentProcessWin32Process</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentProcessWow64Process</span>
        </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentThreadProcess</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentThreadProcessId</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">PsGetCurrentThreadTeb</span> </td>
        <td>starts in SP1 </td>
        <td>before 6.2, <span class="undocumented">undocumented</span>; <br>
        documented start is 6.1 </td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentThreadWin32Thread</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentThreadWin32ThreadAndEnterCriticalRegion</span>
        </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessSessionIdEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessWow64Process</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsIsSystemProcess</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">PsWrapApcWow64Thread</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Rtl</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">RtlCopyMemory</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlCopyMemoryNonTemporal</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>before 2018, <span class="declared">declared</span>; <br>
        documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">RtlInitAnsiStringEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">RtlInitUnicodeStringEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>since 6.0, declared start is 5.1 </td>
      </tr>
      <tr>
        <td><span class="function">RtlLookupFunctionEntry</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>documented only in SDK </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlPcToFileHeader</span> </td>
        <td>starts in SP1; <br>
        before 10.0, x64 only </td>
        <td>documented only in SDK </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlRestoreContext</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>documented only in SDK </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlUnwindEx</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>documented only in SDK </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlVirtualUnwind</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>documented only in SDK </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="function">RtlCopyMemory</span> function has x86 support as 
  a macro, simply reinterpreting it as the C Run-Time <span class="function">memcpy</span> 
  (which may anyway be treated by the compiler as intrinsic). The definition dates 
  from the DDK for Windows NT 3.1, though documentation waited for version 3.50 
  or 3.51. Even as an exported function in x64 Windows, it has no implementation 
  in the kernel: it is just a forward to <span class="function">memmove</span>.
  </p>
  <p>The <span class="delayed function">RtlCopyMemoryNonTemporal</span> function 
  is first declared in the DDK for Windows XP. The declaration is specificially 
  for the amd64 architecture. For all others, the function is instead defined by 
  macro as an alias of <span class="function">RtlCopyMemory</span>. Whether as a 
  function or macro, it is not in Windows 10 WDK documentation as published for 
  integration into Visual Studio 2015 and I have no record of it in surveys of Microsoft’s 
  online documentation in 2016 or 2018. What’s online now is dated 19th October 
  2018 and I see no reason to doubt this as a date of first publication. Since this 
  documentation does not say the function is for 64-bit Windows only, the stated 
  availability (Windows Server 2003 even before SP1) must count as a little too 
  early for the function as an export without being early enough for it as a macro.
  </p>
  <p class="alert">What to say about <span class="function">RtlLookupFunctionEntry</span>?
  </p>
  <h3><span class="functionprefix">Se</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="declared function">SeReportSecurityEvent</span> </td>
        <td>starts in SP1 </td>
      </tr>
      <tr>
        <td><span class="declared function">SeSetAuditParameter</span> </td>
        <td>starts in SP1 </td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Wmi</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="undocumented function">WmiTraceFastEvent</span> </td>
        <td>discontinued in 6.0 </td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Zw</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="minwin function">ZwAddDriverEntry</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwDeleteDriverEntry</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwEnumerateDriverEntries</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwModifyBootEntry</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwModifyDriverEntry</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwQueryDriverEntryOrder</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwSecureConnectPort</span> </td>
        <td>starts in SP1 </td>
        <td>before 6.1, <span class="declared">declared</span> </td>
        <td>in 6.0, declared start is 5.2 SP1 </td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwSetDriverEntryOrder</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>To be clear, since it is unusual, the NTIFS.H from the WDK for Windows Vista 
  declares <span class="minwin function">ZwSecureConnectPort</span>, and then the 
  declaration disappears except for the presumably accidental disclosure of ZWAPI.H 
  in early editions of the WDK for Windows 10. </p>
  <h3>C Run-Time (CRT) Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <tbody>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
      <tr>
        <td><span class="delayed function">__C_specific_handler</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>before 2015-2022, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="undocumented function">__chkstk</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">__misaligned_access</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">_local_unwind</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">_setjmp</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">_setjmpex</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">longjmp</span> </td>
        <td>starts in SP1; <br>
        x64 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">memcmp</span> </td>
        <td>starts in SP1; <br>
        before 6.2, x64 only </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>An image-relative reference to the <span class="delayed function">__C_specific_handler</span> 
  function is generated by Microsoft’s 64-bit compilers for the unwind data 
  information of any function that uses Structured Exception Handling (SEH). </p>
  <p>Calls to the <span class="undocumented function">_local_unwind</span> function 
  are generated by Microsoft’s 64-bit compilers when C and C++ functions leave a 
  <span class="keyword">__finally</span> block non-trivially. Contemporaneous 32-bit 
  compilers generate calls to <span class="delayed function">_local_unwind2</span> 
  instead. The latter is exported from all known x86 builds of the kernel and got 
  its own page of documentation as early as Visual Studio 2012. The 64-bit form, 
  however, looks to be undocumented. </p>
  <h2>Old Friends </h2>
  <p>Not shown above is that version 5.2 restores <span class="minwin function">
  ObDeleteCapturedInsertInfo</span> as an export. In terms of version number, though 
  not chronologically, this function is exported first from Windows 2000 SP4. It 
  is not exported from version 5.1, including from all three of its formally released 
  service packs. </p>
  <h3>Skipped </h3>
  <p>Slightly different is that <span class="function">FsRtlCreateSectionForDataScan</span> 
  and <span class="function">IoEnumerateRegisteredFiltersList</span> are restored 
  as exports in version 5.2 SP1. Reckoning by version number, these functions are 
  exported first from Windows XP SP3, apparently too late chronologically to be 
  exported from the original release of version 5.2. </p>
  <h2>Discontinued </h2>
  <p>Version 5.2 stops exporting a few functions. For each, the version in parentheses 
  tells when the function was first exported: </p>
  <ul>
    <li><span class="undocumented function">IoInitializeCrashDump</span> (5.1 SP3)
    </li>
    <li><span class="undocumented function">KeDcacheFlushCount</span> (3.10)
    </li>
    <li><span class="undocumented function">KeIcacheFlushCount</span> (3.10)
    </li>
    <li><span class="reserved function">KeSetTimeUpdateNotifyRoutine</span> (4.0)
    </li>
    <li><span class="minwin function">ObIsDosDeviceLocallyMapped</span> (5.1 SP3) 
    but see note </li>
    <li><span class="declared function">SeTokenIsWriteRestricted</span> (5.1 SP2) 
    but see note </li>
  </ul>
  <p>Two of these are restored as exports in version 6.0, again because they are 
  new exports for Windows Vista but appear in this survey for version 5.1 because 
  they were back-fitted to Windows XP for its last service packs. </p>
  <h3>Not Continued For x64 </h3>
  <p>Of course, many exports from earlier versions continue for the x86 builds but 
  are not taken up for exporting from the x64 builds. It’s perhaps as well to list 
  them: </p>
  <ul>
    <li><span class="delayed function">
    <a href="../api/ex/intrlfst/addlargestatistic.htm">ExInterlockedAddLargeStatistic</a></span> 
    (3.50) </li>
    <li><span class="delayed function">ExInterlockedCompareExchange64</span> (4.0)
    </li>
    <li><span class="obsolete function">ExInterlockedDecrementLong</span> (3.10)
    </li>
    <li><span class="obsolete function">ExInterlockedExchangeUlong</span> (3.10)
    </li>
    <li><span class="function">ExInterlockedFlushSList</span> (5.0) </li>
    <li><span class="function">ExInterlockedPopEntrySList</span> (4.0) </li>
    <li><span class="function">ExInterlockedPushEntrySList</span> (4.0) </li>
    <li><span class="declared function">ExfInterlockedAddUlong</span> (3.50)
    </li>
    <li><span class="declared function">ExfInterlockedCompareExchange64</span> (5.1)
    </li>
    <li><span class="declared function">ExfInterlockedInsertHeadList</span> (3.50)
    </li>
    <li><span class="declared function">ExfInterlockedInsertTailList</span> (3.50)
    </li>
    <li><span class="reserved function">ExfInterlockedPopEntryList</span> (3.50)
    </li>
    <li><span class="reserved function">ExfInterlockedPushEntryList</span> (3.50)
    </li>
    <li><span class="declared function">ExfInterlockedRemoveHeadList</span> (3.50)
    </li>
    <li><span class="declared function">Exfi386InterlockedDecrementLong</span> (3.50)
    </li>
    <li><span class="declared function">Exfi386InterlockedExchangeUlong</span> (3.50)
    </li>
    <li><span class="declared function">Exfi386InterlockedIncrementLong</span> (3.50)
    </li>
    <li><span class="undocumented function">Exi386InterlockedDecrementLong</span> 
    (3.10) </li>
    <li><span class="undocumented function">Exi386InterlockedExchangeUlong</span> 
    (3.10) </li>
    <li><span class="undocumented function">Exi386InterlockedIncrementLong</span> 
    (3.10) </li>
    <li><span class="function">InterlockedCompareExchange</span> (4.0) </li>
    <li><span class="function">InterlockedDecrement</span> (3.51) </li>
    <li><span class="function">InterlockedExchange</span> (3.51) </li>
    <li><span class="function">InterlockedExchangeAdd</span> (4.0) </li>
    <li><span class="function">InterlockedIncrement</span> (3.51) </li>
    <li><span class="undocumented function">Ke386CallBios</span> (3.10) </li>
    <li><span class="minwin function">Ke386IoSetAccessProcess</span> (3.10) </li>
    <li><span class="minwin function">Ke386QueryIoAccessMap</span> (3.10) </li>
    <li><span class="minwin function">Ke386SetIoAccessMap</span> (3.10) </li>
    <li><span class="undocumented function">KeGetPreviousMode</span> (3.10) </li>
    <li><span class="undocumented function">KeI386AbiosCall</span> (3.10) </li>
    <li><span class="undocumented function">KeI386AllocateGdtSelectors</span> (3.10)
    </li>
    <li><span class="undocumented function">KeI386Call16BitCStyleFunction</span> 
    (4.0) </li>
    <li><span class="undocumented function">KeI386Call16BitFunction</span> (3.51)
    </li>
    <li><span class="undocumented function">KeI386FlatToGdtSelector</span> (3.10)
    </li>
    <li><span class="undocumented function">KeI386GetLid</span> (3.10) </li>
    <li><span class="undocumented variable">KeI386MachineType</span> (3.10) </li>
    <li><span class="undocumented function">KeI386ReleaseGdtSelectors</span> (3.51)
    </li>
    <li><span class="undocumented function">KeI386ReleaseLid</span> (3.10) </li>
    <li><span class="undocumented function">KeI386SetGdtSelector</span> (3.51)
    </li>
    <li><span class="function">KeInitializeSpinLock</span> (3.10) </li>
    <li><span class="delayed function">KeIsExecutingDpc</span> (3.10) , but starts 
    as x64 export in 6.0 </li>
    <li><span class="undocumented function">
    <a href="../api/ke/profobj/profileinterrupt.htm">KeProfileInterrupt</a></span> 
    (3.10) </li>
    <li><span class="function">KeQueryInterruptTime</span> (5.0) </li>
    <li><span class="function">KeQuerySystemTime</span> (3.10) </li>
    <li><span class="function">KeQueryTickCount</span> (3.10) </li>
    <li><span class="declared variable">KeTickCount</span> (3.50) </li>
    <li><span class="declared function">KefAcquireSpinLockAtDpcLevel</span> (3.50)
    </li>
    <li><span class="delayed function">KefReleaseSpinLockFromDpcLevel</span> (3.50)
    </li>
    <li><span class="undocumented function">Kei386EoiHelper</span> (3.10) </li>
    <li><span class="undocumented function">KiAcquireSpinLock</span> (3.10) </li>
    <li><span class="undocumented function">KiCoprocessorError</span> (3.10)
    </li>
    <li><span class="undocumented function">KiDeliverApc</span> (3.10) </li>
    <li><span class="undocumented function">KiDispatchInterrupt</span> (3.10)
    </li>
    <li><span class="undocumented function">KiEnableTimerWatchdog</span> (5.0)
    </li>
    <li><span class="minwin function">KiIpiServiceRoutine</span> (3.10) </li>
    <li><span class="undocumented function">KiReleaseSpinLock</span> (3.10) </li>
    <li><span class="undocumented function">KiUnexpectedInterrupt</span> (3.10)
    </li>
    <li><span class="undocumented function">Kii386SpinOnSpinLock</span> (3.10)
    </li>
    <li><span class="function">READ_REGISTER_BUFFER_UCHAR</span> (3.10) </li>
    <li><span class="function">READ_REGISTER_BUFFER_ULONG</span> (3.10) </li>
    <li><span class="function">READ_REGISTER_BUFFER_USHORT</span> (3.10) </li>
    <li><span class="function">READ_REGISTER_UCHAR</span> (3.10) </li>
    <li><span class="function">READ_REGISTER_ULONG</span> (3.10) </li>
    <li><span class="function">READ_REGISTER_USHORT</span> (3.10) </li>
    <li><span class="function">RtlConvertLongToLargeInteger</span> (3.10) </li>
    <li><span class="function">RtlConvertUlongToLargeInteger</span> (3.10) </li>
    <li><span class="obsolete function">RtlEnlargedIntegerMultiply</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlEnlargedUnsignedDivide</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlEnlargedUnsignedMultiply</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlExtendedIntegerMultiply</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlExtendedLargeIntegerDivide</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlExtendedMagicDivide</span> (3.10)
    </li>
    <li><span class="delayed function">RtlFillMemoryUlong</span> (3.10) </li>
    <li><span class="obsolete function">RtlLargeIntegerAdd</span> (3.10) </li>
    <li><span class="obsolete function">RtlLargeIntegerArithmeticShift</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlLargeIntegerDivide</span> (3.10) </li>
    <li><span class="obsolete function">RtlLargeIntegerNegate</span> (3.10) </li>
    <li><span class="obsolete function">RtlLargeIntegerShiftLeft</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlLargeIntegerShiftRight</span> (3.10)
    </li>
    <li><span class="obsolete function">RtlLargeIntegerSubtract</span> (3.10)
    </li>
    <li><span class="function">RtlUlongByteSwap</span> (5.0) </li>
    <li><span class="function">RtlUlonglongByteSwap</span> (5.0) </li>
    <li><span class="function">RtlUshortByteSwap</span> (5.0) </li>
    <li><span class="function">WRITE_REGISTER_BUFFER_UCHAR</span> (3.10) </li>
    <li><span class="function">WRITE_REGISTER_BUFFER_ULONG</span> (3.10) </li>
    <li><span class="function">WRITE_REGISTER_BUFFER_USHORT</span> (3.10) </li>
    <li><span class="function">WRITE_REGISTER_UCHAR</span> (3.10) </li>
    <li><span class="function">WRITE_REGISTER_ULONG</span> (3.10) </li>
    <li><span class="function">WRITE_REGISTER_USHORT</span> (3.10) </li>
    <li><span class="undocumented function">_CIcos</span> (5.1) </li>
    <li><span class="undocumented function">_CIsin</span> (5.1) </li>
    <li><span class="undocumented function">_CIsqrt</span> (5.1) </li>
    <li><span class="declared function">_abnormal_termination</span> (3.50) </li>
    <li><span class="undocumented function">_alldiv</span> (4.0) </li>
    <li><span class="undocumented function">_alldvrm</span> (5.1) </li>
    <li><span class="undocumented function">_allmul</span> (4.0) </li>
    <li><span class="undocumented function">_alloca_probe</span> (5.1) </li>
    <li><span class="undocumented function">_allrem</span> (4.0) </li>
    <li><span class="undocumented function">_allshl</span> (4.0) </li>
    <li><span class="undocumented function">_allshr</span> (4.0) </li>
    <li><span class="undocumented function">_aulldiv</span> (4.0) </li>
    <li><span class="undocumented function">_aulldvrm</span> (5.1) </li>
    <li><span class="undocumented function">_aullrem</span> (4.0) </li>
    <li><span class="undocumented function">_aullshr</span> (4.0) </li>
    <li><span class="undocumented function">_except_handler2</span> (3.10) </li>
    <li><span class="undocumented function">_except_handler3</span> (5.0) </li>
    <li><span class="undocumented function">_global_unwind2</span> (3.50) </li>
    <li><span class="undocumented function">_local_unwind2</span> (3.10) </li>
  </ul>
  <div class="Footer">
    <p class="Dates">This page was created on 20th April 2009 and was last modified 
    on 25th May 2022. </p>
    <!--webbot bot="Include" U-Include="../../_include/c0922.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5635" -->
  </div>
</div>

</body>

</html>

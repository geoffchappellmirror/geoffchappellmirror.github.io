<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Why Consult Geoff Chappell?</title>
<link rel="stylesheet" type="text/css" href="../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../_styles/document.css">
<script type="text/javascript" src="../_scripts/master.js"></script>
<script type="text/javascript" src="../_scripts/document.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript Header" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43992" -->
<div class="Main">
  <h1>Why Consult Geoff Chappell? </h1>
  <p>The theoretical work behind the Geoff Chappell website is to develop and refine 
  techniques for studying software without its source code, especially as an economical 
  way of getting detailed and reliable answers to questions that might otherwise 
  seem intractable. The practical application is that I direct these techniques 
  at whatever I happen to find interesting about Windows. The commercial application 
  is the solving of <span class="emphasis">your</span> problems of Windows programming.
  </p>
  <p>Look around this website: there are few people anywhere who approach the problem 
  of understanding Windows with such breadth and in such detail. Get that working 
  for you! </p>
  <p>To get my attention directed to your particular needs, consider a
  <a href="mailto:consult@geoffchappell.com?subject=Request%20for%20Consultation">
  formal consultation</a>. Perhaps look first at my (negotiable)
  <a href="fees.htm">fees</a> and even at my few <a href="terms.htm">terms</a>.
  </p>
  <h2>Expectations </h2>
  <p>Of course, Windows is very big. I don’t know everything about it. But in my 
  specialties, the systematic application of reverse engineering means that I’m 
  an expert’s expert. Literally: I have had clients who are themselves being consulted 
  for their expertise. Few others anywhere can be as well prepared for questions 
  in these areas of Windows programming. But even where I haven’t yet looked, few 
  others anywhere could make up the ground as quickly and reliably. </p>
  <p>That’s because I don’t play with trial and error, hoping to
  <span class="emphasis">infer</span> what’s needed. Instead, I reverse-engineer 
  and <span class="emphasis">deduce</span>. </p>
  <p>Reverse engineering is much too much work for a simple problem, of course. 
  But if the problem is innovative enough to take you outside what’s covered clearly 
  and cleanly in the documentation, then my methods not only give you a robust solution 
  but they deliver faster—in some cases very much faster than you’ll have imagined 
  is possible. </p>
  <h3>The Limits of Trial and Error </h3>
  <p>Windows is a huge, sophisticated operating system that is sometimes only vaguely 
  documented and is much too often mis-documented. Interacting with it has in its 
  nature that if what your programmers are attempting is at all tricky then there’s 
  a good chance they spend a lot of time on trial and error, hoping to learn by 
  experiment what does and doesn’t work. Mostly, that does succeed. Computers are 
  intrinsically repetitive. You can go a long way by observing and
  <span class="emphasis">inducing</span>. </p>
  <p>Until you can’t. But even before you hit that brick wall, the effort that you 
  put into trying to infer <span class="emphasis">what</span> to program is not 
  effort that’s going into <span class="emphasis">careful</span> programming. You 
  end up with software that is held together by the proverbial rubber bands and 
  that nobody’s confident of, but which still takes ages to develop. If you’re lucky, 
  the bugs don’t bite you back too hard or too soon. </p>
  <p>Like any handicraft, even on a commercial scale, software by nature cannot 
  be perfect, but your software will be better from the start if you secure the 
  close attention of someone with a record of <span class="emphasis">deducing</span> 
  how the code it interacts with really works. </p>
  <h3>The Gains from Reverse Engineering </h3>
  <p>A lot of Windows code has been analysed here as speculative research. This 
  analysis is a sort of debugging in advance. </p>
  <p>Before you even imagine a specific problem of programming Windows, let alone 
  before it costs you something in the real world, I may already have done much 
  of the work required for knowing how to solve the problem, if not for its actual 
  solution. </p>
  <p>Many questions that you, your programmers or your lawyers may have about Windows 
  can be answered quickly and authoritatively—and if the information needed for 
  the answer is not already known, it may be within relatively easy reach. </p>
  <p>For many programming problems, you can get reliable advice on a design that 
  you expect your own programmers to implement or you can get a solution coded efficiently 
  for you. </p>
  <div class="Footer">
    <!--webbot bot="Include" U-Include="../_include/c9723.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 1997-2023. Geoff Chappell. All rights reserved.  
<a href="../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="43861" -->
  </div>
</div>

</body>

</html>

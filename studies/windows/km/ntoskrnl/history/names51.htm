<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Kernel Exports Added for Version 5.1</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/km.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="63592" -->
<div class="Main">
  <h1>Kernel Exports Added for Version 5.1 </h1>
  <p>This page lists the 247 exports that were newly exported from the Windows kernel 
  for the original Windows XP. </p>
  <p>Also listed are six additions for Windows XP SP1, 19 for Windows XP SP2 and 
  four for Windows XP SP3. A handful of other exports perhaps were designed for 
  version 5.1, and are mostly dated to Windows XP by Microsoft, but were back-fitted 
  to Windows 2000 such that they appear first, in order of version number, as additions 
  for Windows 2000 SP3. </p>
  <h2>Conventions </h2>
  <!--webbot bot="Include" U-Include="_include/conventions.htm" TAG="BODY" startspan -->

<p>To convey more detail with less text, the page relies heavily on several types 
of shortcut. </p>

<!--webbot bot="Include" endspan i-checksum="31086" -->
  <!--webbot bot="Include" U-Include="_include/variables.htm" TAG="BODY" startspan -->

<p>The first is that although a few of the kernel’s exports are of variables rather 
than functions, I tend to talk of all as functions, hoping that no confusion will 
be caused by the loose terminology. The variables are indicated by a parenthetical 
“data” after their first appearance in the Functions column. </p>

<!--webbot bot="Include" endspan i-checksum="20269" -->
  <h3>Colours </h3>
  <!--webbot bot="Include" U-Include="../../_include/colours.htm" TAG="BODY" startspan -->

<p>Documentation status is summarised by colour coding. <span class="NoScript">(Had 
the website’s scripts run as expected, then hovering over any colour-coded text 
would produce a tooltip that shows why the text is coloured.) </span>
<span class="ScriptOnly">(To decode a colour, hover for a tooltip.) </span></p>
<p>Functions that appear to be completely undocumented are
<span class="undocumented">highlighted yellow</span>. If a function is documented 
now but was not documented in the first contemporaneous Device Driver Kit (DDK), 
Windows Driver Kit (WDK) or Installable File System (IFS) Kit, then it is
<span class="delayed">shaded yellow</span> to retain some of its previous status. 
If a function is documented as reserved or obsolete, it is
<span class="reserved">shaded red</span> or <span class="obsolete">shaded grey</span>, 
respectively. Otherwise, functions that have their own non-trivial documentation 
are left with no background colour. </p>
<p>Many undocumented functions and some variables have C-language declarations in 
one or another header file. To show them as being not completely undocumented they 
are <span class="declared">shaded orange</span>, except for one special case. Some 
declarations are known only from “minwin” headers that Microsoft published in early 
editions of the WDK for Windows 10 which seem since to have been withdrawn. These 
are <span class="minwin">highlighted orange</span> to indicate that public disclosure 
even of the declaration was exceptional. </p>

<!--webbot bot="Include" endspan i-checksum="57742" -->
  <h3>Actual Availability </h3>
  <!--webbot bot="Include" U-Include="_include/exporthistory.htm" TAG="BODY" startspan -->

<p>The default understanding is that exporting continues for all later versions, 
and in both the x86 and x64 builds. Exceptions are sketched in a column headed Export 
History. </p>

<!--webbot bot="Include" endspan i-checksum="64859" -->
  <!--webbot bot="Include" U-Include="_include/x86only.htm" TAG="BODY" startspan -->

<p>The description “x86 only” means that the function is not exported from any known 
x64 build but is exported from the x86 build of at least some version that has an 
x64 build. If it had already ceased as an export before Windows Server 2003 SP1, 
the “x86 only” is left unstated. </p>

<!--webbot bot="Include" endspan i-checksum="43035" -->
  <!--webbot bot="Include" U-Include="_include/discontinued.htm" TAG="BODY" startspan -->

<p>That a function is “discontinued in” some version means that the function is 
exported up to but not including the stated version and not in any later version 
unless “restored”. </p>

<!--webbot bot="Include" endspan i-checksum="31363" -->
  <h3>Documented Availability </h3>
  <!--webbot bot="Include" U-Include="_include/docdeclhistory.htm" TAG="BODY" startspan -->

<p>It’s nothing but fair to note that the majority of these functions were not documented 
immediately. Even more were then or later said to require later versions. These 
misrepresentations of actual availability show also in C-language declarations for 
the functions’ use in programming. Conveying these differences between what the 
kernel exported and what Microsoft presented for drivers to import is the concern 
of columns headed Documentation History and Declaration History. </p>
<p class="alert">Conventions still in development! </p>

<!--webbot bot="Include" endspan i-checksum="26474" -->
  <h2>Tabulation </h2>
  <!--webbot bot="Include" U-Include="_include/tabulation.htm" TAG="BODY" startspan -->

<p>As much as I might like to condense into one table as much as might be imagined 
is possible to summarise about all these functions’ history of availability both 
in the binary and according to the documentation and headers, many functions both 
individually and in groups demand additional explanation in text. I therefore break 
the tabulation according to Microsoft’s scheme of prefixes for separate areas of 
functionality within the otherwise monolithic kernel. Each function has its own 
row in one table, but please be sure to check for explanatory text before and (more 
usually) after the table. </p>

<!--webbot bot="Include" endspan i-checksum="36034" -->
  <p>Just more than 40% of these new exports for version 5.1 are nowadays documented. 
  For most, the documentation states (correctly) that the function is “available 
  on Microsoft Windows XP and later”. Six functions are documented only as being 
  reserved, without even saying which versions have them. Another four are documented 
  as obsolete, again without saying which versions have them. A small proportion 
  of the new functions are undocumented but with declarations in one or another 
  of the WDK header files. Declarations, both of these and the documented functions, 
  are mostly for Windows XP and higher. For well more than a decade nearly a half 
  of the new functions had neither documentation nor declaration—and then Microsoft 
  published declarations for nearly all of them, only in the first two releases 
  of the WDK for Windows 10, all too plausibly only by oversight. </p>
  <h3><span class="functionprefix">Cc</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">CcMdlWriteAbort</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Cm</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">CmRegisterCallback</span> </td>
        <td>before 5.2 SP1, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">CmUnRegisterCallback</span> </td>
        <td>before 5.2 SP1, <span class="declared">declared</span> </td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Dbg</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">DbgPrintEx</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">DbgQueryDebugFilterState</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">DbgSetDebugFilterState</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Ex</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">ExAcquireRundownProtection</span>
        </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">ExAcquireRundownProtectionEx</span>
        </td>
        <td>starts in SP2 </td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span>; <br>
        documented start is 5.2 </td>
      </tr>
      <tr>
        <td><span class="minwin function">ExGetCurrentProcessorCounts</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExGetCurrentProcessorCpuUsage</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">ExInitializeRundownProtection</span>
        </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">ExReInitializeRundownProtection</span>
        </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">ExReleaseRundownProtection</span>
        </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">ExReleaseRundownProtectionEx</span>
        </td>
        <td>starts in SP2 </td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span>; <br>
        documented start is 5.2 </td>
      </tr>
      <tr>
        <td><span class="delayed function">ExRundownCompleted</span> </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed reserved function">ExVerifySuite</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="declared function">ExWaitForRundownProtectionRelease</span>
        </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="undocumented">undocumented</span>; <br>
        before 6.2, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="minwin function">ExfAcquirePushLockExclusive</span>
        </td>
        <td>starts in SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExfAcquirePushLockShared</span> </td>
        <td>starts in SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ExfInterlockedCompareExchange64</span>
        </td>
        <td>x86 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ExfReleasePushLock</span> </td>
        <td>starts in SP2 </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">FsRtl</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">FsRtlCreateSectionForDataScan</span> </td>
        <td>starts in SP3; <br>
        discontinued in 5.2; <br>
        restored in 5.2 SP1 </td>
        <td>in 6.0, documented start is 5.2 SP1; <br>
        since 6.1, documented start is 5.0 SP4 rollup </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="function">FsRtlIncrementCcFastReadNoWait</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlIncrementCcFastReadNotPossible</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlIncrementCcFastReadResourceMiss</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlIncrementCcFastReadWait</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">FsRtlInsertPerFileObjectContext</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="declared">declared</span>; <br>
        documented start is 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlInsertPerStreamContext</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlIsPagingFile</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">FsRtlLookupPerFileObjectContext</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="declared">declared</span>; <br>
        documented start is 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="reserved function">FsRtlLookupPerStreamContextInternal</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlNotifyFilterChangeDirectory</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlNotifyFilterReportChange</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="function">FsRtlRegisterFileSystemFilterCallbacks</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">FsRtlRemovePerFileObjectContext</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="declared">declared</span>; <br>
        documented start is 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlRemovePerStreamContext</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">FsRtlTeardownPerStreamContexts</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
    </tbody>
  </table>
  <p>Some of the File System Run Time Library functions have complicated histories. 
  Chronologically, they are exported first in version 5.1, and are so listed above. 
  According to documentation, they were then back-fitted to an Update Rollup for 
  Windows 2000 SP4. This is not formally a service pack, and would ordinarily fall 
  outside the scope of this study, yet it plainly was intended as more than a hotfix.
  </p>
  <p>The <span class="function">FsRtlCreateSectionForDataScan</span> function is 
  even more complicated. It might better be regarded as first exported for version 
  5.2 SP1 and then back-fitted to late builds of both version 5.0 and version 5.1. 
  For version 5.0, this again means the Update Rollup for Windows 2000 SP4. For 
  version 5.1, documentation cites a Filter Manager Rollup for Windows XP SP2. The 
  first actual service pack of version 5.1 that has the function is then SP3, as 
  noted above. Note anyway that Microsoft took its time over having its documentation 
  tell of this function’s support in any of these updates. </p>
  <p>Though <span class="reserved function">FsRtlLookupPerStreamContextInternal</span> 
  is documented as reserved as early as the WDK for Windows Vista, it is the essence 
  of the <span class="macro">FsRtlLookupPerStreamContext</span> macro which is documented 
  as starting with the Update Rollup for Windows 2000 SP4. </p>
  <p>The <span class="function">FsRtlRegisterFileSystemFilterCallbacks</span> function 
  is unusual in that its documented support in the Update Rollup for Windows 2000 
  SP4 is withdrawn. </p>
  <h3><span class="functionprefix">Hal</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">HalExamineMBR</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="function">HalExamineMBR</span> function has earlier history, 
  back to version 3.51, as a macro that calls through the
  <span class="declared variable">HalDispatchTable</span> to an externally provided 
  handler or to a default in the kernel. The earliest known documentation is in 
  the DDK for Windows NT 4.0. Whether the documentation is of the macro or the exported 
  function, it is notable for a long-standing error: not until version 6.2 does 
  it give the correct type for the <span class="argument">Buffer</span> argument.
  </p>
  <h3>One Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="undocumented function">HeadlessDispatch</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Interlocked</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <tbody>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
      <tr>
        <td><span class="function">InterlockedPopEntrySList</span> </td>
        <td>x86 only </td>
        <td>SDK </td>
      </tr>
      <tr>
        <td><span class="function">InterlockedPushEntrySList</span> </td>
        <td>x86 only </td>
        <td>SDK </td>
      </tr>
    </tbody>
  </table>
  <p>The “sequenced interlocked list” had been introduced to kernel-mode programming 
  in version 4.0. It was as first a creature of the Executive, supported by macros 
  and functions whose names each have the Ex prefix. This early support required 
  that a spin lock be supplied even if the implementation could make do without 
  it. With version 5.1 requiring the <span class="instruction">cmpxchg8b</span> 
  instruction, the implementation certainly could make do without a spin lock and 
  the programming of drivers that would run only on Windows XP and higher was therefore 
  simplified: these new functions that don’t have the Ex prefix don’t require a 
  spin lock. What matters here for a survey of documentation status is that they 
  were documented not in the DDK but in the Platform Software Development Kit (SDK) 
  for user-mode programming—and there they have stayed. Though they plainly always 
  have been intended as documented, they seem never to have been documented explicitly 
  for use in kernel mode. Even after Microsoft reorganised its programming documentation 
  in terms of header files in 2018, these functions are skipped from the many pages 
  for WDM.H and NTDDK.H. </p>
  <h3><span class="functionprefix">Io</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="undocumented function">IoAssignDriveLetters</span> </td>
        <td>discontinued in 6.1; <br>
        (also from HAL before 6.1) </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoAttachDeviceToDeviceStackSafe</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCreateDisk</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCreateFileSpecifyDeviceObjectHint</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCreateStreamFileObjectEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCsqInitialize</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCsqInsertIrp</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCsqRemoveIrp</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoCsqRemoveNextIrp</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoEnumerateDeviceObjectList</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoEnumerateRegisteredFiltersList</span> </td>
        <td>starts in SP3; <br>
        discontinued in 5.2; <br>
        restored in 5.2 SP1 </td>
        <td>documented start is 5.0 SP4 rollup and 5.2 SP1 </td>
        <td>since 6.0, declared start is 5.2 SP1 </td>
      </tr>
      <tr>
        <td><span class="declared function">IoForwardAndCatchIrp</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoForwardIrpSynchronously</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoFreeErrorLogEntry</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoGetDeviceAttachmentBaseRef</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoGetDiskDeviceObject</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoGetLowerDeviceObject</span> </td>
        <td>&nbsp;</td>
        <td>documented start is 5.0 SP4 rollup </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">IoInitializeCrashDump</span>
        </td>
        <td>starts in SP3; <br>
        discontinued in 5.2 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoQueryFileDosDeviceName</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoReadDiskSignature</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="obsolete function">IoReadPartitionTable</span> </td>
        <td>also from HAL since 3.10 </td>
        <td>before 5.1, documented (HAL) </td>
        <td>deprecated </td>
      </tr>
      <tr>
        <td><span class="function">IoReadPartitionTableEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoSetCompletionRoutineEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="obsolete function">IoSetPartitionInformation</span>
        </td>
        <td>also from HAL since 3.10 </td>
        <td>before 5.1, documented (HAL) </td>
        <td>deprecated </td>
      </tr>
      <tr>
        <td><span class="function">IoSetPartitionInformationEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoSetStartIoAttributes</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoSetSystemPartition</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoValidateDeviceIoControlAccess</span> </td>
        <td>starts in SP1 </td>
        <td>documented start is 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoVerifyPartitionTable</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoVolumeDeviceToDosName</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIDeviceObjectToInstanceName</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIExecuteMethod</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIHandleToInstanceName</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIOpenBlock</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIQueryAllData</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIQueryAllDataMultiple</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIQuerySingleInstance</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMIQuerySingleInstanceMultiple</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="function">IoWMISetNotificationCallback</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMISetSingleInstance</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">IoWMISetSingleItem</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="obsolete function">IoWritePartitionTable</span> </td>
        <td>also from HAL since 3.10 </td>
        <td>before 5.1, documented (HAL) </td>
        <td>deprecated </td>
      </tr>
      <tr>
        <td><span class="function">IoWritePartitionTableEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="undocumented function">IoAssignDriveLetters</span> ,
  <span class="obsolete function">IoReadPartitionTable</span>,
  <span class="obsolete function">IoSetPartitionInformation</span> and
  <span class="obsolete function">IoWritePartitionTable</span> functions are original 
  exports from the HAL. They are both the oldest and the first HAL exports to have 
  got moved in some sense to the kernel. Redistribution of their functionality had 
  been under way for some years. Version 3.51 had the HAL’s implementations call 
  through the kernel’s <span class="declared variable">HalDispatchTable</span>, 
  typically (though not necessarily) reaching default handlers in the kernel. Version 
  5.1 simply elevated those default handlers from internal routines to exported 
  functions. </p>
  <p>The several functions such as <span class="function">IoCsqInitialize</span> 
  for cancel-safe IRP queues are among those that are new for Windows XP and which 
  the DDK for Windows XP unremarkably documents as being new for Windows XP. Microsoft’s 
  formula is worth noting, however: “only available as part of the operating system 
  on Windows XP and later.” Use of these cancel-safe queues is sufficiently important 
  that Microsoft made it available to new drivers that find themselves running on 
  Windows 2000. Instead of calling the exported functions, drivers that anticipate 
  this execution can instead call routines from a statically linked library, csq.lib, 
  which Microsoft continued to distribute up to and including the WDK for Windows 
  7. Note the implication that these cancel-safe queues were functionality that 
  Microsoft realised programmers far and wide could have been coding for themselves 
  all along, and should have been as standard practice, but hadn’t been. </p>
  <p>The <span class="function">IoEnumerateRegisteredFiltersList</span> function 
  is another that may better be regarded as an export added for version 5.2 SP1 
  but then back-fitted to late builds of versions 5.0 and 5.1. Documentation starts 
  the back-fit to version 5.0 with the Update Rollup for Windows 2000 SP4. Very 
  plausibly, its back-fit to version 5.1 starts with the Filter Manager Rollup for 
  Windows XP SP2, but no known documentation even catches that the function is exported 
  from Windows XP SP3. </p>
  <p>The <span class="function">IoValidateDeviceIoControlAccess</span> function 
  seems similarly to have been introduced to nudge programmers towards some discipline. 
  It is available to new drivers on old Windows versions if they call the function 
  as a routine in a statically linked library, wdmsec.lib, instead of importing 
  it from the kernel. There is practical merit to using the library in a driver 
  that wants to tolerate being loaded on a Windows XP that predates the function’s 
  availability as an export from the kernel, but the documentation is incorrect 
  about when this availablity starts. To the DDK for Windows XP, the function is 
  “only available as part of the operating system on Windows .NET Server and later 
  operating systems.” Later kits continue the (slight and no-doubt well-intended) 
  misrepresentation except that they know what name was settled on for marketing.
  </p>
  <h3><span class="functionprefix">Kd</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="minwin function">KdPowerTransition</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Ke</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">KeAcquireInStackQueuedSpinLockAtDpcLevel</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeAcquireInterruptSpinLock</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeAreApcsDisabled</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">KeCapturePersistentThreadState</span>
        </td>
        <td>starts in SP1 </td>
      </tr>
      <tr>
        <td><span class="function">KeDeregisterBugCheckReasonCallback</span>
        </td>
        <td>starts in SP1 </td>
      </tr>
      <tr>
        <td><span class="function">KeFlushQueuedDpcs</span> </td>
        <td>starts in SP2 </td>
      </tr>
      <tr>
        <td><span class="function">KeGetRecommendedSharedDataAlignment</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">KeIsAttachedProcess</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeQueryRuntimeThread</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeRegisterBugCheckReasonCallback</span> </td>
        <td>starts in SP1 </td>
      </tr>
      <tr>
        <td><span class="function">KeReleaseInStackQueuedSpinLockFromDpcLevel</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">KeReleaseInterruptSpinLock</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="reserved function">KeRemoveByKeyDeviceQueueIfBusy</span>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">KeRemoveSystemServiceTable</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="function">KeFlushQueuedDpcs</span> function was documented 
  in the DDK for Windows XP (and declared in both NTDDK.H and WDM.H) even while 
  the kernel had it only as an internal routine. It does not become an export until 
  SP2. </p>
  <h3><span class="functionprefix">Mm</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed reserved function">MmAddVerifierThunks</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="function">MmAdvanceMdl</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">MmAllocateMappingAddress</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">MmCommitSessionMappedView</span> </td>
        <td>starts in SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">MmFreeMappingAddress</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">MmIsVerifierEnabled</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span>; <br>
        before 6.2, <span class="reserved">reserved</span> </td>
      </tr>
      <tr>
        <td><span class="function">MmMapLockedPagesWithReservedMapping</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="reserved function">MmMarkPhysicalMemoryAsBad</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="reserved function">MmMarkPhysicalMemoryAsGood</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">MmPrefetchPages</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">MmProtectMdlSystemAddress</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">MmUnmapReservedMapping</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>In the WDK for Windows Vista and again for Windows 7,
  <span class="declared function">MmIsVerifierEnabled</span> is on a list of Memory 
  Manager Routines that are “reserved for system use.” The WDK for Windows 8 drops 
  the function from this list. The reason is not known: unlike the slightly older
  <span class="delayed function">MmIsDriverVerifying</span>, it is not dropped from 
  the list for being newly documented. It just returns to being a function that’s 
  declared but undocumented. </p>
  <p>The <span class="reserved function">MmMarkPhysicalMemoryAsBad</span> and
  <span class="reserved function">MmMarkPhysicalMemoryAsGood</span> functions have 
  never been anything but reserved, but they are slightly notable in that their 
  declarations in the DDK for Windows XP were removed for subsequent versions.
  </p>
  <h3><span class="functionprefix">Nt</span> Functions </h3>
  <!--webbot bot="Include" U-Include="_include/nt.htm" TAG="BODY" startspan -->

<p>The functions whose names begin with <span class="functionprefix">Nt</span> correspond 
closely to functions whose names have the <span class="functionprefix">Zw</span> 
prefix instead (see below). Put aside some general points about how the two differ—see
<a href="../../../win32/ntdll/api/native.htm">The Native API</a>— and documentation 
of an <span class="functionprefix">Nt</span> function is to a large extent implied 
by documentation of the corresponding <span class="functionprefix">Zw</span> function.
</p>
<p>Though this correspondence will have been understood well enough by all competent 
kernel-mode programmers, Microsoft didn’t make it explicit until some time after 
releasing the WDK for Windows Vista. This is here taken as an intention to leave 
the <span class="functionprefix">Nt</span> functions <span class="undocumented">
undocumented</span> (if not <span class="declared">declared</span>) before version 
6.1. </p>
<p>Documentation in the WDK for Windows 7 gives each
<span class="functionprefix">Nt</span> function its own page and directs attention 
to the page for the corresponding <span class="functionprefix">Zw</span> function. 
The <span class="functionprefix">Zw</span> documentation might then be treated as 
counting for both, except that the <span class="functionprefix">Nt</span> documentation 
warns expressly “Do not call this routine from kernel-mode code.” This is here taken 
as documenting the <span class="functionprefix">Nt</span> functions as
<span class="reserved">reserved</span> in version 6.1 (certainly for kernel-mode 
use, which is this survey’s focus). </p>
<p>Microsoft loosened the text significantly for Windows 8 to note that the
<span class="functionprefix">Nt</span> and <span class="functionprefix">Zw</span> 
versions “can behave differently” and to refer to a page of guidance. These changes, 
though slight, are taken here as formally permitting the
<span class="functionprefix">Nt</span> functions’ kernel-mode use, such that they 
must now be counted as documented (though <span class="delayed">delayed</span>).
</p>
<p>While each <span class="functionprefix">Nt</span> function is documented only 
by reference to the <span class="functionprefix">Zw</span> function, whatever documented 
availability Microsoft gives for the latter is here taken as intended also for the 
former. In the headers, however, the two functions necessarily each have their own 
declaration (if they have any), and so any “declared start” shown below is specifically 
for the <span class="functionprefix">Nt</span> function. </p>

<!--webbot bot="Include" endspan i-checksum="43821" -->
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="undocumented function">NtMakePermanentObject</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">NtOpenProcessTokenEx</span> </td>
        <td>before 6.1, <span class="declared">declared</span>; <br>
        in 6.1, <span class="reserved">reserved</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">NtOpenThread</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">NtOpenThreadToken</span> </td>
        <td>&nbsp;</td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="delayed function">NtOpenThreadTokenEx</span> </td>
        <td>before 6.1, <span class="declared">declared</span>; <br>
        in 6.1, <span class="reserved">reserved</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">NtQueryInformationThread</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">NtShutdownSystem</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">NtTraceEvent</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="undocumented function">NtQueryInformationThread</span> function 
  is mentioned in a comment in NTDDK.H from at least as far back as the Windows 
  NT 3.51 DDK, presumably for its export from NTDLL.DLL in user mode, but has never 
  yet been declared for use in programming. </p>
  <h3><span class="functionprefix">Ob</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">ObCloseHandle</span> </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="undocumented">undocumented</span>; <br>
        before 6.3, <span class="declared">declared</span>; <br>
        documented start is 5.0 </td>
        <td>since 6.2, declared start is 6.1 </td>
      </tr>
      <tr>
        <td><span class="minwin function">ObCreateObjectType</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ObDereferenceSecurityDescriptor</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ObIsDosDeviceLocallyMapped</span> </td>
        <td>starts in SP3; <br>
        discontinued in 5.2; <br>
        restored in 6.0 </td>
        <td>&nbsp;</td>
        <td>declared start is 6.0 </td>
      </tr>
      <tr>
        <td><span class="minwin function">ObLogSecurityDescriptor</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ObReferenceSecurityDescriptor</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ObSetHandleAttributes</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ObSetSecurityObjectByPointer</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="delayed function">ObCloseHandle</span> function has got caught 
  in some sort of tug-of-war between the documentation and the headers. Perhaps 
  its documentation was squeezed into the WDK for Windows 8 too late to get it declared 
  in a header. Someone took some care to save programmers some small inconvenience 
  by documenting that the function “is not declared in a header file” and even to 
  present a declaration to copy-and-paste. This declaration, like the documentation, 
  would have it that the function starts in version 5.0. When a declaration did 
  get into a header in the very next WDK, i.e., for Windows 8.1, it was made conditional 
  on building for at least Windows 7. Whoever revised the documentation seems to 
  have anticipated use by drivers running on older Windows and amended the declaration 
  in the documentation to support all target operating systems older than Windows 
  7. </p>
  <h3><span class="functionprefix">Po</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="declared function">PoQueueShutdownWorkItem</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PoRequestShutdownEvent</span> </td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The DDK for Windows XP and again for Windows Server 2003 declares
  <span class="minwin function">PoRequestShutdownEvent</span> in both NTDDK.H and 
  WDM.H. Then the declaration disappears. Put this aside as not quite ancient history 
  and the function would now count as undocumented except for the presumably accidental 
  disclosure of NTOSP.H. </p>
  <h3><span class="functionprefix">Ps</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="minwin function">PsChargeProcessNonPagedPoolQuota</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsChargeProcessPagedPoolQuota</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">PsChargeProcessPoolQuota</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">PsDereferenceImpersonationToken</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">PsDereferencePrimaryToken</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetContextThread</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">PsGetCurrentProcess</span> </td>
        <td>&nbsp;</td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentProcessSessionId</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">PsGetCurrentThread</span> </td>
        <td>&nbsp;</td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentThreadPreviousMode</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentThreadStackBase</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetCurrentThreadStackLimit</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetJobLock</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetJobSessionId</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetJobUIRestrictionsClass</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">PsGetProcessCreateTimeQuadPart</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="undocumented">undocumented</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessDebugPort</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessExitProcessCalled</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">PsGetProcessExitStatus</span> </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="undocumented">undocumented</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">PsGetProcessId</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessImageFileName</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessInheritedFromUniqueProcessId</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessJob</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessPeb</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessPriorityClass</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessSectionBaseAddress</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessSecurityPort</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessSessionId</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessWin32Process</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetProcessWin32WindowStation</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetThreadFreezeCount</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetThreadHardErrorsAreDisabled</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">PsGetThreadId</span> </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="undocumented">undocumented</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetThreadProcess</span> </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="undocumented">undocumented</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">PsGetThreadProcessId</span> </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="undocumented">undocumented</span>; <br>
        before 2015-2018, <span class="declared">declared</span>; <br>
        documented start is 6.0 </td>
        <td>declared start is 5.2 </td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetThreadSessionId</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetThreadTeb</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsGetThreadWin32Thread</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsIsProcessBeingDebugged</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">PsIsSystemThread</span> </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsIsThreadImpersonating</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">PsRemoveCreateThreadNotifyRoutine</span>
        </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">PsRemoveLoadImageNotifyRoutine</span>
        </td>
        <td>&nbsp;</td>
        <td>before 5.2 SP1, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsReturnProcessNonPagedPoolQuota</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsReturnProcessPagedPoolQuota</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsRevertThreadToSelf</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsSetContextThread</span> </td>
        <td>starts in SP1 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">PsSetJobUIRestrictionsClass</span>
        </td>
        <td>discontinued in 6.2 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsSetProcessPriorityClass</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsSetProcessSecurityPort</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsSetProcessWin32Process</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsSetProcessWindowStation</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsSetThreadHardErrorsAreDisabled</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">PsSetThreadWin32Thread</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="function">PsDereferenceImpersonationToken</span> and
  <span class="function">PsDereferencePrimaryToken</span> function have earlier 
  history, at least back to the NTIFS.H from the Windows 2000 IFS Kit, as macros.
  </p>
  <p>The <span class="function">PsGetCurrentProcess</span> function has always been 
  documented, i.e., right from the DDK for Windows NT 3.1, but not until version 
  5.1 does the kernel actually export it. In all versions, it is defined by macro 
  as an alias of the exported <span class="delayed function">IoGetCurrentProcess</span>. 
  The latter was at first just an implementation detail: it is not documented until 
  the DDK for Windows NT 4.0. As exported functions in version 5.1 and higher, the 
  two have the same address. </p>
  <p>The story is similar for <span class="function">PsGetCurrentThread</span>, 
  but slightly different. It has always been documented. It’s just not an exported 
  function before version 5.1. It is instead defined by macro as
  <span class="delayed function">KetGetCurrentThread</span> but with a change of 
  type for the return value. The macro was dropped by the WDK for Windows 7. </p>
  <h3><span class="functionprefix">Rtl</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="3">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">RtlAddAccessAllowedAceEx</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.1, <span class="undocumented">undocumented</span>; <br>
        documented start is 5.0 </td>
        <td>declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlClearBit</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlCreateSystemVolumeInformationFolder</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlDeleteElementGenericTableAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlEnumerateGenericTableAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlEnumerateGenericTableLikeADirectory</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlEnumerateGenericTableWithoutSplayingAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlGetElementGenericTableAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">RtlGetSetBootStatusData</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlGetVersion</span> </td>
        <td>&nbsp;</td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlHashUnicodeString</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlInitializeGenericTableAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlInsertElementGenericTableAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlInsertElementGenericTableFullAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlInt64ToUnicodeString</span> </td>
        <td>&nbsp;</td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="undocumented function">RtlIntegerToUnicode</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4AddressToStringA</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4AddressToStringExA</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4AddressToStringExW</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4AddressToStringW</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4StringToAddressA</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4StringToAddressExA</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4StringToAddressExW</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv4StringToAddressW</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6AddressToStringA</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6AddressToStringExA</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6AddressToStringExW</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6AddressToStringW</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6StringToAddressA</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6StringToAddressExA</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6StringToAddressExW</span> </td>
        <td>starts in SP2 </td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIpv6StringToAddressW</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="undocumented">undocumented</span>; <br>
        documented only in SDK; <br>
        documented start is 6.0; <br>
        in 6.0, not declared </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlIsGenericTableEmptyAvl</span> </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">RtlLockBootStatusData</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlLookupElementGenericTableAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlLookupElementGenericTableFullAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">RtlMapSecurityErrorToNtStatus</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlNumberGenericTableElementsAvl</span>
        </td>
        <td>&nbsp;</td>
        <td>before 6.2, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlRandomEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlSetBit</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">RtlTestBit</span> </td>
        <td>&nbsp;</td>
        <td>before 6.0, <span class="declared">declared</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">RtlTimeToElapsedTimeFields</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">RtlUnlockBootStatusData</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">RtlVerifyVersionInfo</span> </td>
        <td>&nbsp;</td>
        <td>since 6.1 revision, documented start is 5.0 </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
    </tbody>
  </table>
  <p>That the <span class="delayed function">RtlAddAccessAllowedAceEx</span> function, 
  once it is documented at all in the WDK, is said to start with Windows 2000 has 
  two obvious candidates for explanation. Its presence in the kernel as an internal 
  routine from as long ago as version 5.0 found its way into the documentation. 
  It is exported from NTDLL.DLL starting with version 5.0, and the WDK documentation, 
  if only of the RTL functions, is doing double duty for kernel mode and user mode.
  </p>
  <p>The <span class="function">RtlGetVersion</span> function is documented in the 
  DDK for Windows 2000 as “the kernel-mode equivalent of the user-mode
  <span class="function">GetVersionEx</span> function.” The
  <span class="function">RtlVerifyVersionInfo</span> function is simlarly “the kernel-mode 
  equivalent of the user-mode <span class="function">VerifyVersionInfo</span>”. 
  Kernel-mode programmers who thought to use either as the new and approved way 
  of learning any sort of Windows version number or of testing for “operating system 
  attributes” will have been unhappy. Both functions are exported from NTDLL in 
  user mode in version 5.0 and both are declared in NTDDK.H as if for kernel-mode 
  programming but neither actually is exported from the kernel. Frustrated programmers 
  may have complained in the right places or Microsoft may simply have noticed the 
  need for correction: for both functions, documentation in the DDK for Windows 
  XP is very clear that “This routine is supported on Windows XP and later”. Years 
  later, this rare but good work came undone as the functions got caught up in Microsoft’s 
  over-zealous exercise in historical revision: a second edition of the WDK for 
  Windows 7 goes back to telling kernel-mode programmers that the functions are 
  “Available in Windows 2000 and later”. </p>
  <p>Also documented in the DDK for Windows 2000 despite being unavailable in kernel 
  mode is <span class="function">RtlInt64ToUnicodeString</span>. Again, version 
  5.0 is the first that has the function as a user-mode export. </p>
  <p>The 16 functions for converting IP addresses to and from text are not formally 
  documented for use in kernel mode, only as user-mode exports from NTDLL. They 
  are declared in IP2STRING.H, which is supplied with every WDK starting with Windows 
  7. A comment at the top is explicit that this header’s declared routines are “callable 
  by both kernel mode code in the executive and user mode code in various NT subsystems.” 
  A reorganisation for Windows 8 places the header in the “shared” subdirectory. 
  Since the functions’ user-mode documentation requires Windows Vista and the first 
  known user-mode documentation is in the SDK for Windows Vista, they must be ruled 
  as having been undocumented before Windows Vista even for user-mode programming.
  </p>
  <h3><span class="functionprefix">Se</span> Functions and Variable </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="declared function">SeAuditingFileEventsWithContext</span>
        </td>
        <td>starts in SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">SeAuditingHardLinkEventsWithContext</span>
        </td>
        <td>starts in SP2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">SeFilterToken</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">SeTokenIsWriteRestricted</span> </td>
        <td>starts in SP2; <br>
        discontinued in 5.2; <br>
        restored in 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared variable">SeTokenObjectType</span> (data) </td>
        <td>&nbsp;</td>
        <td>before 6.1, <span class="undocumented">undocumented</span>; <br>
        indirectly documented </td>
      </tr>
    </tbody>
  </table>
  <p>Three <span class="functionprefix">Se</span> functions are first exported from 
  Windows XP SP2, if reckoning by version number. Chronologically, the two that 
  tell of auditing start in version 5.2 and may then have been thought useful enough 
  to back-fit into the next service pack of version 5.1. The story is more complicated 
  for <span class="declared function">SeTokenIsWriteRestricted</span>. Even chronologically, 
  it is first exported from Windows XP SP2 without being taken up for version 5.2.
  </p>
  <p>As with most exported variables, <span class="declared variable">SeTokenObjectType</span> 
  is not itself documented. Starting with the WDK for Windows 7, however, it gets 
  mentioned in the documentation of exported functions such as
  <span class="function">ObReferenceObjectByHandle</span> from its being intended 
  as an argument. </p>
  <h3><span class="functionprefix">Ver</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="function">VerSetConditionMask</span> </td>
        <td>documented only in SDK </td>
        <td>since 6.0, declared start is 5.0 </td>
      </tr>
    </tbody>
  </table>
  <p>Unlike <span class="function">RtlGetVersion</span> and
  <span class="function">RtlVerifyVersionInfo</span> (see above),
  <span class="function">VerSetConditionMask</span> never has been documented explicitly 
  for use in kernel mode. </p>
  <h3><span class="functionprefix">Vf</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="minwin function">VfFailDeviceNode</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">VfFailDriver</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">VfFailSystemBIOS</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">VfIsVerificationEnabled</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Wmi</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="undocumented function">WmiFlushTrace</span> </td>
        <td>discontinued in 6.0 </td>
      </tr>
      <tr>
        <td><span class="undocumented function">WmiGetClock</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">WmiQueryTrace</span> </td>
        <td>discontinued in 6.0 </td>
      </tr>
      <tr>
        <td><span class="function">WmiQueryTraceInformation</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">WmiStartTrace</span> </td>
        <td>discontinued in 6.0 </td>
      </tr>
      <tr>
        <td><span class="undocumented function">WmiStopTrace</span> </td>
        <td>discontinued in 6.0 </td>
      </tr>
      <tr>
        <td><span class="function">WmiTraceMessage</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">WmiTraceMessageVa</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="undocumented function">WmiUpdateTrace</span> </td>
        <td>discontinued in 6.0 </td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">XIP</span> Function </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="undocumented function">XIPDispatch</span> </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3><span class="functionprefix">Zw</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Documentation History </th>
        <th>Declaration History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="minwin function">ZwAddBootEntry</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwAssignProcessToJobObject</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwCreateJobObject</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwDeleteBootEntry</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwEnumerateBootEntries</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwIsProcessInJob</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwOpenJobObject</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">ZwOpenProcessTokenEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">ZwOpenThreadTokenEx</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwQueryBootEntryOrder</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwQueryBootOptions</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="delayed function">ZwQueryFullAttributesFile</span> </td>
        <td>before 6.1, <span class="undocumented">undocumented</span>; <br>
        before 6.1 revision, documented start is 5.0 </td>
        <td>declared start is 5.0 </td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwQueryInformationJobObject</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwQueryInformationThread</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="declared function">ZwSaveKeyEx</span> </td>
        <td>before 6.2, <span class="undocumented">undocumented</span> </td>
        <td>declared start is 6.1 </td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwSetBootEntryOrder</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwSetBootOptions</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwSetInformationJobObject</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwTerminateJobObject</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="minwin function">ZwTranslateFilePath</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <h3>C Run-Time (CRT) Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Export History </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">_CIcos</span> </td>
        <td>x86 only </td>
        <td>before 2012, <span class="undocumented">undocumented</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">_CIsin</span> </td>
        <td>x86 only </td>
        <td>before 2012, <span class="undocumented">undocumented</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">_CIsqrt</span> </td>
        <td>x86 only </td>
        <td>before 2012, <span class="undocumented">undocumented</span> </td>
      </tr>
      <tr>
        <td><span class="function">_alldvrm</span> </td>
        <td>x86 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">_alloca_probe</span> </td>
        <td>x86 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">_aulldvrm</span> </td>
        <td>x86 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td><span class="function">_vsnwprintf</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>Calls to the <span class="delayed function">_CIcos</span>,
  <span class="delayed function">_CIsin</span> and
  <span class="delayed function">_CIsqrt</span> functions are generated by sufficiently 
  early versions of Microsoft’s compiler when fed code that would call the CRT library’s
  <span class="function">cos</span>, <span class="function">sin</span> and
  <span class="function">sqrt</span> functions, respectively. The first formal documentation 
  I know of them is that each has its own page in the <span class="citation">Alphabetical 
  Function Reference</span> of the <span class="citation">C Run-Time Library Reference</span> 
  for Visual Studio 2012. Documentation for Visual Studio 2015 moved them to the
  <span class="citation">Internal CRT Globals and Functions</span>. </p>
  <p>The <span class="function">_alldvrm</span> and <span class="function">_aulldvrm</span> 
  functions are generated by Microsoft’s 32-bit compiler when fed code that seeks 
  (in sufficient proximity) both the quotient and remainder from dividing signed 
  or unsigned 64-bit integers. Microsoft has long published assembly-language source 
  files for these functions along with other CRT library source code in the Visual 
  Studio package. If you believe that source code is everything, then these functions 
  are as fully documented as can be. Yet formal documentation is surprisingly scarce. 
  For instance, within the <span class="citation">C Run-Time Library Reference</span> 
  for Visual Studio 2015 (roughly contemporaneous with the original Windows 10) 
  they don’t rate a mention in either the <span class="citation">Alphabetical Function 
  Reference</span> or the list of <span class="citation">Internal CRT Globals and 
  Functions</span>. </p>
  <p>Microsoft’s CRT library has long implemented the <span class="function">_alloca_probe</span> 
  function as an alias for the <span class="function">_chkstk</span> function. Microsoft’s 
  compilers generate a call to the latter from the prologue code of any function 
  that seeks too much space for local variables. Again, the assembly-language source 
  code is published and so the function can hardly be regarded as undocumented. 
  And again, formal documentation is surprisingly scarce. </p>
  <h3><span class="functionprefix">vDbg</span> Functions </h3>
  <table class="Functions">
    <colgroup>
      <col class="Name"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Function </th>
        <th>Documentation History </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="delayed function">vDbgPrintEx</span> </td>
        <td>before 6.0, <span class="declared">declared</span> </td>
      </tr>
      <tr>
        <td><span class="delayed function">vDbgPrintExWithPrefix</span> </td>
        <td>before 6.1, <span class="declared">declared</span> </td>
      </tr>
    </tbody>
  </table>
  <h2>Discontinued </h2>
  <p>Version 5.1 stops exporting a few functions. For each, the version in parentheses 
  tells when the function was first exported: </p>
  <ul>
    <li><span class="obsolete function">ExAcquireResourceExclusive</span> (3.10)
    </li>
    <li><span class="obsolete function">ExDeleteResource</span> (3.10) </li>
    <li><span class="obsolete function">ExInitializeResource</span> (3.10) </li>
    <li><span class="obsolete function">ExReleaseResourceForThread</span> (3.10)
    </li>
    <li><span class="undocumented function">FsRtlInsertFilterContext</span> (5.0)
    </li>
    <li><span class="undocumented function">FsRtlLookupFilterContextInternal</span> 
    (5.0) </li>
    <li><span class="undocumented function">FsRtlRemoveFilterContext</span> (5.0)
    </li>
    <li><span class="undocumented function">FsRtlTeardownFilterContexts</span> (5.0)
    </li>
    <li><span class="declared function">KeSetSwapContextNotifyRoutine</span> (4.0)
    </li>
    <li><span class="declared function">KeSetThreadSelectNotifyRoutine</span> (4.0)
    </li>
    <li><span class="minwin function">ObDeleteCapturedInsertInfo</span> (5.0), but 
    see note </li>
    <li><span class="declared function">ObGetObjectPointerCount</span> (3.50)
    </li>
    <li><span class="undocumented function">PsSetNewKSecDD</span> (5.0 SP4) </li>
  </ul>
  <p>Unusually, several had been documented, albeit as obsolete. </p>
  <p>Version 5.1 discontinues the <span class="minwin function">ObDeleteCapturedInsertInfo</span> 
  function only to have version 5.2 restore it as an export. This may be an illusion 
  due to this survey’s reckoning by increasing version number. Chronologically, 
  the function was introduced for version 5.2. Its listing for a lower version is 
  then explained as back-fitting into the last service pack of Windows 2000, but 
  this still leaves as some mystery why the function was not back-fitted to any 
  service pack of Windows XP. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 20th April 2009 and was last modified 
    on 26th <a href="../../../../../new/22/05.htm">May 2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../_include/c0922.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5635" -->
  </div>
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>PP_NPAGED_LOOKASIDE_NUMBER</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>PP_NPAGED_LOOKASIDE_NUMBER </h1>
  <p>The kernel has long provided <a href="../../../api/ex/lookasid/index.htm">lookaside 
  lists</a> for efficient management of memory for the sort of fixed-size structures 
  that the kernel itself and many kernel-mode drivers find themselves allocating 
  and freeing over and over. Some such structures see such heavy use that starting 
  with Windows 2000 the kernel isn’t content with one lookaside list for each type 
  of structure but keeps as many more as there are processors. </p>
  <p>For each processor, the kernel has a <span class="struct">
  <a href="../kprcb.htm">KPRCB</a></span>. In version 5.0 and higher, the
  <span class="struct">KPRCB</span> has an array, named <span class="member">PPLookasideList</span>, 
  of 0x10 <span class="struct"><a href="../ntosdef/pp_lookaside_list.htm">PP_LOOKASIDE_LIST</a></span> structures. Each is a pair 
  of pointers, the first to a lookaside list that is specific to that processor, 
  the second to one that is shared among all processors (like any other). The
  <span class="enum">PP_NPAGED_LOOKASIDE_NUMBER</span> enumeration (formally
  <span class="enum">_PP_NPAGED_LOOKASIDE_NUMBER</span>) indexes this 
  array. For each type of structure that is treated to this per-processor optimisation, 
  allocations are sought first from the per-processor list, for speed, else from 
  the shared list. Allocations are freed to the per-processor list for easy re-allocation, 
  except that if the list has reached its capacity the allocation is instead freed 
  to the shared list. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="enum">PP_NPAGED_LOOKASIDE_NUMBER</span> enumeration is not 
  documented. Not even a declaration is known in any kit for device driver programming.
  </p>
  <p>Microsoft’s names for the enumeration’s values are known from type information 
  in public symbol files for the kernel in Windows XP and higher. 
  </p>
  <p>Though public symbol files for Windows 2000 (including its service packs) 
  do not show the enumeration, they do name internal routines
  <span class="internal routine">ExAllocateFromPPNPagedLookasideList</span> and
  <span class="internal routine">ExFreeToPPNPagedLookasideList</span>. 
  Inspection of the binaries shows that these each take the <span class="enum">
  PP_NPAGED_LOOKASIDE_NUMBER</span> as their first argument. These plausibly 
  were replaced as soon as Windows XP, which slightly reworks the definition of 
  the <span class="struct">PP_LOOKASIDE_LIST</span>.&nbsp; If these weren’t 
  already defined as inline routines Also known from 
  the public symbol files, but only starting with Windows 8, is that Microsoft manages 
  the lists through inline routines </p>
  <pre class="source">PVOID ExAllocateFromPPLookasideList (PP_NPAGED_LOOKASIDE_NUMBER);</pre>
  <pre class="source">VOID ExFreeToPPLookasideList (PP_NPAGED_LOOKASIDE_NUMBER, PVOID, KPRCB *);</pre>
  <p>&nbsp;</p>
  <h2>Values &nbsp;</h2>
  <table class="Enum">
    <colgroup>
      <col class="Value"><col class="Name"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0 </td>
        <td><span class="constant">LookasideSmallIrpList</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>1 </td>
        <td><span class="constant">LookasideMediumIrpList</span> </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td>1 (5.0 to 6.0); <br>
        2 </td>
        <td><span class="constant">LookasideLargeIrpList</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>2 (5.0 to 6.0); <br>
        3 </td>
        <td><span class="constant">LookasideMdlList</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>3 (5.0 to 6.0); <br>
        4 </td>
        <td><span class="constant">LookasideCreateInfoList</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>4 (5.0 to 6.0); <br>
        5 </td>
        <td><span class="constant">LookasideNameBufferList</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>5 (5.0 to 6.0); <br>
        6 </td>
        <td><span class="constant">LookasideTwilightList</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>6 (5.0 to 6.0); <br>
        7 </td>
        <td><span class="constant">LookasideCompletionList</span> </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>7 (6.0); <br>
        8 </td>
        <td><span class="constant">LookasideScratchBufferList</span> </td>
        <td>6.0 and higher </td>
      </tr>
      <tr>
        <td>7 (5.0 to 5.2); <br>
        8 (6.0); <br>
        9 </td>
        <td><span class="constant">LookasideMaximumList</span> </td>
        <td>5.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <div class="Footer">
    <p class="Dates">This page was created on 27th
    <a href="../../../../../../../new/17/05.htm">May 2017</a> from material that 
    was first published on 14th November 2016. It was last modified on 7th September 
    2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

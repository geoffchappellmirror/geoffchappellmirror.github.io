<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>ESILO</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="main">
  <!--webbot bot="Include" U-Include="../../../../_include/sketch.htm" TAG="BODY" startspan -->

<div class="Header">
  <p class="alert">SKETCH OF HOW RESEARCH MIGHT CONTINUE AND RESULTS BE PRESENTED
  </p>
</div>

<!--webbot bot="Include" endspan i-checksum="5204" -->
  <h1>ESILO </h1>
  <p>The <span class="struct">ESILO</span> (formally <span class="struct">_ESILO</span>) 
  arguably has the highest profile of all kernel-mode structures for which no type 
  information was ever disclosed in public symbol files. Note the past tense: the
  <span class="struct">ESILO</span> is known only in the original Windows 10.
  </p>
  <h2>The Silo Object </h2>
  <p>The high profile is that the <span class="struct">ESILO</span> truly is an 
  object in the sense of being managed by the Object Manager such that it can be 
  exposed through a <span class="type">HANDLE</span> with access rights. Indeed, 
  this apparently seemed important enough at the time that the access rights are 
  defined in WINNT.H for user-mode programming: </p>
  <table class="Enum">
    <colgroup>
      <col class="Value"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00000001 </td>
        <td><span class="constant">SILO_OBJECT_ASSIGN_PROCESS</span> </td>
      </tr>
      <tr>
        <td>0x00000002 </td>
        <td><span class="constant">SILO_OBJECT_SET_ATTRIBUTES</span> </td>
      </tr>
      <tr>
        <td>0x00000004 </td>
        <td><span class="constant">SILO_OBJECT_QUERY</span> </td>
      </tr>
      <tr>
        <td>0x00000008 </td>
        <td><span class="constant">SILO_OBJECT_TERMINATE</span> </td>
      </tr>
      <tr>
        <td>0x00000010 </td>
        <td><span class="constant">SILO_OBJECT_SET_SECURITY_ATTRIBUTES</span>
        </td>
      </tr>
    </tbody>
  </table>
  <p>These definitions even persist to the WINNT.H for the 1511 release, by which 
  time there is no silo object that can be created, opened, closed or otherwise 
  accessed through a handle. </p>
  <p>Even for the original release of Windows 10, the silo object’s existence was 
  precarious. Notably, it is subordinate to the job object (represented by the
  <span class="struct"><a href="ejob/index.htm">EJOB</a></span> structure). The 
  only known way to create a silo object is through the <span class="constant">JobObjectCreateSilo</span> 
  information class (0x23) of the <span class="function">NtSetInformationJobObject</span> 
  function. There is no input or output for this information class. It just creates 
  a silo for the given job object to hold as its <span class="member">Container</span>, 
  not because the silo in any sense contains the job but because setting a silo 
  object into a job object is the way that Microsoft elevates the long-standing 
  job object from managing a collection of processes into acting like what the rest 
  of the world had for some time been calling a container. </p>
  <p>For some suggestion that the silo object was already on the way out even for 
  the original Windows 10, see that the corresponding WINNT.H also defines a
  <span class="enum">SILOOBJECTINFOCLASS</span>, as if to fit the pattern of an 
  information class to pass to native API functions that allow for querying and 
  setting properties of the silo object. Historians who care to look may find that 
  such functions, perhaps named something like <span class="function">NtQueryInformationSiloObject</span>, 
  exist in pre-release builds of Windows 10. What shows in the actual release is 
  that no native API functions work with silo objects and the information classes that 
  WINNT.H defines for <span class="enum">SILOBOJECTINFOCLASS</span> 
  are already all folded into the long-standing <span class="enum">JOBOBJECTINFOCLASS</span>.
  </p>
  <h2>Layout </h2>
  <p>The <span class="struct">ESILO</span> is 0x98 or 0x0110 bytes in 32-bit and 
  64-bit Windows 10, respectively. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition"><col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>unknown <span class="struct">KEVENT</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>0x18 </td>
        <td>
        <pre class="source">HANDLE SiloIdNumber;</pre>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x14 </td>
        <td>0x20 </td>
        <td>unknown <span class="struct">LIST_ENTRY</span> </td>
        <td>links all silos; <br>
        list head is internal variable </td>
      </tr>
      <tr>
        <td>0x1C </td>
        <td>0x30 </td>
        <td>unknown <span class="struct">ERESOURCE</span> </td>
        <td>next in <span class="struct">SILO_CONTEXT</span> </td>
      </tr>
      <tr>
        <td>0x54 </td>
        <td>0x98 </td>
        <td>
        <pre class="source">ESILO *ParentSilo;</pre>
        </td>
        <td>next in <span class="struct">SILO_CONTEXT</span> </td>
      </tr>
      <tr>
        <td>0x58 </td>
        <td>0xA0 </td>
        <td>unknown <span class="struct">LIST_ENTRY</span> </td>
        <td>links silos that share parent; <br>
        list head is at 0x70 and 0xC8 in parent </td>
      </tr>
      <tr>
        <td>0x60 </td>
        <td>0xB0 </td>
        <td>
        <pre class="source">ULONG NumberOfChildSilos;</pre>
        </td>
        <td>next in <span class="struct">SILO_CONTEXT</span> </td>
      </tr>
      <tr>
        <td>0x64 </td>
        <td>0xB4 </td>
        <td>
        <pre class="source">ULONG NumberOfProcesses;</pre>
        </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x68 </td>
        <td>0xB8 </td>
        <td>unknown <span class="struct">LIST_ENTRY</span> </td>
        <td>list head for attached processes; <br>
        links through <span class="member">SiloEntry</span> in
        <span class="struct">EPROCESS</span> </td>
      </tr>
      <tr>
        <td>0x70 </td>
        <td>0xC8 </td>
        <td>unknown <span class="struct">LIST_ENTRY</span> </td>
        <td>list head for child silos; <br>
        links through 0x58 and 0xA0 in children </td>
      </tr>
      <tr>
        <td>0x78 </td>
        <td>0xD8 </td>
        <td>unknown <span class="struct">LIST_ENTRY</span> </td>
        <td>links structures for objects inserted into silo: <br>
        see <span class="function">PsInsertSiloObjectFromJob</span> </td>
      </tr>
      <tr>
        <td>0x80 </td>
        <td>0xE8 </td>
        <td>unknown <span class="struct">KEVENT</span> </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x90 </td>
        <td>0x0100 </td>
        <td>
        <pre class="source"><a href="eserversilo_globals.htm">ESERVERSILO_GLOBALS</a> *ServerSiloGlobals;</pre>
        </td>
        <td>next in <span class="struct">SILO_CONTEXT</span> </td>
      </tr>
      <tr>
        <td>0x94 </td>
        <td>0x0108 </td>
        <td>unknown 32-bit flags </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>For a few members, names and types are proposed above by inferring a correspondence 
  with members of other structures for which Microsoft’s names and types are known 
  with certainty. Notably, when the <span class="struct">
  <a href="../../api/ntpsapi_x/siloobject_basic_information.htm">SILOOBJECT_BASIC_INFORMATION</a></span> 
  structure (defined in WINNT.H) is filled as output for the
  <span class="constant">JobObjectSiloBasicInformation</span> case of
  <span class="function">NtQueryInformationJobObject</span>, the
  <span class="member">SiloIdNumber</span>, <span class="member">NumberOfChildSilos</span> 
  and <span class="member">NumberOfProcesses</span> are copied directly from the
  <span class="struct">ESILO</span> and it’s at least plausible that Microsoft’s 
  programmers use the same names and types on both sides of the equals signs. Confidence 
  can of course not be high. For some caution see that although
  <span class="type">HANDLE</span> is natural for the silo identifier since it is 
  allocated from a handle table, the <span class="struct">
  <a href="../../api/ntexapi/system_root_silo_information.htm">SYSTEM_ROOT_SILO_INFORMATION</a></span> 
  that is the output from the <span class="constant">SystemRootSiloInformation</span> 
  case of <span class="function"><a href="../../../api/ex/sysinfo/query.htm">ZwQuerySystemInformation</a></span> 
  gets the identifier as a <span class="type">ULONG_PTR</span>. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 16th
    <a href="../../../../../../../new/22/07.htm">August 2022</a> and was last modified 
    on 21st August 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c22.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5890" -->
  </div>
</div>

</body>

</html>

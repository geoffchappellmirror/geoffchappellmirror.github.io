<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>HV_HYPERVISOR_INTERFACE</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>HV_HYPERVISOR_INTERFACE </h1>
  <p>The <span class="enum">HV_HYPERVISOR_INTERFACE</span> enumeration (formally
  <span class="enum">_HV_HYPERVISOR_INTERFACE</span>) has Microsoft’s names for 
  values that Microsoft recognises for the “Hypervisor vendor-neutral interface 
  identification” that <span class="instruction">
  <a href="../../../../cpu/cpuid/index.htm">cpuid</a></span> leaf 0x40000001 produces 
  in the <span class="register">eax</span> register. In Microsoft’s packaging of 
  its hypervisor’s <span class="instruction">cpuid</span> output, the
  <span class="enum">HV_HYPERVISOR_INTERFACE</span> is the type of the
  <span class="member">Interface</span> member of the <span class="struct">
  <a href="hv_hypervisor_interface_info.htm">HV_HYPERVISOR_INTERFACE_INFO</a></span> 
  structure. </p>
  <h2>Availability </h2>
  <p>The <span class="enum">HV_HYPERVISOR_INTERFACE</span> is defined in version 
  6.0 and higher. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="enum">HV_HYPERVISOR_INTERFACE</span> enumeration is documented 
  in the Windows Driver Kit (WDK) for Windows 7, which was the last to have documentation 
  included. This kit also provides a C-language definition in the HVGDK.H header 
  file. Except that documentation continued to a separately downloadable package 
  for merging into Visual Studio 2012, later kits have neither the documentation 
  nor the header. </p>
  <p>The enumeration anyway repackages material that Microsoft documents in the
  <a href="https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/reference/tlfs">
  Hypervisor Top-Level Functional Specification</a> (TLFS). If the
  <span class="enum">HV_HYPERVISOR_INTERFACE</span> or its members have become undocumented, 
  it may be just that Microsoft regards their definitions as no more than a convenience 
  for Microsoft’s own programming in the loader and kernel, if not in the hypervisor 
  itself. </p>
  <h2>Values </h2>
  <p>Microsoft’s names for the <span class="enum">HV_HYPERVISOR_INTERFACE</span> 
  enumeration are known from: the C-language definition in the WDK for Windows 7; 
  from type information in symbol files for the kernel in Windows 8.1 (only); and 
  type information in most versions of CLFSMGMT.LIB for Windows Vista through to 
  the 1903 release of Windows 10. I know of no public source beyond Version 1903.
  </p>
  <table class="Enum">
    <colgroup>
      <col class="Value"><col class="Name"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Value </th>
        <th>Name </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x31237648 ('1#vH') </td>
        <td><span class="constant">HvMicrosoftHypervisorInterface</span> </td>
        <td>6.0 and higher </td>
      </tr>
      <tr>
        <td>0x766E6258 ('vnbX') </td>
        <td><span class="constant">HvMicrosoftXboxNanovisor</span> </td>
        <td>1511 and higher </td>
      </tr>
    </tbody>
  </table>
  <h3>Microsoft-Compatible </h3>
  <p>The value <span class="constant">HvMicrosoftHypervisorInterface</span> is necessary 
  since Windows Vista—and as its only use before Windows 8—if the kernel is to prepare 
  at all for being executed under a hypervisor. Without knowing that the hypervisor 
  has this particular Microsoft interface, the kernel doesn’t proceed even as far 
  as writing its operating system identifier to the Model-Specific Register (MSR) 
  0x40000000. </p>
  <p>In Windows 8, getting <span class="constant">HvMicrosoftHypervisorInterface</span> 
  in <span class="register">eax</span> from <span class="instruction">cpuid</span> 
  leaf 0x40000001 also starts to become what the kernel checks for assurance that
  <span class="instruction">cpuid</span> leaves continue to 0x40000002 and beyond. 
  For some purposes, and always in earlier versions, the check is that the 0x80000000 
  bit in <a href="../../../../cpu/cpuid/00000001h/ecx.htm">
  <span class="register">ecx</span> from <span class="instruction">cpuid</span> 
  leaf 1</a> means that <span class="instruction">cpuid</span> leaf 0x40000000 exists 
  and the check for any higher hypervisor leaf is that it’s within the bound provided 
  by <span class="register">eax</span> from leaf 0x40000000. Starting with Windows 
  8.1, the bounds check is regarded as unnecessary for <span class="instruction">
  cpuid</span> leaf 0x40000001 and only if this reveals the
  <span class="constant">HvMicrosoftHypervisorInterface</span> does the kernel trust 
  that hypervisor leaves reach as far as 0x40000005. This appears to be the limit 
  to what’s guaranteed just by the interface. Higher leaves are first meaningful 
  to the kernel for Windows 10 and always require a bounds check. </p>
  <h3>Xbox Nanovisor </h3>
  <p>The first that the kernel is known to recognise any other hypervisor interface 
  than <span class="constant">HvMicrosoftHypervisorInterface</span> is the 1607 
  release of Windows 10, but Microsoft looks to have planned this a little earlier: 
  that Microsoft’s name for this other interface is <span class="constant">HvMicrosoftXboxNanovisor</span> 
  is known from type information in CLFSMGMT.LIB from the Software Development Kit 
  as included in the Enterprise WDK for Version 1511. </p>
  <p>For most purposes, the Xbox Nanovisor is treated as if it is not a hypervisor. 
  This shows most notably in the adaptation of the admittedly undocumented kernel 
  export <span class="function">
  <a href="../../../api/hvilib/hviintel/isanyhypervisorpresent.htm">HviIsAnyHypervisorPresent</a></span>, 
  which now answers yes only if the hypervisor that’s present is not the Xbox Nanovisor.
  </p>
  <div class="Footer">
    <p class="Dates">This page was created on 20th
    <a href="../../../../../../../new/22/10.htm">November 2022</a>. and was last 
    modified on 10th December 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c22.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5890" -->
  </div>
</div>

</body>

</html>

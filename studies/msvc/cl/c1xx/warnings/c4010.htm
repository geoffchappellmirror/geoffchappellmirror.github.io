<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Visual C++ Compiler Warning C4010</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<h1>Visual C++ Compiler Warning C4010 </h1>
<h2>Message Text </h2>
<pre class="output">single-line comment contains line-continuation character</pre>
<h2>Severity </h2>
<p>This is a level 1 warning. </p>
<h2>Circumstances </h2>
<p>A single-line comment is the form of comment that is introduced by two forward 
slashes. The line-continuation character is the backslash, when occurring at the 
end of a line. The interaction between the two is that what counts as the single 
line for the comment may in fact be multiple lines of text, because line continuations 
are resolved before comments. For example, </p>
<pre class="source">int x;  // this single-line comment \
            continues to a second line \
            and even a third</pre>
<p>conforms perfectly with Microsoft’s documentation of the language. (If deduction 
from the <span class="citation">Phases of Translation</span> is too obscure, then 
look at <span class="citation">C++ Comments</span> for the explicit specification 
that single-line comments are terminated by “a new line not immediately preceded 
by a backslash.”) Yet, with only a few exceptions, Microsoft treats each continuation 
of a single-line comment to warning C4010. The fragment above produces the warning 
twice, at the second line and again at the third. </p>
<p>To escape warning C4010 in normal compilation, the line that a single-line comment 
continues to must either </p>
<ul>
  <li>contain nothing but white space </li>
  <li>or begin with any amount of white space, including none, before two forward 
  slashes </li>
</ul>
<p>For example, </p>
<pre class="source">int x;  // this single-line comment contains a \
        // and continues to a second line</pre>
<p>produces no warning, and neither does </p>
<pre class="source">int x;  // this single-line comment ends with a \

int y;</pre>
<p>Note that examination of characters for the meaning of “white space” and “two 
forward slashes” allows for more line continuation, even between the two forward 
slashes. For example, the rather silly </p>
<pre class="source">int x;  // this single-line comment contains a \
        \
        /\
/ and continues to a second line</pre>
<p>produces no warning, since the white space that begins on the second line is 
deemed to continue up to but not including the forward slash on the third, which 
is in turn deemed to be followed immediately by the forward slash at the beginning 
of the fourth line. </p>
<p>It may be as well to note explicitly that warning C4010 is not issued when the 
comment is merely being echoed as preprocessor output, i.e., when the
<span class="switch"><a href="../../cl/options/e.htm">/E</a></span>,
<span class="switch"><a href="../../cl/options/ep.htm">/EP</a></span> or
<span class="switch"><a href="../../cl/options/p.htm">/P</a></span> options are 
active in combination with <span class="switch">
<a href="../../cl/options/c.htm">/C</a></span> and the comment is not in a
<span class="directive">
<a href="../../../language/preprocessor/directives/pragma/index.htm">#pragma</a></span> 
directive. </p>
<h2>Comment </h2>
<p>The thinking behind this warning presumably starts from the problem that single-line 
comments present when the programmer wants that the text of the comment should end 
with a backslash that is actually just a backslash. The following example is at 
least plausible: </p>
<pre class="source">char *ProductDir;       // fully-qualified path, with trailing \
char *ProductSettings;  // filename, relative to ProductDir         // C4010</pre>
<p>but the programmer has not terminated the single-line comment, e.g., by following 
with an empty line, and what is intended as code on the second line is instead hidden 
in the first line’s comment. </p>
<p>To miss some code because the programmer has overlooked an implication of single-line 
comments is arguably worth a severe warning, but against this is that the warning 
is raised on only a suspicion. The slight variation </p>
<pre class="source">char *ProductDir;       // fully-qualified path, with trailing \
                            backslash, all in lower case            // C4010
char *ProductSettings;  // filename, relative to ProductDir</pre>
<p>misses nothing meaningful, and arguably does not deserve any warning, let alone 
at level 1. </p>
<p>A practical effect is that Microsoft has made an explicit feature of the C++ 
language unusable for many, if not most, programmers. To continue single-line comments 
over multiple lines by use of the backslash as a line-continuation character, yet 
compile cleanly, the programmer must disable (or demote) warning C4010. Many would 
be at least a little unsettled at the thought of disabling a level 1 warning as 
their routine practice. Indeed, some may even be prohibited from doing so, e.g., 
by an employer’s coding guide. </p>
<div class="Footer">
  <p class="Dates">This page was created on 21st November 2006 and was last modified 
  on 10th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0609.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2006-2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62552" endspan -->
</div>

</body>

</html>

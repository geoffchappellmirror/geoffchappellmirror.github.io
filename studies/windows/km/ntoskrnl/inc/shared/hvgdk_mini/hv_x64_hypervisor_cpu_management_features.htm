<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES </h1>
  <p>The <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> (formally
  <span class="struct">_HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span>) collects 
  the flags that a Microsoft-compatible hypervisor’s <span class="instruction">
  <a href="../../../../cpu/cpuid/index.htm">cpuid</a></span> leaf 0x40000007 produces 
  in the <span class="register">eax</span>, <span class="register">ebx</span>,
  <span class="register">ecx</span> and <span class="register">edx</span> registers.
  </p>
  <h2>Availability </h2>
  <p>The <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> is 
  new for Windows 10. Though its name suggests a specialisation to the x64 processor, 
  the structure is defined identically for both 32-bit and 64-bit Windows. </p>
  <h3>Access </h3>
  <p>The kernel is not known to expose this structure or any reading of
  <span class="instruction">cpuid</span> leaf 0x40000007 through any interface, 
  documented or not, even in kernel mode. </p>
  <p>For its own use, the kernel ignores <span class="instruction">cpuid</span> 
  leaf 0x40000007 unless the <span class="member">CpuManagement</span> flag is set 
  in the <span class="union"><a href="hv_partition_privilege_mask.htm">HV_PARTITION_PRIVILEGE_MASK</a></span> 
  obtained by reading <span class="instruction">cpuid</span> leaf 0x40000003. Even 
  then, some of the kernel’s use—indeed, all known use before Version 1803—depends 
  on reading and writing the Model-Specific Register (MSR) 0x40000004. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> is 
  not documented. The hypervisor’s <span class="instruction">cpuid</span> implementation 
  is documented in the
  <a href="https://msdn.microsoft.com/en-us/virtualization/hyperv_on_windows/reference/tlfs">
  Hypervisor Top-Level Functional Specification</a> (TLFS). What’s offered today, 
  12th November 2016, as the specification’s most recent version is a PDF that is 
  three years old (version 4.0b, dated August 2013). it extends only to leaf 0x40000006. 
  Revelation of <span class="instruction">cpuid</span> leaf 0x40000007 apparently 
  had to wait for version 5.0a, dated February 2017. Better late than never, perhaps, 
  but the reality behind the superficially fine words of the Microsoft Open Specification 
  Promise is that the Hyper-V implementation, and presumably Microsoft’s use of 
  it to Microsoft’s advantage for Microsoft’s purposes, runs ahead of the documentation 
  that Microsoft opens for general use. </p>
  <p>As for the <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> 
  as Microsoft’s particular expression of the output from
  <span class="instruction">cpuid</span> leaf 0x40000007, disclosure by Microsoft 
  is conspicuously thin. The practical equivalent of a C-language definition is 
  published as type information in symbol files, but in the downloadable packages 
  of public symbols for 32-bit and 64-bit Windows 10, type information for
  <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> appears
  <span class="emphasis">only</span> in the symbol files for URLMON.DLL. This is 
  a user-mode DLL that originated as a component of Internet Explorer (and still 
  follows Internet Explorer’s version numbering). Well might you wonder what this 
  DLL has to do with the hypervisor such that its symbol files have type information 
  for this structure but the kernel’s don’t! Symbol files for URLMON.DLL starting 
  with Windows 8, both in packages of Windows symbols and when downloaded from Microsoft’s 
  public symbol server, happen to be private symbols. This surely was an oversight, 
  but however this disclosure came about, Microsoft stopped it for Version 1803. 
  That URLMON.DLL knows of the <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> 
  is because some URLMON.DLL source code has a <span class="directive">#include</span> 
  for a header named <a href="../../../source/inc/hvgdk_mini.htm">hvgdk_mini.h</a>. 
  Microsoft is known to use his header for its own programming of the Windows kernel 
  but is not known to have ever made it available for use by programmers in general 
  (let alone by the programmers of competing web browsers). </p>
  <p>Type information for the <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> 
  turns out to have been also disclosed in the relatively plain sight of two statically 
  linked libraries. I say relatively plain because even experts tend to overlook 
  that libraries can hold type information. Beware anyway that type information 
  in statically linked libraries does not always match the operating system that 
  the library is supposedly intended for. One of the libraries, named CLFSMGMT.LIB, 
  is among the many that are supplied with the Software Development Kit (SDK) for 
  user-mode programming. Type information for the <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> 
  drops out of this library in Version 2004. The other is more obviously related 
  to hypervisors. It is named KDHV.LIB. Microsoft distributes it among the programming 
  samples in the Debugging Tools for Windows. It has type information for the
  <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> for all 
  versions of Windows 10 at least to the 2004 release. </p>
  <h2>Layout </h2>
  <p>The <span class="struct">HV_X64_HYPERVISOR_CPU_MANAGEMENT_FEATURES</span> is 
  0x10 bytes in both 32-bit and 64-bit Windows. Offsets and definitions below are 
  from type information in symbol files for URLMON.DLL before Version 1803 and then 
  in KDHV.LIB. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">/*  changing bit fields, see below  */</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>
        <pre class="source">/*  bit fields, see below  */</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x08 </td>
        <td>
        <pre class="source">UINT32 ReservedEcx;</pre>
        </td>
        <td>10.0 to 1709 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">/*  bit fields, see below  */</pre>
        </td>
        <td>1803 and higher </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>
        <pre class="source">UINT32 ReservedEdx;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <h3>Offset 0x00 (<span class="register">EAX</span>) </h3>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00000001 </td>
        <td>
        <pre class="source">UINT32 StartLogicalProcessor : 1;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x00000002 </td>
        <td>
        <pre class="source">UINT32 CreateRootVirtualProcessor : 1;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>0x00000004 </td>
        <td>
        <pre class="source">UINT32 PerformanceCounterSync : 1;</pre>
        </td>
        <td>1703 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">&nbsp;</td>
        <td>
        <pre class="source">UINT32 Reserved0 : 29;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td>
        <pre class="source">UINT32 Reserved0 : 28;</pre>
        </td>
        <td>1703 and higher </td>
      </tr>
      <tr>
        <td>0x80000000 </td>
        <td>
        <pre class="source">UINT32 ReservedIdentityBit : 1;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>Though <span class="member">PerformanceCounterSync</span> is defined for the 
  first half-yearly release in 2017, according to the symbol files, it gets no mention 
  in the TLFS version 5.0c dated July 2018. It is listed, however, in version 6.0b 
  dated February 2020. </p>
  <h3>Offset 0x04 (<span class="register">EBX</span>) </h3>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00000001 </td>
        <td>
        <pre class="source">UINT32 ProcessorPowerManagement : 1;</pre>
        </td>
      </tr>
      <tr>
        <td>0x00000002 </td>
        <td>
        <pre class="source">UINT32 MwaitIdleStates : 1;</pre>
        </td>
      </tr>
      <tr>
        <td>0x00000004 </td>
        <td>
        <pre class="source">UINT32 LogicalProcessorIdling : 1;</pre>
        </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>
        <pre class="source">UINT32 Reserved1 : 29;</pre>
        </td>
      </tr>
    </tbody>
  </table>
  <h3>Offset 0x08 (<span class="register">ECX</span>) </h3>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00000001 </td>
        <td>
        <pre class="source">UINT32 RemapGuestUncached : 1;</pre>
        </td>
        <td>1803 and higher </td>
      </tr>
      <tr>
        <td>&nbsp;</td>
        <td>
        <pre class="source">UINT32 ReservedZ2 : 31;</pre>
        </td>
        <td>1803 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>The <span class="member">RemapGuestUncached</span> flag is not only defined 
  in symbol files for the March 2018 release but is used by this version’s kernel. 
  This might be thought early enough to get a mention in the TLFS version 5.0c dated 
  July 2018. It is listed, however, in version 6.0b dated February 2020. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 12th
    <a href="../../../../../../../new/16/11.htm">November 2016</a> and was last 
    modified on 10th <a href="../../../../../../../new/22/12.htm">December 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

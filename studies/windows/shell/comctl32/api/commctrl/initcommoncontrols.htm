<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>InitCommonControls</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="55064" endspan -->
<h1>InitCommonControls </h1>
<h2>Declaration </h2>
<pre class="source">VOID InitCommonControls (VOID);</pre>
<h2>Behaviour </h2>
<p>The function itself does nothing in any known COMCTL32 version. </p>
<p>Nor, it turns out, does this function itself do anything even in the 16-bit COMMCTRL.DLL 
from Windows for Workgroups 3.11. If the ordinal numbering of functions in that 
release is credible as a chronological record of development, then some inferences 
seem plausible. The common controls were first designed such that each has its own 
exported function for creating the control. See in particular
<span class="function">CreateStatusWindow</span> (ordinal 6),
<span class="function">CreateToolbar</span> (ordinal 7) and
<span class="function">CreateUpDownControl</span> (ordinal 16). This design may 
have been thought unwieldy as new controls were developed, prompting the present 
scheme in which COMMCTRL registers window classes and leaves each client to create 
each control directly as a window with a known class name. Though the window classes 
can be registered automatically as COMMCTRL initialises, this scheme has the problem 
that the client must do something to ask that COMMCTRL be loaded. A client who wants 
COMMCTRL only for its common controls might have no COMMCTRL functions to call. 
The scheme works for all only if every client is instructed to load the common controls 
library explicitly or is given a function to call (or reference to import), even 
if the function is implemented trivially. </p>
<p>This 16-bit history persists for COMCTL32, such that <span class="function">InitCommonControls</span> 
(ordinal 17) is a dummy function provided as sufficient means for ensuring that 
COMCTL32 gets loaded, and thence that the window classes for the common controls 
get registered. Calling this dummy function is unnecessary in practice, though not 
for conforming to the design, if any other COMCTL32 function is imported. For the 
indirect purpose of ensuring that COMCTL32 gets loaded, it works just as well to 
import the function’s address as data or to load COMCTL32 explicitly by calling
<span class="function">LoadLibrary</span>. </p>
<p>In recent versions, <span class="function">InitCommonControls</span> cannot safely 
be relied on as an indirect means of registering the window classes for any controls. 
Versions 5.82 and higher vary signficantly in their choice of common controls whose 
window classes get registered automatically at process attachment. In the following 
summary, the controls that get registered during initialisation are described in 
terms of the applicable <span class="function">
<a href="initcommoncontrolsex.htm">InitCommonControlsEx</a></span> flags. </p>
<table>
  <tr>
    <th>Version </th>
    <th>Condition </th>
    <th>Registered Controls </th>
  </tr>
  <tr>
    <td>up to and including 5.81 </td>
    <td>&nbsp;</td>
    <td><span class="constant">ICC_WIN95_CLASSES</span> (0xFF) </td>
  </tr>
  <tr>
    <td>5.82 from Windows XP </td>
    <td>&nbsp;</td>
    <td>all documented controls (0x3FFF) </td>
  </tr>
  <tr>
    <td>5.82 from Windows Server 2003 and higher </td>
    <td>if running in 16-bit process </td>
    <td><span class="constant">ICC_WIN95_CLASSES</span> (0xFF) </td>
  </tr>
  <tr>
    <td>6.0 from Windows XP </td>
    <td>&nbsp;</td>
    <td>all documented controls (0xFFFF) </td>
  </tr>
  <tr>
    <td>6.0 from Windows Server 2003, and higher </td>
    <td>if running in 16-bit process </td>
    <td>all documented controls (0xBFFF) except <span class="constant">ICC_STANDARD_CLASSES</span>
    </td>
  </tr>
</table>
<p>Note in particular that some of the later versions do not register any window 
classes unless executing for a 16-bit process. </p>
<h2>Availability </h2>
<p>The <span class="function">InitCommonControls</span> function is exported by 
name from COMCTL32.DLL in all known versions (3.50 and higher). It is reliably exported 
as ordinal 17. </p>
<p>This function has always been documented, though not always as being trivial.
</p>
<div class="Footer">
  <p class="Dates">This page was created on 30th May 2008 and was last modified 
  on 20th December 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0809.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2008-2009. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="55399" endspan -->
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>The Windows NT 3.1 Kernel’s Source Tree</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/tree.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/tree.js" defer></script>
<script type="text/javascript" src="../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43332" -->
<div class="Main">
  <h1>The Windows NT 3.1 Kernel’s Source Tree </h1>
  <p>From a modern perspective, the compiling and linking of 32-bit code was still 
  very primitive in 1993 when Windows NT 3.1 was released as the first Windows that’s 
  its own operating system. The 32-bit code for the Windows that ran on DOS had 
  plausibly all been written in assembly language. The Device Driver Kit (DDK) for 
  this variety of Windows was still years from acknowledging that 32-bit code for 
  a Virtual Device Driver (VxD) in ring 0 might be written in C. Though the new 
  Windows had a kernel, drivers and applications all in C from the start, the programming 
  support was surely understood as primitive even from the perspective of the time. 
  Notably, whatever capability the 32-bit C compiler yet had for 64-bit arithmetic 
  was so recent that the Windows NT 3.1 kernel is written not to use it and the 
  DDK for Windows NT 3.1 defines <span class="type">LONGLONG</span> and
  <span class="type">ULONGLONG</span> as <span class="type">double</span> for the 
  i386 processor, presumably to get 8-byte types with 8-byte alignment without yet 
  depending on the compiler to have built-in 64-bit integers. </p>
  <p>Something else that looks to have been relatively new in 1993 is the removal 
  of debugging information from the executable to a separate symbol file. Pre-release 
  builds of the Windows NT 3.1 kernel, as can be found on the Internet at websites 
  that preserve what they call abandonware, have the debugging information in the 
  executable as described by the Common Object File Format (COFF). Its removal to 
  a separate file in the released Windows NT 3.1 looks to have been new enough that 
  the .DBG files for both NTOSKRNL.EXE and NTKRNLMP.EXE are too primitive for Microsoft’s 
  linker to dump in any detail: feed them to <span class="command">dumpbin</span>
  <span class="switch">/all</span> and the linker faults with an “Internal error 
  during DumpDebugFile”. Among their problems by modern reckoning is that they have 
  zero for the <span class="member">SectionAlignment</span> in the
  <span class="struct">IMAGE_SEPARATE_DEBUG_HEADER</span> and their
  <span class="struct">IMAGE_DEBUG_DIRECTORY</span> for <span class="constant">IMAGE_DEBUG_TYPE_MISC</span> 
  is misformed. Still, they are easily enough inspected by sight. They can even 
  be edited so that Microsoft’s linker parses them without faulting. </p>
  <p>What inspecting them will get for you most obviously is the matching of Microsoft’s 
  names to the addresses of routines and variables. Of interest here is that the 
  COFF symbol table also has <span class="constant">IMAGE_SYM_CLASS_FILE</span> 
  records for the source files. In these particular .DBG files, the names are observed 
  to be fully qualified for source files in C but only relative for assembly-language 
  source files. For both the debugger and the reverse engineer, it is straightforward 
  to determine which routines and variables are in which source files and to put 
  it all together for a map of where Microsoft had these source files at the time 
  of compilation. </p>
  <p>Thus did Microsoft from the start publish its source tree for the Windows kernel—not 
  the source code or the source files, of course, but the directory structure in 
  which those files were organised. For the tree below, I don’t go as far as showing 
  which routines and variables are in which source files, just the tree of source 
  files in directories. If you browse this page with scripts enabled, then you should 
  be able to expand the branches that interest you and collapse those that don’t.
  </p>
  <div class="Tree">
    <ul>
      <li class="Expanded Branch">D:
      <ul>
        <li class="Expanded Branch">nt
        <ul>
          <li class="Expanded Branch">private
          <ul>
            <li class="Collapsed Branch">crt32nt
            <ul>
              <li class="Branch">convert
              <ul>
                <li>atox.c </li>
                <li>isctype.c </li>
                <li>iswctype.c </li>
                <li>mblen.c </li>
                <li>mbstowcs.c </li>
                <li>mbtowc.c </li>
                <li>tolower.c </li>
                <li>toupper.c </li>
                <li>towlower.c </li>
                <li>towupper.c </li>
                <li>wcstombs.c </li>
                <li>wctomb.c </li>
                <li>xtoa.c </li>
              </ul>
              </li>
              <li class="Branch">hack
              <ul>
                <li>stubs.c </li>
              </ul>
              </li>
              <li class="Branch">misc
              <ul>
                <li>cmiscdat.c </li>
                <li>ctype.c </li>
                <li>nlsdata1.c </li>
              </ul>
              </li>
              <li class="Branch">startup
              <ul>
                <li>crt0fp.c </li>
              </ul>
              </li>
              <li class="Branch">stdio
              <ul>
                <li>_flsbuf.c </li>
                <li>_flswbuf.c </li>
                <li>fputwc.c </li>
                <li>output.c </li>
                <li>snprintf.c </li>
                <li>snwprint.c </li>
                <li>sprintf.c </li>
                <li>vsnprint.c </li>
                <li>woutput.c </li>
              </ul>
              </li>
              <li class="Branch">string
              <ul>
                <li>wcscat.c </li>
                <li>wcschr.c </li>
                <li>wcscmp.c </li>
                <li>wcscspn.c </li>
                <li>wcsicmp.c </li>
                <li>wcslen.c </li>
                <li>wcslwr.c </li>
                <li>wcsncmp.c </li>
                <li>wcsncpy.c </li>
                <li>wcsnicmp.c </li>
                <li>wcsstr.c </li>
                <li>wcsupr.c </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Collapsed Branch">lsa
            <ul>
              <li class="Branch">client
              <ul>
                <li>austub.c </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">ntos (but ntosmp for multi-processor build)
            <ul>
              <li class="Collapsed Branch">brtl
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>debug3.c </li>
                  <li>divlarge.c </li>
                </ul>
                </li>
                <li>assert.c </li>
                <li>bitmap.c </li>
                <li>cnvint.c </li>
                <li>imagedir.c </li>
                <li>ldrreloc.c </li>
                <li>nls.c </li>
                <li>nlsxlat.c </li>
                <li>string.c </li>
                <li>time.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">cache
              <ul>
                <li>cachedat.c </li>
                <li>cachesub.c </li>
                <li>copysup.c </li>
                <li>fssup.c </li>
                <li>lazyrite.c </li>
                <li>logsup.c </li>
                <li>mdlsup.c </li>
                <li>pinsup.c </li>
                <li>vacbsup.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">config
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>init386.c </li>
                </ul>
                </li>
                <li>cmapi.c </li>
                <li>cmapi2.c </li>
                <li>cmboot.c </li>
                <li>cmchek.c </li>
                <li>cmchek2.c </li>
                <li>cmclose.c </li>
                <li>cmconfig.c </li>
                <li>cmcontrl.c </li>
                <li>cmdata.c </li>
                <li>cmdelete.c </li>
                <li>cmgquota.c </li>
                <li>cmhvlist.c </li>
                <li>cmindex.c </li>
                <li>cminit.c </li>
                <li>cmnotify.c </li>
                <li>cmparse.c </li>
                <li>cmparse2.c </li>
                <li>cmquery.c </li>
                <li>cmsavres.c </li>
                <li>cmse.c </li>
                <li>cmsubs.c </li>
                <li>cmsubs2.c </li>
                <li>cmsubs3.c </li>
                <li>cmsysini.c </li>
                <li>cmtrecpy.c </li>
                <li>cmtredel.c </li>
                <li>cmtree.c </li>
                <li>cmworker.c </li>
                <li>cmwrapr.c </li>
                <li>cmwrapr2.c </li>
                <li>hivebin.c </li>
                <li>hivecell.c </li>
                <li>hivechek.c </li>
                <li>hivefree.c </li>
                <li>hiveinit.c </li>
                <li>hiveload.c </li>
                <li>hivemap.c </li>
                <li>hivesum.c </li>
                <li>hivesync.c </li>
                <li>ntapi.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">dbgk
              <ul>
                <li>dbgkport.c </li>
                <li>dbgkproc.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">ex
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>probe.c </li>
                </ul>
                </li>
                <li>dbgctrl.c </li>
                <li>delay.c </li>
                <li>event.c </li>
                <li>eventpr.c </li>
                <li>exinit.c </li>
                <li>handle.c </li>
                <li>harderr.c </li>
                <li>luid.c </li>
                <li>mutant.c </li>
                <li>pool.c </li>
                <li>profile.c </li>
                <li>resource.c </li>
                <li>semphore.c </li>
                <li>sysenv.c </li>
                <li>sysinfo.c </li>
                <li>systime.c </li>
                <li>timer.c </li>
                <li>worker.c </li>
                <li>zone.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">fsrtl
              <ul>
                <li>dbcsname.c </li>
                <li>fastio.c </li>
                <li>faulttol.c </li>
                <li>filelock.c </li>
                <li>filter.c </li>
                <li>fsrtlp.c </li>
                <li>largemcb.c </li>
                <li>name.c </li>
                <li>notify.c </li>
                <li>oplock.c </li>
                <li>stackovf.c </li>
                <li>unc.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">init
              <ul>
                <li>init.c </li>
                <li>ntoskrnl.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">io
              <ul>
                <li>arcsec.c </li>
                <li>create.c </li>
                <li>devctrl.c </li>
                <li>dir.c </li>
                <li>errorlog.c </li>
                <li>fsctrl.c </li>
                <li>internal.c </li>
                <li>iodata.c </li>
                <li>ioinit.c </li>
                <li>iosubs.c </li>
                <li>loadunld.c </li>
                <li>lock.c </li>
                <li>misc.c </li>
                <li>objsup.c </li>
                <li>open.c </li>
                <li>parse.c </li>
                <li>qsea.c </li>
                <li>qsfs.c </li>
                <li>qsinfo.c </li>
                <li>read.c </li>
                <li>report.c </li>
                <li>write.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">kd
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>kdcmsup.c </li>
                  <li>kdcpuapi.c </li>
                  <li>kdreboot.c </li>
                  <li>kdtrap.c </li>
                </ul>
                </li>
                <li>kdapi.c </li>
                <li>kdbreak.c </li>
                <li>kdcomio.c </li>
                <li>kddbgio.c </li>
                <li>kdinit.c </li>
                <li>kdlock.c </li>
                <li>kdmove.c </li>
              </ul>
              </li>
              <li class="Expanded Branch">ke
              <ul>
                <li class="Expanded Branch">i386
                <ul>
                  <li>abiosc.c </li>
                  <li>allproc.c (only in multi-processor build) </li>
                  <li>apcuser.c </li>
                  <li>biosc.c </li>
                  <li>dmpstate.c </li>
                  <li>exceptn.c </li>
                  <li>flushtb.c </li>
                  <li>gdtsup.c </li>
                  <li>i386init.c </li>
                  <li>intobj.c </li>
                  <li>iopm.c </li>
                  <li>kernlini.c </li>
                  <li>ldtsup.c </li>
                  <li>mpipi.c </li>
                  <li>thredini.c </li>
                  <li>trapc.c </li>
                  <li>vdm.c </li>
                </ul>
                </li>
                <li>apcobj.c </li>
                <li>apcsup.c </li>
                <li>balmgr.c </li>
                <li>bugcheck.c </li>
                <li>config.c </li>
                <li>debug.c </li>
                <li>devquobj.c </li>
                <li>dpcobj.c </li>
                <li>dpcsup.c </li>
                <li>eventobj.c </li>
                <li>kernldat.c </li>
                <li>kiinit.c </li>
                <li>miscc.c </li>
                <li>mutexobj.c </li>
                <li>mutntobj.c </li>
                <li>procobj.c </li>
                <li>profobj.c </li>
                <li>raisexcp.c </li>
                <li>reqint.c </li>
                <li>semphobj.c </li>
                <li>statsobj.c </li>
                <li>thredobj.c </li>
                <li>thredsup.c </li>
                <li>timerobj.c </li>
                <li>timersup.c </li>
                <li>wait.c </li>
                <li>waitsup.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">krtl
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>context.c </li>
                  <li>exdsptch.c </li>
                  <li>raisests.c </li>
                </ul>
                </li>
                <li>acledit.c </li>
                <li>eballoc.c </li>
                <li>environ.c </li>
                <li>error.c </li>
                <li>gen8dot3.c </li>
                <li>gentable.c </li>
                <li>heap.c </li>
                <li>ldrdebug.c </li>
                <li>ldrrsrc.c </li>
                <li>message.c </li>
                <li>prefix.c </li>
                <li>random.c </li>
                <li>regutil.c </li>
                <li>rtlassig.c </li>
                <li>rtlexec.c </li>
                <li>sertl.c </li>
                <li>splay.c </li>
                <li>stktrace.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">lpc
              <ul>
                <li>lpcclose.c </li>
                <li>lpccompl.c </li>
                <li>lpcconn.c </li>
                <li>lpccreat.c </li>
                <li>lpcinit.c </li>
                <li>lpclistn.c </li>
                <li>lpcpriv.c </li>
                <li>lpcquery.c </li>
                <li>lpcqueue.c </li>
                <li>lpcrecv.c </li>
                <li>lpcreply.c </li>
                <li>lpcsend.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">mm
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>data386.c </li>
                  <li>debugsup.c </li>
                  <li>hypermap.c </li>
                  <li>init386.c </li>
                  <li>probewrt.c </li>
                </ul>
                </li>
                <li>acceschk.c </li>
                <li>addrsup.c </li>
                <li>allocpag.c </li>
                <li>allocvm.c </li>
                <li>creasect.c </li>
                <li>deleteva.c </li>
                <li>extsect.c </li>
                <li>flushbuf.c </li>
                <li>flushsec.c </li>
                <li>forksup.c </li>
                <li>freevm.c </li>
                <li>iosup.c </li>
                <li>lockvm.c </li>
                <li>mapcache.c </li>
                <li>mapview.c </li>
                <li>miglobal.c </li>
                <li>mmfault.c </li>
                <li>mminit.c </li>
                <li>mmquota.c </li>
                <li>mmsup.c </li>
                <li>modwrite.c </li>
                <li>pagfault.c </li>
                <li>pfndec.c </li>
                <li>pfnlist.c </li>
                <li>procsup.c </li>
                <li>protect.c </li>
                <li>querysec.c </li>
                <li>queryvm.c </li>
                <li>readwrt.c </li>
                <li>sectsup.c </li>
                <li>shutdown.c </li>
                <li>sysload.c </li>
                <li>sysptes.c </li>
                <li>umapview.c </li>
                <li>vadtree.c </li>
                <li>wrtfault.c </li>
                <li>wslist.c </li>
                <li>wsmanage.c </li>
                <li>wstree.c </li>
                <li>zeropage.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">ob
              <ul>
                <li>obclose.c </li>
                <li>obcreate.c </li>
                <li>obdir.c </li>
                <li>obhandle.c </li>
                <li>obinit.c </li>
                <li>obinsert.c </li>
                <li>oblink.c </li>
                <li>obquery.c </li>
                <li>obref.c </li>
                <li>obse.c </li>
                <li>obtype.c </li>
                <li>obwait.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">ps
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>kulookup.c </li>
                  <li>psctx386.c </li>
                  <li>psldt.c </li>
                  <li>psvdm.c </li>
                </ul>
                </li>
                <li>create.c </li>
                <li>pscid.c </li>
                <li>psctx.c </li>
                <li>psdelete.c </li>
                <li>psimpers.c </li>
                <li>psinit.c </li>
                <li>psopen.c </li>
                <li>psquery.c </li>
                <li>psquota.c </li>
                <li>psspnd.c </li>
                <li>security.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">raw
              <ul>
                <li>cleanup.c </li>
                <li>close.c </li>
                <li>create.c </li>
                <li>fileinfo.c </li>
                <li>fsctrl.c </li>
                <li>rawdisp.c </li>
                <li>rawinit.c </li>
                <li>readwrit.c </li>
                <li>structsup.c </li>
                <li>volinfo.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">se
              <ul>
                <li>accessck.c </li>
                <li>adtinit.c </li>
                <li>adtlog.c </li>
                <li>adtvars.c </li>
                <li>capture.c </li>
                <li>privileg.c </li>
                <li>rmaudit.c </li>
                <li>rmlogon.c </li>
                <li>rmmain.c </li>
                <li>rmvars.c </li>
                <li>seassign.c </li>
                <li>seastate.c </li>
                <li>seaudit.c </li>
                <li>seclient.c </li>
                <li>seglobal.c </li>
                <li>seinit.c </li>
                <li>semethod.c </li>
                <li>sep.c </li>
                <li>sepaudit.c </li>
                <li>subject.c </li>
                <li>token.c </li>
                <li>tokenadj.c </li>
                <li>tokendup.c </li>
                <li>tokenopn.c </li>
                <li>tokenqry.c </li>
                <li>tokenset.c </li>
              </ul>
              </li>
              <li class="Collapsed Branch">vdm
              <ul>
                <li class="Branch">i386
                <ul>
                  <li>rdwr.c </li>
                  <li>strtexec.c </li>
                  <li>vdmentry.c </li>
                  <li>vdmfault.c </li>
                  <li>vdminit.c </li>
                  <li>vdmnpx.c </li>
                  <li>vdmprint.c </li>
                </ul>
                </li>
                <li>vdm.c </li>
              </ul>
              </li>
            </ul>
            </li>
          </ul>
          </li>
        </ul>
        </li>
      </ul>
      </li>
      <li class="Collapsed Branch">i386
      <ul>
        <li>abiosa.asm </li>
        <li>biosa.asm </li>
        <li>clockint.asm </li>
        <li>cpu.asm </li>
        <li>cpuid.asm </li>
        <li>ctxswap.asm </li>
        <li>debug2.asm </li>
        <li>emv86.asm </li>
        <li>emxcptn.asm </li>
        <li>evpair.asm </li>
        <li>exsup.asm </li>
        <li>i386pcr.asm </li>
        <li>instemul.asm </li>
        <li>int.asm </li>
        <li>intrlock.asm </li>
        <li>intsup.asm </li>
        <li>ioaccess.asm </li>
        <li>kdstr.asm </li>
        <li>largeint.asm </li>
        <li>ldtsup2.asm </li>
        <li>lpcmove.asm </li>
        <li>memmove.asm </li>
        <li>memset.asm </li>
        <li>movemem.asm </li>
        <li>newsysbg.asm </li>
        <li>procstat.asm </li>
        <li>raise.asm (see note) </li>
        <li>spindbg.asm </li>
        <li>spinlock.asm </li>
        <li>splocks.asm </li>
        <li>stkwalk.asm </li>
        <li>stricmp.asm </li>
        <li>strlwr.asm </li>
        <li>strncpy.asm </li>
        <li>strnicmp.asm </li>
        <li>strstr.asm </li>
        <li>strupr.asm </li>
        <li>sysstubs.asm </li>
        <li>systable.asm </li>
        <li>threadbg.asm </li>
        <li>timindex.asm </li>
        <li>trap.asm </li>
        <li>vdmmisc.asm </li>
        <li>vdmop0f.asm </li>
        <li>vdmoprnd.asm </li>
        <li>xcptmisc.asm </li>
      </ul>
      </li>
    </ul>
  </div>
  <p>Presumably, the i386 directory for assembly-language files is in each case 
  a subdirectory of one of the many subdirectories of D:\nt\private\ntos, but although 
  the particular subdirectories for most might be inferred confidently, I don’t 
  see how to do so for all, or for any except with information from elsewhere (whether 
  assumed or known), and so I stick just to the names as recorded in the symbol 
  files. </p>
  <p>Two files are named only as i386\raise.asm. They are distinct. They each define 
  only one routine: <span class="internal routine">ExRaiseException</span> and
  <span class="internal routine">RtlRaiseException</span>. These do eventually become 
  exported functions but in version 3.10 they are internal routines. Almost certainly, 
  these assembly-language source files are in the ex and krtl subdirectories.
  </p>
  <p>For source files in C, the symbol files provide full pathnames. They look to 
  be broadly in two sets. Very many are in a subtree that is specifically for the 
  kernel. More than a few others, notably those for the C Run Tme (CRT), look to 
  be shared with other modules, possibly even for execution in user mode. Of the 
  source files that are specifically for the kernel, all but one contribute to both 
  the single-processor and multi-processor kernel. How these source files are compiled 
  for the variant kernels is unclear. To go from the pathnames alone, each exists 
  in two places, one somewhere under d:\nt\private\ntos, the other in the same place 
  but under d:\nt\private\ntosmp instead. It’s not credible that the two are maintained 
  independently. One, if not both, is surely a copy made just for the build. Later 
  versions, certainly as soon as version 3.51, are known to compile each source 
  file at the one location, under a subdirectory named ntos, to produce object files 
  in different subtrees for single-processor and multi-processor builds. For an 
  example, put aside the complication of processor-specific source files, such as 
  seen above in subdirectories named i386. Whatever directory
  <span class="placeholder">source</span>.c is in has subdirectories named um and 
  mp. The source file is built from the subdirectory as ..\<span class="placeholder">source</span>.c 
  to produce an object file objfre\i386\<span class="placeholder">source</span>.obj. 
  Presumably, this scheme was yet to be devised when version 3.10 was built. The 
  makefile in the Windows NT 3.1 DDK allows only for object files in subtrees for 
  different processors. In the simple example just given for later versions,
  <span class="placeholder">source</span>.c is compiled in-place to produce obj\i386\<span class="placeholder">source</span>.obj. 
  A possibility for how version 3.10 accommodates single-processor and multi-processor 
  builds is that the ntos subtree is the source files’ home and the ntosmp subdirectory 
  receives copies from which to build the multi-processor kernel. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 24th July 2020 but was not published 
    until 3rd <a href="../../../../../../new/20/11.htm">November 2020</a>. It was 
    last modified on 3rd December 2020. </p>
    <!-- webbot bot="Include" U-Include="../../../_include/c20.htm" TAG="BODY" -->
  </div>
</div>

</body>

</html>

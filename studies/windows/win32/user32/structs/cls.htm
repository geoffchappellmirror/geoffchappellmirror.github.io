<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>CLS</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../km/_styles/km.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../km/_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../km/_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../km/toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="28397" -->
<h1>CLS </h1>
<p>The <span class="struct">CLS</span> structure (formally <span class="struct">
tagCLS</span>) is, perhaps unsurprisingly, how WIN32K.SYS—and before it, WINSRV.DLL—represents 
a window class. </p>
<h2>Documentation Status </h2>
<p>The <span class="struct">CLS</span> is not documented. Though symbol files for 
WIN32K.SYS in Windows 8 and higher name the <span class="struct">CLS</span> in the 
C++ decorations of internal routines, type information for the structure is present 
only in symbol files for Windows 7—not before and not since. </p>
<h2>Variability </h2>
<p>Among undocumented WIN32K structures that have more than just a handful of members, 
the <span class="struct">CLS</span> is striking for its stability. No variation 
is known since Windwos XP. The following changes of size are known: </p>
<table class="Sizes">
  <colgroup>
    <col class="Version"><col class="Size" span="2">
  </colgroup>
  <tr>
    <th>Version </th>
    <th>Size (x86) </th>
    <th>Size (x64) </th>
  </tr>
  <tr>
    <td>3.10 </td>
    <td>0x60 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>3.51 </td>
    <td>0x68 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>4.0 </td>
    <td>0x6C </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.0 </td>
    <td>0x58 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.1 to 10.0 </td>
    <td>0x5C </td>
    <td>0xA0 </td>
  </tr>
</table>
<h2>Layout </h2>
<p>It is well known that the <span class="struct">CLS</span> itself is not the whole 
of its size. Each <span class="struct">CLS</span> is followed in its allocation 
by a number of “extra” bytes that is specified as <span class="member">cbClsExtra</span> 
in the <span class="struct">WNDCLASS</span> or <span class="struct">WNDCLASSEX</span> 
when registering the class. </p>
<table>
  <colgroup>
    <col class="Offset" span="2"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>0x00 </td>
    <td>
    <pre class="source">CLS *pclsNext;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 </td>
    <td>0x08 </td>
    <td>
    <pre class="source">ATOM atomClassName;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x06 </td>
    <td>0x0A </td>
    <td>
    <pre class="source">ATOM atomNVClassName;</pre>
    </td>
    <td>5.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x06 (4.0 to 5.0); <br>
    0x08 </td>
    <td>0x0C </td>
    <td>
    <pre class="source">USHORT fnid;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x08 (3.10 to 4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">HANDLE hheapDesktop;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0C (3.10 to 4.0); <br>
    0x08 (5.0); <br>
    0x0C </td>
    <td>0x10 </td>
    <td>
    <pre class="source">DESKTOP *rpdeskParent;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x10 (3.51 to 4.0); <br>
    0x0C (5.0); <br>
    0x10 </td>
    <td>0x18 </td>
    <td>
    <pre class="source">DCE *pdce;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x10 (3.10); <br>
    0x14 (3.51 to 4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">INT cWndReferenceCount;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>next at 0x28 </td>
  </tr>
  <tr>
    <td>0x14 (3.10) </td>
    <td>&nbsp;</td>
    <td>unaccounted four bytes </td>
    <td>3.10 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x10 (5.0); <br>
    0x14 </td>
    <td>0x20 </td>
    <td>
    <pre class="source">USHORT hTaskWow;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously <span class="type">ULONG</span> at 0x2C </td>
  </tr>
  <tr>
    <td rowspan="2">0x18 (3.10 to 4.0); <br>
    0x12 (5.0); <br>
    0x16 </td>
    <td rowspan="2">0x22 </td>
    <td>
    <pre class="source">USHORT flags;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">USHORT CSF_flags;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x1C (3.10 to 4.0); <br>
    0x14 (5.0); <br>
    0x18 </td>
    <td>0x28 </td>
    <td>
    <pre class="source">PSTR lpszClientAnsiMenuName;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x20 (3.10 to 4.0); <br>
    0x18 (5.0); <br>
    0x1C </td>
    <td>0x30 </td>
    <td>
    <pre class="source">PWSTR lpszClientUnicodeMenuName;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x24 (3.10 to 4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">DWORD adwWOW [2];</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>next after extra data </td>
  </tr>
  <tr>
    <td>0x2C (3.10 to 3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">DWORD dwExpWinVer;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x30 (3.10 to 3.51); <br>
    0x2C (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">ULONG hTaskWow;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>next as <span class="type">USHORT</span> at 0x14 </td>
  </tr>
  <tr>
    <td>0x34 (3.10 to 3.51); <br>
    0x30 (4.0); <br>
    0x1C (5.0); <br>
    0x20 </td>
    <td>0x38 </td>
    <td>
    <pre class="source">CALLPROCDATA *spcpdFirst;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x38 (3.51); <br>
    0x34 (4.0); <br>
    0x20 (5.0); <br>
    0x24 </td>
    <td>0x40 </td>
    <td>
    <pre class="source">CLS *pclsBase;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x3C (3.51); <br>
    0x38 (4.0); <br>
    0x24 (5.0); <br>
    0x28 </td>
    <td>0x48 </td>
    <td>
    <pre class="source">CLS *pclsClone;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x3C (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">&lt;unknown-type&gt; lpfnWorker;</pre>
    </td>
    <td>4.0 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x28 (5.0); <br>
    0x2C </td>
    <td>0x50 </td>
    <td>
    <pre class="source">INT cWndReferenceCount;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0x14 </td>
  </tr>
</table>
<p>For its <span class="command">!dcls</span> command, the USEREXTS debugger extension 
for Windows NT 3.51 has <span class="member">pDCE</span> and just
<span class="member">flags</span> for what symbol files have later as
<span class="member">pdce</span> as <span class="member">CSF_flags</span>. It also 
simplifies to <span class="member">lpszClientMenuName</span> from
<span class="member">lpszClientUnicodeMenuName</span>. That said, if the
<span class="command">!dso</span> command in the update for Windows NT 4.0 does 
reliably reproduce names from Microsoft’s headers, then <span class="member">flags</span> 
is what the <span class="member">CSF_flags</span> actually were named. </p>
<p>More helpfully, these debugger extensions give the name <span class="member">
adwWOW</span> for what would otherwise be presented above as an unknown eight-byte 
structure. Later versions place it after the extra class data, if it is allowed 
for at all: it is meaningful only for classes that are registered by threads that 
double as 16-bit tasks. </p>
<p>Not only does the next run of members have the layout of the documented
<span class="struct">WNDCLASS</span> structure but they are copied as a block from 
a <span class="struct">WNDCLASS</span> in version 3.10 and in later versions from 
that part of a <span class="struct">WNDCLASSEX</span> that follows the
<span class="member">cbSize</span>. The debugger extensions for Windows NT 4.0 confirm 
that they are formally a <span class="struct">COMMON_WNDCLASS</span> structure as 
an unnamed <span class="struct">CLS</span> member. </p>
<table>
  <colgroup>
    <col class="Offset" span="2"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
  </tr>
  <tr>
    <td>0x38 (3.10); <br>
    0x40 (3.51 to 4.0); <br>
    0x2C (5.0); <br>
    0x30 </td>
    <td>0x54 </td>
    <td>
    <pre class="source">UINT style;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x3C (3.10); <br>
    0x44 (3.51 to 4.0); <br>
    0x30 (5.0); <br>
    0x34 </td>
    <td>0x58 </td>
    <td>
    <pre class="source">WNDPROC lpfnWndProc;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x40 (3.10); <br>
    0x48 (3.51 to 4.0); <br>
    0x34 (5.0); <br>
    0x38 </td>
    <td>0x60 </td>
    <td>
    <pre class="source">INT cbClsExtra;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x44 (3.10); <br>
    0x4C (3.51 to 4.0); <br>
    0x38 (5.0); <br>
    0x3C </td>
    <td>0x64 </td>
    <td>
    <pre class="source">INT cbWndExtra;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x48 (3.10); <br>
    0x50 (3.51 to 4.0); <br>
    0x3C (5.0); <br>
    0x40 </td>
    <td>0x68 </td>
    <td>
    <pre class="source">HINSTANCE hModule;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x4C (3.10); <br>
    0x54 (3.51 to 4.0); <br>
    0x40 (5.0); <br>
    0x44 </td>
    <td>0x70 </td>
    <td>
    <pre class="source">CURSOR *spicn;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x50 (3.10); <br>
    0x58 (3.51 to 4.0); <br>
    0x44 (5.0); <br>
    0x48 </td>
    <td>0x78 </td>
    <td>
    <pre class="source">CURSOR *spcur;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x54 (3.10); <br>
    0x5C (3.51 to 4.0); <br>
    0x48 (5.0); <br>
    0x4C </td>
    <td>0x80 </td>
    <td>
    <pre class="source">HBRUSH hbrBackground;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x58 (3.10); <br>
    0x60 (3.51 to 4.0); <br>
    0x4C (5.0); <br>
    0x50 </td>
    <td>0x88 </td>
    <td>
    <pre class="source">PWSTR lpszMenuName;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x5C (3.10); <br>
    0x64 (3.51 to 4.0); <br>
    0x50 (5.0); <br>
    0x54 </td>
    <td>0x90 </td>
    <td>
    <pre class="source">PSTR lpszAnsiClassName;</pre>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x68 (4.0); <br>
    0x54 (5.0); <br>
    0x58 </td>
    <td>0x98 </td>
    <td>
    <pre class="source">CURSOR *spicnSm;</pre>
    </td>
    <td>4.0 and higher </td>
  </tr>
</table>
<h3>Flags </h3>
<p>Debugger extensions from early development kits helpfully have descriptive strings 
for the bits within the <span class="member">CSF_flags</span>. It seems highly plausible 
that these are the macros that are used for the bits in the source code. </p>
<table>
  <tr>
    <th>Mask </th>
    <th>Name </th>
    <th>Versions (Tentative) </th>
  </tr>
  <tr>
    <td>0x0001 </td>
    <td><span class="constant">CSF_SERVERSIDEPROC</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x0002 </td>
    <td><span class="constant">CSF_ANSIPROC</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x0004 </td>
    <td><span class="constant">CSF_WOWDEFERDESTROY</span> </td>
    <td>3.51 and higher </td>
  </tr>
  <tr>
    <td>0x0008 </td>
    <td><span class="constant">CSF_SYSTEMCLASS</span> </td>
    <td>3.51 and higher </td>
  </tr>
  <tr>
    <td>0x0010 </td>
    <td><span class="constant">CSF_WOWCLASS</span> </td>
    <td>5.0 and higher </td>
  </tr>
  <tr>
    <td>0x0020 </td>
    <td><span class="constant">CSF_WOWEXTRA</span> </td>
    <td>5.0 and higher </td>
  </tr>
  <tr>
    <td>0x0040 </td>
    <td><span class="constant">CSF_CACHEDSMICON</span> </td>
    <td>5.0 and higher </td>
  </tr>
  <tr>
    <td>0x0080 </td>
    <td><span class="constant">CSF_WIN40COMPAT</span> </td>
    <td>5.0 and higher </td>
  </tr>
</table>
<div class="Footer">
  <p class="Dates">This page was created on 12th August 2017 but was not published 
  until 28th <a href="../../../../../new/17/08.htm">August 2017</a>. It was last 
  modified on 30th September 2017. </p>
  <!--webbot bot="Include" U-Include="../../../km/_include/c17.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017. Geoff Chappell. All rights reserved. 
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="47327" -->
</div>

</body>

</html>

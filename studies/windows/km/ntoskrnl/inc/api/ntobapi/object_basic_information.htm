<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>OBJECT_BASIC_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>OBJECT_BASIC_INFORMATION </h1>
  <p>The <span class="struct">OBJECT_BASIC_INFORMATION</span> structure is what 
  a successful call to <span class="function">ZwQueryObject</span> or
  <span class="function">NtQueryObject</span> produces in its output buffer when 
  given the information class <span class="constant">ObjectBasicInformation</span> 
  (0). Most of the information so obtained is about whatever object is referenced 
  by the <span class="argument">Handle</span> argument. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">OBJECT_BASIC_INFORMATION</span> structure is not documented. 
  This is plainly very much by design. A <span class="struct">PUBLIC_OBJECT_BASIC_INFORMATION</span> 
  is defined in WINTERNL.H from the Software Development Kit (SDK) and in NTIFS.H 
  from the Windows Driver Kit (WDK). Even then, this availability doesn’t begin 
  until the kits for Windows 7. This public definition—which does, remember, have 
  a different name—provides only the first four members plus an array which is commented 
  as being “reserved for internal use”. </p>
  <!--webbot bot="Include" U-Include="../_include/type_info_urlmon.htm" TAG="BODY" startspan -->

<p>Microsoft does publish the practical equivalent of a C-language definition as 
type information in a handful of private symbol files that Microsoft has included 
in packages of public symbol files, starting with Windows 8, and continues to make 
available through Microsoft’s public symbol server. These private symbol files are 
not for the kernel, where the structure is prepared, nor even for low-level user-mode 
DLLs that interpret the structure. They are instead for various higher-level user-mode 
DLLs such as URLMON.DLL. The latter is here singled out because of its origins in 
Internet Explorer and thence for the strong suggestion that Microsoft’s programmers 
of Internet Explorer had access to more details of low-level Windows programming 
than Microsoft publishes for wider use. </p>

<!--webbot bot="Include" endspan i-checksum="1061" -->
  <!--webbot bot="Include" U-Include="../_include/type_info_ddklibs.htm" TAG="BODY" startspan -->

<p>Type information for the structure has also seeped out at the other end of the 
Windows timeline, though not in symbol files but in statically linked libraries: 
GDISRVL.LIB from the Device Driver Kit (DDK) for Windows NT 3.51; and SHELL32.LIB 
from the DDK for Windows NT 4.0. </p>

<!--webbot bot="Include" endspan i-checksum="3859" -->
  <h2>Layout </h2>
  <p>The <span class="struct">OBJECT_BASIC_INFORMATION</span> is 0x38 bytes in both 
  32-bit and 64-bit Windows in all versions. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">ULONG Attributes;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>
        <pre class="source">ULONG GrantedAccess;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">ULONG HandleCount;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>
        <pre class="source">ULONG PointerCount;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>
        <pre class="source">ULONG PagedPoolCharge;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x14 </td>
        <td>
        <pre class="source">ULONG NonPagedPoolCharge;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td rowspan="2">0x18 </td>
        <td>
        <pre class="source">ULONG TotalNumberOfObjects;</pre>
        </td>
        <td>3.10 only </td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG Reserved [3];</pre>
        </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x1C (3.10) </td>
        <td>
        <pre class="source">ULONG TotalNumberOfHandles;</pre>
        </td>
        <td>3.10 only </td>
      </tr>
      <tr>
        <td>0x20 (3.10) </td>
        <td>unknown dword </td>
        <td>3.10 only </td>
      </tr>
      <tr>
        <td>0x24 </td>
        <td>
        <pre class="source">ULONG NameInfoSize;</pre>
        </td>
        <td>all &nbsp;</td>
      </tr>
      <tr>
        <td>0x28 </td>
        <td>
        <pre class="source">ULONG TypeInfoSize;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x2C </td>
        <td>
        <pre class="source">ULONG SecurityDescriptorSize;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x30 </td>
        <td>
        <pre class="source">LARGE_INTEGER CreationTime;</pre>
        </td>
        <td>all </td>
      </tr>
    </tbody>
  </table>
  <p>The three dwords at offset 0x18 are known to be defined as
  <span class="member">Reserved</span> as early as version 3.51. They are computed 
  for version 3.10 but not for any version since. What distinguishes these three, 
  when they were meaningful, is that they tell not directly of the one object that 
  is referenced by the <span class="argument">Handle</span> argument but of all 
  objects of the same type as that one object. The three are respectively the total 
  numbers of objects, handles and references. Version 3.50 moves two of them to 
  the <span class="struct"><a href="object_type_information.htm">OBJECT_TYPE_INFORMATION</a></span>, 
  which is where the names that are proposed above come from. </p>
  <p>The three dwords at offset 0x24 tell how many bytes would be required for the 
  output buffer if the caller proceeds to other queries for the same
  <span class="argument">Handle</span>: </p>
  <ul>
    <li><span class="member">NameInfoSize</span> for the <span class="constant">
    ObjectNameInformation</span> information class; </li>
    <li><span class="member">TypeInfoSize</span> for the <span class="constant">
    ObjectTypeInformation</span> information class; </li>
    <li><span class="member">SecurityDescriptorSize</span> for the
    <span class="function">ZwQuerySecurityObject</span> function. </li>
  </ul>
  <p>These other queries produce some variable amount of information, e.g., a fixed-size 
  structure followed by a variable-size name in Unicode characters. The caller who 
  does not know in advance how big a buffer to provide can either guess or make 
  two calls. But the caller who first queries for basic information can know in 
  advance. In theory, sizes that will suffice for the other queries are available 
  almost incidentally while computing the basic information. In practice, the knowledge 
  is not exact. The <span class="member">TypeInfoSize</span> can be too small in 
  version 3.50 and higher because the query for <span class="constant">ObjectTypeInformation</span> 
  rounds its size up to a multiple of four or eight bytes (in 32-bit and 64-bit 
  Windows, respectively) but this is not accounted for when computing the
  <span class="member">TypeInfoSize</span>. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 27th
    <a href="../../../../../../../new/20/06.htm">June 2020</a> and was last modified 
    on 27th August 2022. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c2022.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4221" -->
  </div>
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>PROCESSINFO</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="54033" -->
<h1>PROCESSINFO </h1>
<p>The <span class="struct">PROCESSINFO</span> (formally <span class="struct">tagPROCESSINFO</span>) 
is the most of what WIN32K.SYS keeps about a process. A portion at its start is 
reproduced as a <span class="struct">W32PROCESS</span> (formally
<span class="struct">_W32PROCESS</span>), apparently as an unnamed member. It is 
not clear what governs the separation. </p>
<h2>Documentation Status </h2>
<p>Under either name, the <span class="struct">PROCESSINFO</span> is not documented. 
Structural details from type information in symbol files are known to have been 
disclosed in public only for WIN32K.SYS from Windows 7—not before and not since. 
Or so I wrote in 2017, having not yet caught up with Windows 10 updates. Symbol 
files for 1607 and higher have type information for the <span class="struct">W32PROCESS</span>. 
Thus does a little more “official” detail dribble out. </p>
<p>For some early WIndows versions, Microsoft’s names for some, and even all, members 
of both structures are known with varying confidence from the output of one or another 
debugger command as implemented in the USEREXTS.DLL or USERKDX.DLL debugger extensions 
which Microsoft published with one or another Device Driver Kit (DDK). Nobody would 
sensibly count this as documentation. It does show, however, that Microsoft understood 
for a while that knowledge of the <span class="struct">PROCESSINFO</span> may help 
programmers in the depths of debugging what they’re doing with Windows! </p>
<h2>Layout </h2>
<p>Not only is the <span class="struct">PROCESSINFO</span> highly variable between 
versions, and not only is there the complication of what part of it is the
<span class="struct">W32PROCESS</span>, but in the one version for which type information 
is publicly available it’s immediately plain that the <span class="struct">PROCESSINFO</span> 
as described therein is not the full story. The memory block it is created in is 
larger than is declared for the structure and the additional space is accessed as 
if for members of a larger structure. It could be that the <span class="struct">
PROCESSINFO</span> is itself a reduction, but close inspection shows something more 
interesting: the <span class="struct">PROCESSINFO</span> as described by type information 
in the symbol file for WIN32K in Windows 7 is not the <span class="struct">PROCESSINFO</span> 
that the matching WIN32K executable actually uses. Even the following table just 
of changing sizes is therefore not just more than usually complex but more than 
usually uncertain. </p>
<table class="Sizes">
  <colgroup>
    <col class="Version"><col class="Size" span="4"><col class="Remarks">
  </colgroup>
  <tr>
    <th rowspan="2">Version </th>
    <th colspan="2"><span class="struct">W32PROCESS</span> </th>
    <th colspan="2"><span class="struct">PROCESSINFO</span> </th>
    <th rowspan="2">Remarks </th>
  </tr>
  <tr>
    <th>Size (x86) </th>
    <th>Size (x64) </th>
    <th>SIze (x86) </th>
    <th>Size (x64) </th>
  </tr>
  <tr>
    <td>3.10 </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
    <td>0xE4 </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>3.51 </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
    <td>0x0120 </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>4.0 </td>
    <td>0x30 </td>
    <td>&nbsp;</td>
    <td>0x012C </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.0 </td>
    <td>0x2C </td>
    <td>&nbsp;</td>
    <td>0x013C </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.1 </td>
    <td>0x2C </td>
    <td>&nbsp;</td>
    <td>0x0144 </td>
    <td>&nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.2 </td>
    <td>0x78 </td>
    <td>0xD0 </td>
    <td>0x018C </td>
    <td>0x02C0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>6.0 </td>
    <td>0x80 </td>
    <td>0xE0 </td>
    <td>0x01A8 </td>
    <td>0x02E8 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>6.1 </td>
    <td>0x90 </td>
    <td>0x0100 </td>
    <td>0x01C8 </td>
    <td>0x0320 </td>
    <td>symbol files have 0x01B0 and 0x0300 for <span class="struct">PROCESSINFO</span> 
    size </td>
  </tr>
  <tr>
    <td>6.2 </td>
    <td>0x9C </td>
    <td>0x0128 </td>
    <td>0x01D8 </td>
    <td>0x0358 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>6.3 </td>
    <td>0x9C </td>
    <td>0x0128 </td>
    <td>0x01DC </td>
    <td>0x0360 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>10.0 </td>
    <td>0x9C </td>
    <td>0x0128 </td>
    <td>0x0250 </td>
    <td>0x03E8 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1511 </td>
    <td>0x9C </td>
    <td>0x0128 </td>
    <td>0x0248 </td>
    <td>0x03D8 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1607 </td>
    <td>0xA0 </td>
    <td>0x0120 </td>
    <td>0x0250 </td>
    <td>0x03D8 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1703 </td>
    <td>0xA0 </td>
    <td>0x0120 </td>
    <td>0x0268 </td>
    <td>0x03F8 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1709 </td>
    <td>0xA8 </td>
    <td>0x0128 </td>
    <td>0x0280 </td>
    <td>0x0410 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1803 </td>
    <td>0xA8 </td>
    <td>0x0128 </td>
    <td>0x028C </td>
    <td>0x0420 </td>
    <td>&nbsp;</td>
  </tr>
</table>
<p>In version 4.0, memory for the <span class="struct">PROCESSINFO</span> is allocated 
by the kernel, the required size having been communicated by WIN32K as an argument 
to the undocumented (and highly variable) <span class="function">PsEstablishWin32Callouts</span> 
function. Version 5.0 redistributed the work, such that the <span class="struct">
PROCESSINFO</span> is instead created by WIN32K. Either way, the size of the
<span class="struct">PROCESSINFO</span> is easily seen in code—indeed, in Windows 
10, with WIN32K split into three, it’s immediately visible in data, exported as
<span class="variable">W32ProcessSize</span>—but how much of the
<span class="struct">PROCESSINFO</span> is the <span class="struct">W32PROCESS</span> 
can only be guessed. </p>
<h3>W32PROCESS </h3>
<p>Even for the first part of the <span class="struct">PROCESSINFO</span>, Microsoft’s 
names and types are known with the certainty of type information from public symbol 
files only for version 6.1 and now for some releases of version 10.0. For versions 
4.0 and 5.0, offsets and Microsoft’s names, but not types, are known with good confidence 
from the output of the debugger’s <span class="struct">!dso</span> command as supported 
by the USEREXTS.DLL debugger extensions for these versions. For almost all Windows 
versions, everything that’s presented here of the layout is necessarily the result 
of deduction, inference and outright guesswork from inspection of executables.
</p>
<p>Strictly speaking, it’s also a guess that the <span class="struct">W32PROCESS</span> 
does not exist as a separate structure before version 4.0. In this version—before 
which the <span class="struct">PROCESSINFO</span> was a user-mode creation of WINSRV.DLL—three 
members that had been very nearly at the end at the <span class="struct">PROCESSINFO</span> 
move to very near the start, which is here taken as a reorganisation that defined 
the <span class="struct">W32PROCESS</span>. Conspicuous among these moved members 
is the dword of flags. Compare with similar flags in the <span class="struct">
<a href="../threadinfo/index.htm">THREADINFO</a></span> which didn’t move to the
<span class="struct">W32THREAD</span>. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>0x00 </td>
    <td>
    <pre class="source"><a href="../../../ntoskrnl/structs/eprocess/index.htm">EPROCESS</a> *Process;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 </td>
    <td>0x08 </td>
    <td>
    <pre class="source">ULONG RefCount;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 (4.0); <br>
    0x08 </td>
    <td>0x0C </td>
    <td>
    <pre class="source">ULONG <a href="pif_flags.htm">W32PF_Flags</a>;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>previously at 0xF4 </td>
  </tr>
  <tr>
    <td>0x08 (4.0); <br>
    0x0C </td>
    <td>0x10 </td>
    <td>
    <pre class="source">KEVENT *InputIdleEvent;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0C (4.0); <br>
    0x10 </td>
    <td>0x18 </td>
    <td>
    <pre class="source">ULONG StartCursorHideTime;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>previously at 0xFC </td>
  </tr>
  <tr>
    <td>0x10 (4.0); <br>
    0x14 </td>
    <td>0x20 </td>
    <td>
    <pre class="source">W32PROCESS *NextStart;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>previously at 0x0108 as <span class="member">ppiCalcNext</span> </td>
  </tr>
  <tr>
    <td>0x14 (4.0); <br>
    0x18 </td>
    <td>0x28 </td>
    <td>
    <pre class="source">PVOID pDCAttrList;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x18 (4.0); <br>
    0x1C </td>
    <td>0x30 </td>
    <td>
    <pre class="source">PVOID pBrushAttrList;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x1C (4.0); <br>
    0x20 </td>
    <td>0x38 </td>
    <td>
    <pre class="source">ULONG W32Pid;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x20 (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">&lt;unknown-type&gt; pidHandleTrack;</pre>
    </td>
    <td>4.0 only </td>
    <td>last <span class="struct">W32PROCESS</span> member in 4.0 </td>
  </tr>
  <tr>
    <td>0x24 </td>
    <td>0x3C </td>
    <td>
    <pre class="source">LONG GDIHandleCount;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x28 </td>
    <td>0x40 </td>
    <td>
    <pre class="source">ULONG GDIHandleCountPeak;</pre>
    </td>
    <td>6.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x28 (5.0 to 6.0); <br>
    0x2C </td>
    <td>0x40 (5.2 to 6.0); <br>
    0x44 </td>
    <td>
    <pre class="source">LONG UserHandleCount;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>last <span class="struct">W32PROCESS</span> member in 5.0; <br>
    last <span class="struct">W32PROCESS</span> member in 5.1 </td>
  </tr>
  <tr>
    <td>0x2C (5.2 to 6.0) </td>
    <td>0x44 (5.2 to 6.0) </td>
    <td>unaccounted four bytes </td>
    <td>5.2 to 6.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x30 </td>
    <td>0x48 </td>
    <td>
    <pre class="source">ULONG UserHandleCountPeak;</pre>
    </td>
    <td>6.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x34 </td>
    <td>0x50 </td>
    <td>
    <pre class="source">EX_PUSH_LOCK GDIPushLock;</pre>
    </td>
    <td>6.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x30 (5.2 to 6.0); <br>
    0x38 </td>
    <td>0x48 (5.2 to 6.0); <br>
    0x58 </td>
    <td>
    <pre class="source">RTL_AVL_TABLE GDIEngUserMemAllocTable;</pre>
    </td>
    <td>5.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x68 (5.2 to 6.0); <br>
    0x70 </td>
    <td>0xB0 (5.2 to 6.0); <br>
    0xC0 </td>
    <td>
    <pre class="source">LIST_ENTRY GDIDcAttrFreeList;</pre>
    </td>
    <td>5.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x70 (5.2 to 6.0); <br>
    0x78 </td>
    <td>0xC0 (5.2 to 6.0); <br>
    0xD0 </td>
    <td>
    <pre class="source">LIST_ENTRY GDIBrushAttrFreeList;</pre>
    </td>
    <td>5.2 and higher </td>
    <td>last <span class="struct">W32PROCESS</span> member in 5.2 </td>
  </tr>
  <tr>
    <td>0x80 </td>
    <td>0xE0 </td>
    <td>
    <pre class="source">LIST_ENTRY GDIW32PIDLockedBitmaps;</pre>
    </td>
    <td>6.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x78 (6.0); <br>
    0x88 </td>
    <td>0xD0 (6.0); <br>
    0xF0 </td>
    <td>
    <pre class="source">PVOID hSecureGdiSharedHandleTable;</pre>
    </td>
    <td>6.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x7C (6.0); <br>
    0x8C </td>
    <td>0xD8 (6.0); <br>
    0xF8 </td>
    <td>
    <pre class="source">PVOID DxProcess;</pre>
    </td>
    <td>6.0 and higher </td>
    <td>last <span class="struct">W32PROCESS</span> member in 6.0; <br>
    last <span class="struct">W32PROCESS</span> member in 6.1 </td>
  </tr>
  <tr>
    <td>0x90 </td>
    <td>0x0100 </td>
    <td>
    <pre class="source">PVOID DCompositionProcess;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x94 </td>
    <td>0x0108 </td>
    <td>
    <pre class="source">ULONG UMPDSandboxingEnabled;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x98 </td>
    <td>0x0110 </td>
    <td>
    <pre class="source">PVOID pWakeReference;</pre>
    </td>
    <td>6.2 and higher </td>
    <td>last <span class="struct">W32PROCESS</span> member in 6.2 (x86); <br>
    last <span class="struct">W32PROCESS</span> member in 6.3 (x86); <br>
    last <span class="struct">W32PROCESS</span> member in 10.0 to 1511 (x86) </td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td>0x0118 (6.2 to 1511) </td>
    <td>
    unknown 64-bit count of references     </td>
    <td>6.2 to 1511 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td>00x0120 (6.2 to 1511) </td>
    <td>
    unknown 64-bit count of dereferences     </td>
    <td>6.2 to 1511 </td>
    <td>last <span class="struct">W32PROCESS</span> member in 6.2 (x64); <br>
    last <span class="struct">W32PROCESS</span> member in 6.3 (x64); <br>
    last <span class="struct">W32PROCESS</span> member in 10.0 to 1511 (x64) </td>
  </tr>
  <tr>
    <td>0x9C </td>
    <td>0x0118 </td>
    <td>
    <pre class="source">ULONG defaultDpiContext;</pre>
    </td>
    <td>1607 and higher </td>
    <td>last <span class="struct">W32PROCESS</span> member in 1607 and 1703 </td>
  </tr>
  <tr>
    <td>0xA0 </td>
    <td>0x011C </td>
    <td>
    <pre class="source">USHORT Dpi;</pre>
    </td>
    <td>1709 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xA4 </td>
    <td>0x0120 </td>
    <td>
    <pre class="source">BOOL bChangedGdiGammaRamp;</pre>
    </td>
    <td>1709 and higher </td>
    <td>last <span class="struct">W32PROCESS</span> member in 1709 </td>
  </tr>
  <tr>
    <td>0xA8 </td>
    <td>0x0124 </td>
    <td>
    <pre class="source">UINT GdiInitializeCalloutExecuted : 1;</pre>
    </td>
    <td>1803 and higher </td>
    <td>last <span class="struct">W32PROCESS</span> member in 1803 </td>
  </tr>
</table>
<p>The <span class="member">InputIdleEvent</span> is, of course, what the documented 
API function <span class="function">WaitForInputIdle</span> waits on. As a kernel-mode 
structure, the <span class="struct">PROCESSINFO</span> can have pointers directly 
to such things as event objects—and ideally would, since access through handles 
for kernel-mode use alone is wholly avoidable overhead. In the early history, however, 
the <span class="member">InputIdleEvent</span> is necessarily a
<span class="type">HANDLE</span>. See below, as <span class="member">hEventInputIdle</span>, 
the different name being suggested by the output of the Windows NT 3.51 debugger’s
<span class="command">!dpi</span> command. Version 3.51 introduced some logic with 
special meaning for <span class="constant">INVALID_HANDLE_VALUE</span> as distinct 
from <span class="constant">NULL</span>, which is retained even after the change 
to a pointer and is remarkable for persisting even to Windows 10. </p>
<p>The <span class="member">W32Pid</span> in version 4.0 is just the low 16 bits 
of the usual process ID. Later versions save a <span class="type">ULONG</span> but 
explicitly clear the lowest two bits. </p>
<p>Version 4.0 does track a <span class="member">GDIHandleCount</span> at offset 
0x24 but apparently in some structure (0x10 bytes at offset 0x20) that I have little 
interest in investigating. There is only so much trouble I can care to take for 
the pre-history! </p>
<h3>PROCESSINFO Continuation </h3>
<p>For the <span class="struct">PROCESSINFO</span> beyond the
<span class="struct">W32PROCESS</span>, Microsoft’s names and types are known with 
the certainty of type information from public symbol files only for version 6.1. 
For versions 4.0 and 5.0, offsets and Microsoft’s names are known with good confidence 
from the output of the debugger’s <span class="struct">!dso</span> command as supported 
by the USERKDX debugger extensions for these versions. For version 3.51, the output 
of the <span class="command">!dpi</span> command as supported by the USEREXTS debugger 
extension suggests names that very likely are Microsoft’s. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 (3.10 to 3.51); <br>
    0x30 (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">PROCESSINFO *ppiNext;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>next at 0x44 </td>
  </tr>
  <tr>
    <td>0x04 (3.10 to 3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">DWORD idProcessClient;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x08 (3.10 to 3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">DWORD idSequence;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0C (3.10 to 3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">HANDLE hEventInputIdle;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x2C (5.0 to 5.1); <br>
    0x78 (5.2); <br>
    0x80 (6.0); <br>
    0x90 (6.1); <br>
    0x9C (6.2 to 1511); <br>
    0xA0 (1607 to 1703); <br>
    0xA8 (1709); <br>
    0xAC </td>
    <td>0xD0 (5.2); <br>
    0xE0 (6.0); <br>
    0x0100 (6.1); <br>
    0x0128 (6.2 to 1511); <br>
    0x0120 (1607 to 1703); <br>
    0x0128 <br>
    </td>
    <td>
    <pre class="source">THREADINFO *ptiList;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0x0108 </td>
  </tr>
  <tr>
    <td>0x10 (3.10 to 3.51); <br>
    0x34 (4.0); <br>
    0x30 (5.0 to 5.1); <br>
    0x7C (5.2); <br>
    0x84 (6.0); <br>
    0x94 (6.1); <br>
    0xA0 (6.2 to 1511); <br>
    0xA4 (1607 to 1703); <br>
    0xAC (1709); <br>
    0xB0 </td>
    <td>0xD8 (5.2); <br>
    0xE8 (6.0); <br>
    0x0108 (6.1); <br>
    0x0130 (6.2 to 1511); <br>
    0x0128 (1607 to 1703); <br>
    0x0130 </td>
    <td>
    <pre class="source">THREADINFO *ptiMainThread;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x14 (3.10 to 3.51); <br>
    0x38 (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">UINT cThreads;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>next at 0x4C </td>
  </tr>
  <tr>
    <td rowspan="2">0x18 (3.10 to 3.51); <br>
    0x3C (4.0); <br>
    0x34 (5.0 to 5.1); <br>
    0x80 (5.2); <br>
    0x88 (6.0); <br>
    0x98 (6.1); <br>
    0xA4 (6.2 to 1511); <br>
    0xA8 (1607 to 1703); <br>
    0xB0 (1709); <br>
    0xB4 </td>
    <td rowspan="2">0xE0 (5.2); <br>
    0xF0 (6.0); <br>
    0x0110 (6.1); <br>
    0x0138 (6.2 to 1511); <br>
    0x0130 (1607 to 1703); <br>
    0x0138 </td>
    <td>
    <pre class="source">DESKTOP *spdeskStartup;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">DESKTOP *rpdeskStartup;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x1C (3.51); <br>
    0x40 (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">HDESK hdeskStartup;</pre>
    </td>
    <td>3.51 to 4.0 </td>
    <td>next at 0x50 </td>
  </tr>
  <tr>
    <td>0x1C (3.10); <br>
    0x20 (3.51); <br>
    0x44 (4.0); <br>
    0x38 (5.0 to 5.1); <br>
    0x84 (5.2); <br>
    0x8C (6.0); <br>
    0x9C (6.1); <br>
    0xA8 (6.2 to 1511); <br>
    0xAC (1607 to 1703); <br>
    0xB4 (1709); <br>
    0xB8 </td>
    <td>0xE8 (5.2); <br>
    0xF8 (6.0); <br>
    0x0118 (6.1); <br>
    0x0140 (6.2 to 1511); <br>
    0x0138 (1607 to 1703); <br>
    0x0140 </td>
    <td>
    <pre class="source"><a href="../../../../win32/user32/structs/cls.htm">CLS</a> *pclsPrivateList;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x20 (3.10); <br>
    0x24 (3.51); <br>
    0x48 (4.0); <br>
    0x3C (5.0 to 5.1); <br>
    0x88 (5.2); <br>
    0x90 (6.0); <br>
    0xA0 (6.1); <br>
    0xAC (6.2 to 1511); <br>
    0xB0 (1607 to 1703); <br>
    0xB8 (1709); <br>
    0xBC </td>
    <td>0xF0 (5.2); <br>
    0x0100 (6.0); <br>
    0x0120 (6.1); <br>
    0x0148 (6.2 to 1511); <br>
    0x0140 (1607 to 1703); <br>
    0x0148 </td>
    <td>
    <pre class="source">CLS *pclsPublicList;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x40 (5.0 to 5.1); <br>
    0x8C (5.2); <br>
    0x94 (6.0); <br>
    0xA4 (6.1); <br>
    0xB0 (6.2 to 1511); <br>
    0xB4 (1607 to 1703); <br>
    0xBC (1709); <br>
    0xC0 </td>
    <td>0xF8 (5.2); <br>
    0x0108 (6.0); <br>
    0x0128 (6.1); <br>
    0x0150 (6.2 to 1511); <br>
    0x0148 (1607 to 1703); <br>
    0x0150 </td>
    <td>
    <pre class="source"><a href="../wowprocessinfo.htm">WOWPROCESSINFO</a> *pwpi;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0x0104 </td>
  </tr>
  <tr>
    <td>0x44 (5.0 to 5.1); <br>
    0x90 (5.2); <br>
    0x98 (6.0); <br>
    0xA8 (6.1); <br>
    0xB4 (6.2 to 1511); <br>
    0xB8 (1607 to 1703); <br>
    0xC0 (1709); <br>
    0xC4 </td>
    <td>0x0100 (5.2); <br>
    0x0110 (6.0); <br>
    0x0130 (6.1); <br>
    0x0158 (6.2 to 1511); <br>
    0x0150 (1607 to 1703); <br>
    0x0158 </td>
    <td>
    <pre class="source">PROCESSINFO *ppiNext;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0x30 </td>
  </tr>
  <tr>
    <td>0x48 (5.0 to 5.1); <br>
    0x94 (5.2); <br>
    0x9C (6.0); <br>
    0xAC (6.1); <br>
    0xB8 (6.2 to 1511); <br>
    0xBC (1607 to 1703); <br>
    0xC4 (1709); <br>
    0xC8 </td>
    <td>0x0108 (5.2); <br>
    0x0118 (6.0); <br>
    0x0138 (6.1); <br>
    0x0160 (6.2 to 1511); <br>
    0x0158 (1607 to1703); <br>
    0x0160&nbsp; </td>
    <td>
    <pre class="source">PROCESSINFO *ppiNextRunning;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x4C (5.0 to 5.1); <br>
    0x98 (5.2); <br>
    0xA0 (6.0); <br>
    0xB0 (6.1); <br>
    0xBC (6.2 to 1511); <br>
    0xC0 (1607 to 1703); <br>
    0xC8 (1709); <br>
    0xCC </td>
    <td>0x0110 (5.2); <br>
    0x0120 (6.0); <br>
    0x0140 (6.1); <br>
    0x0168 (6.2 to 1511); <br>
    0x0160 (1607 to 1703); <br>
    0x0168 </td>
    <td>
    <pre class="source">UINT cThreads;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0x38 </td>
  </tr>
  <tr>
    <td>0x50 (5.0 to 5.1); <br>
    0x9C (5.2); <br>
    0xA4 (6.0); <br>
    0xB4 (6.1); <br>
    0xC0 (6.2 to 1511); <br>
    0xC4 (1607 to 1703); <br>
    0xCC (1709); <br>
    0xD0 </td>
    <td>0x0118 (5.2); <br>
    0x0128 (6.0); <br>
    0x0148 (6.1); <br>
    0x0170 (6.2 to 1511); <br>
    0x0168 (1607 to 1703); <br>
    0x0170 </td>
    <td>
    <pre class="source">HDESK hdeskStartup;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0x40 </td>
  </tr>
  <tr>
    <td>0x4C (4.0); <br>
    0x54 (5.0 to 5.1); <br>
    0xA0 (5.2); <br>
    0xA8 (6.0); <br>
    0xB8 (6.1); <br>
    0xC4 (6.2 to 1511); <br>
    0xC8 (1607 to 1703); <br>
    0xD0 (1709); <br>
    0xD4 </td>
    <td>0x0120 (5.2); <br>
    0x0130 (6.0); <br>
    0x0150 (6.1); <br>
    0x0178 (6.2 to 1511); <br>
    0x0170 (1607 to 1703); <br>
    0x0178 </td>
    <td>
    <pre class="source">UINT cSysExpunge;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x50 (4.0); <br>
    0x58 (5.0 to 5.1); <br>
    0xA4 (5.2); <br>
    0xAC (6.0); <br>
    0xBC (6.1); <br>
    0xC8 (6.2 to 1511); <br>
    0xCC (1607 to 1703); <br>
    0xD4 (1709); <br>
    0xD8 </td>
    <td>0x0124 (5.2); <br>
    0x0134 (6.0); <br>
    0x0154 (6.1); <br>
    0x017C (6.2 to 1511); <br>
    0x0174 (1607 to 1703); <br>
    0x017C </td>
    <td>
    <pre class="source">DWORD dwhmodLibLoadedMask;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x24 (3.10); <br>
    0x28 (3.51); <br>
    0x54 (4.0); <br>
    0x5C (5.0 to 5.1); <br>
    0xA8 (5.2); <br>
    0xB0 (6.0); <br>
    0xC0 (6.1); <br>
    0xCC (6.2 to 1511); <br>
    0xD0 (1607 to 1703); <br>
    0xD8 (1709); <br>
    0xDC </td>
    <td>0x0128 (5.2); <br>
    0x0138 (6.0); <br>
    0x0158 (6.1); <br>
    0x0180 (6.2 to 1511); <br>
    0x0178 (1607 to 1703); <br>
    0x0180 </td>
    <td>
    <pre class="source">PVOID ahmodLibLoaded [0x20];</pre>
    </td>
    <td>all &nbsp;</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xA8 3.51) </td>
    <td>&nbsp;</td>
    <td>unknown array of two 0x10-byte structures (3.51) </td>
    <td>3.51 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xA4 (3.10); <br>
    0xC8 (3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">INT cObjects;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xA8 (3.10) </td>
    <td>&nbsp;</td>
    <td>unknown pointer </td>
    <td>3.10 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xAC (3.10); <br>
    0xCC (3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">&lt;unknown-type&gt; pOpenObjectTable;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0xB0 (3.10); <br>
    0xD0 (3.51); <br>
    0xD4 (4.0); <br>
    0xDC (5.0 to 5.1); <br>
    0x0128 (5.2); <br>
    0x0130 (6.0); <br>
    0x0140 (6.1); <br>
    0x014C (6.2 to 1511); <br>
    0x0150 (1607 to 1703); <br>
    0x0158 (1709); <br>
    0x015C </td>
    <td rowspan="2">0x0228 (5.2); <br>
    0x0238 (6.0); <br>
    0x0258 (6.1); <br>
    0x0280 (6.2 to 1511); <br>
    0x0278 (1607 to 1703); <br>
    0x0280 </td>
    <td>
    <pre class="source">WINDOWSTATION *spwinsta;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">WINDOWSTATION *rpwinsta;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xD4 (3.51); <br>
    0xD8 (4.0); <br>
    0xE0 (5.0 to 5.1); <br>
    0x012C (5.2); <br>
    0x0134 (6.0); <br>
    0x0144 (6.1); <br>
    0x0150 (6.2 to 1511); <br>
    0x0154 (1607 to 1703); <br>
    0x015C (1709); <br>
    0x0160 </td>
    <td>0x0230 (5.2); <br>
    0x0240 (6.0); <br>
    0x0260 (6.1); <br>
    0x0288 (6.2 to 1511); <br>
    0x0280 (1607 to 1703); <br>
    0x0288 </td>
    <td>
    <pre class="source">HWINSTA hwinsta;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xDC (4.0); <br>
    0xE4 (5.0 to 5.1); <br>
    0x0130 (5.2); <br>
    0x0138 (6.0); <br>
    0x0148 (6.1); <br>
    0x0154 (6.2 to 1511); <br>
    0x0158 (1607 to 1703); <br>
    0x0160 (1709); <br>
    0x0164 </td>
    <td>0x0238 (5.2); <br>
    0x0248 (6.0); <br>
    0x0268 (6.1); <br>
    0x0290 (6.2 to 1511); <br>
    0x0288 (1607 to 1703); <br>
    0x0290 </td>
    <td>
    <pre class="source">ACCESS_MASK amwinsta;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xB4 (3.10); <br>
    0xD8 (3.51); <br>
    0xE0 (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source"><a href="../userstartupinfo.htm">USERSTARTUPINFO</a> usi;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>next at 0x011C </td>
  </tr>
  <tr>
    <td>0xD0 (3.10); <br>
    0xF4 (3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">DWORD PIF_flags;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>next at 0x04 </td>
  </tr>
  <tr>
    <td>0xD4 (3.10); <br>
    0xF8 (3.51); <br>
    0xFC (4.0) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">DWORD dwCompatFlags;</pre>
    </td>
    <td>3.10 to 4.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xD8 (3.10); <br>
    0xFC (3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">ULONG timeStartCursorOverride;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>next at 0x0C </td>
  </tr>
  <tr>
    <td>0xDC (3.10); <br>
    0x0100 (3.51 to 4.0); <br>
    0xE8 (5.0 to 5.1); <br>
    0x0134 (5.2); <br>
    0x013C (6.0); <br>
    0x014C (6.1); <br>
    0x0158 (6.2 to 1511); <br>
    0x015C (1607 to 1703); <br>
    0x0164 (1709); <br>
    0x0168 </td>
    <td>0x023C (5.2); <br>
    0x024C (6.0); <br>
    0x026C (6.1); <br>
    0x0294 (6.2 to 1511); <br>
    0x028C (1607 to 1703); <br>
    0x0294 </td>
    <td>
    <pre class="source">DWORD dwHotkey;</pre>
    </td>
    <td>all </td>
    <td></td>
  </tr>
  <tr>
    <td>0xE0 (3.10); <br>
    0x0104 (3.51) <br>
    </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">&lt;unknown-type&gt; pCsrProcess;</pre>
    </td>
    <td>3.10 to 3.51 </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 3.10 </td>
  </tr>
</table>
<p>The name <span class="member">PIF_flags</span> is hypothesised by analogy with
<span class="member">TIF_flags</span> in the <span class="struct">THREADINFO</span>. 
The USEREXTS debugger extension for Windows NT 3.51 has just “flags” but this seems 
more likely to be intended for easier presentation rather than for faithfully reproducing 
the member’s name. Note in particular that the names that this same debugger extension 
gives for the defined bits each begin with PIF. </p>
<p>The name <span class="member">dwCompatFlags</span> is confirrmed by the USERKDX 
debugger extension for Windows NT 4.0. The dword is a copy of the
<span class="member">dwCompatFlags</span> that are also computed for the
<span class="struct">THREADINFO</span> and <span class="struct">CLIENTINFO</span>. 
Keeping them in the <span class="struct">PROCESSINFO</span> too seems to have been 
dropped after version 4.0. </p>
<h3>Appended for Windows NT 3.51 </h3>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="1"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x0108 (3.51) </td>
    <td>
    <pre class="source">W32PROCESS *ppiCalcNext;</pre>
    </td>
    <td>3.51 only </td>
    <td>next at 0x10 as <span class="member">NextStart</span> </td>
  </tr>
  <tr>
    <td>0x010C (3.51); <br>
    0x0104 (4.0) </td>
    <td>
    <pre class="source">WOWPROCESSINFO *pwpi;</pre>
    </td>
    <td>3.51 to 4.0 </td>
    <td>next at 0x40 </td>
  </tr>
  <tr>
    <td>0x0110 (3.51); <br>
    0x0108 (4.0) </td>
    <td>
    <pre class="source">THREADINFO *ptiList;</pre>
    </td>
    <td>3.51 to 4.0 </td>
    <td>next at 0x2C </td>
  </tr>
  <tr>
    <td>0x0114 (3.51); <br>
    0x010C (4.0) </td>
    <td>
    <pre class="source">&lt;unknown-type&gt; pcurList;</pre>
    </td>
    <td>3.51 to 4.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0118 (3.51); <br>
    0x0110 (4.0) </td>
    <td>
    <pre class="source">LUID luidSession;</pre>
    </td>
    <td>3.51 to 4.0 </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 3.51; <br>
    next at 0x0114 </td>
  </tr>
</table>
<h3>Appended for Windows NT 4.0 </h3>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0xEC (5.0 to 5.1); <br>
    0x0138 (5.2); <br>
    0x0140 (6.0); <br>
    0x0150 (6.1); <br>
    0x015C (6.2 to 1511); <br>
    0x0160 (1607 to 1703); <br>
    0x0168 (1709); <br>
    0x016C </td>
    <td>0x0240 (5.2); <br>
    0x0250 (6.0); <br>
    0x0270 (6.1); <br>
    0x0298 (6.2 to 1511); <br>
    0x0290 (1607 to 1703); <br>
    0x0298 </td>
    <td>
    <pre class="source">HMONITOR hMonitor;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0118 (4.0); <br>
    0xF0 (5.0 to 5.1); <br>
    0x013C (5.2); <br>
    0x0144 (6.0); <br>
    0x0154 (6.1); <br>
    0x0160 (6.2 to 1511); <br>
    0x0164 (1607 to 1703); <br>
    0x016C (1709); <br>
    0x0170 </td>
    <td>0x0248 (5.2); <br>
    0x0258 (6.0); <br>
    0x0278 (6.1); <br>
    0x02A0 (6.2 to 1511); <br>
    0x0298 (1607 to 1703); <br>
    0x02A0 </td>
    <td>
    <pre class="source">DESKTOPVIEW *pdvList;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x11C (4.0); <br>
    0xF4 (5.0 to 5.1); <br>
    0x0140 (5.2); <br>
    0x0148 (6.0); <br>
    0x0158 (6.1); <br>
    0x0164 (6.2 to 1511); <br>
    0x0168 (1607 to 1703); <br>
    0x0170 (1709); <br>
    0x0174 </td>
    <td>0x0250 (5.2); <br>
    0x0260 (6.0); <br>
    0x0280 (6.1); <br>
    0x02A8 (6.2 to 1511); <br>
    0x02A0 (1607 to 1703); <br>
    0x02A8 </td>
    <td>
    <pre class="source">UINT iClipSerialNumber;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0x0120 (4.0); <br>
    0xF8 (5.0 to 5.1); <br>
    0x0144 (5.2); <br>
    0x014C (6.0); <br>
    0x015C (6.1); <br>
    0x0168 (6.2 to 1511); <br>
    0x016C (1607 to 1703); <br>
    0x0174 (1709); <br>
    0x0178 </td>
    <td rowspan="2">0x0258 (5.2); <br>
    0x0268 (6.0); <br>
    0x0288 (6.1); <br>
    0x02B0 (6.2 to 1511); <br>
    0x02A8 (1607 to 1703); <br>
    0x02B0 </td>
    <td>
    <pre class="source">RTL_BITMAP bmDesktopHookFlags;</pre>
    </td>
    <td>4.0 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">RTL_BITMAP bmHandleFlags;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0128 (4.0); <br>
    0x0100 (5.0 to 5.1); <br>
    0x014C (5.2); <br>
    0x0154 (6.0); <br>
    0x0164 (6.1); <br>
    0x0170 <br>
    0x0174 <br>
    0x017C <br>
    0x0180 </td>
    <td>0x0268 (5.2); <br>
    0x0278 (6.0); <br>
    0x0298 (6.1); <br>
    0x02C0 <br>
    0x02B8 <br>
    0x02C0 </td>
    <td>
    <pre class="source">CURSOR *pCursorCache;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 4.0 </td>
  </tr>
</table>
<p>That the <span class="struct">PROCESSINFO</span> as early as version 4.0 has 
an <span class="struct">RTL_BITMAP</span> where the Windows 7 symbol files locate
<span class="member">bmHandleFlags</span> is certain, but it is not clear that handle 
flags existed before version 5.0, at least not with the generality of later versions. 
The version 4.0 WIN32K operates on this bitmap not through such routines as
<span class="routine">SetHandleFlag</span> but <span class="routine">SetDesktopHookFlag</span>. 
The USERKDX debugger extensions for WIndows NT 4.0 and Windows 2000 confirm that 
the difference also showed in the bitmap’s name. </p>
<h3>Appended for Windows 2000 </h3>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x0104 (5.0 to 5.1); <br>
    0x0150 (5.2); <br>
    0x0158 (6.0); <br>
    0x0168 (6.1); <br>
    0x0174 (6.2 to 1511); <br>
    0x0178 (1607 to 1703); <br>
    0x0180 (1709); <br>
    0x0184 </td>
    <td>0x0270 (5.2); <br>
    0x0280 (6.0); <br>
    0x02A0 (6.1); <br>
    0x02C8 (6.2 to 1511); <br>
    0x02C0 (1607 to 1703); <br>
    0x02C8 </td>
    <td>
    <pre class="source">PVOID pClientBase;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0188 </td>
    <td>0x02D0 </td>
    <td>unknown pointer </td>
    <td>1803 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0108 (5.0 to 5.1); <br>
    0x0154 (5.2); <br>
    0x015C (6.0); <br>
    0x016C (6.1); <br>
    0x0178 (6.2 to 1511); <br>
    0x017C (1607 to 1703); <br>
    0x0184 (1709); <br>
    0x018C </td>
    <td>0x0278 (5.2); <br>
    0x0288 (6.0); <br>
    0x02A8 (6.1); <br>
    0x02D0 (6.2 to 1511); <br>
    0x02C8 (1607 to 1703); <br>
    0x02D0 (1709); <br>
    0x02D8 </td>
    <td>
    <pre class="source">DWORD dwLpkEntryPoints;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x010C (5.0 to 5.1); <br>
    0x0158 (5.2); <br>
    0x0160 (6.0); <br>
    0x0170 (6.1); <br>
    0x017C (6.2 to 1511); <br>
    0x0180 (1607 to 1703); <br>
    0x0188 (1709); <br>
    0x0190 </td>
    <td>0x0280 (5.2); <br>
    0x0290 (6.0); <br>
    0x02B0 (6.1); <br>
    0x02D8 (6.2 to 1511); <br>
    0x02D0 (1607 to 1703); <br>
    0x02D8 (1709); <br>
    0x02E0 </td>
    <td>
    <pre class="source">W32JOB *pW32Job;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0110 (5.0 to 5.1); <br>
    0x015C (5.2); <br>
    0x0164 (6.0); <br>
    0x0174 (6.1); <br>
    0x0180 (6.2 to 1511); <br>
    0x0184 (1607 to 1703); <br>
    0x018C (1709); <br>
    0x0194 </td>
    <td>0x0288 (5.2); <br>
    0x0298 (6.0); <br>
    0x02B8 (6.1); <br>
    0x02E0 (6.2 to 1511); <br>
    0x02D8 (1607 to 1703); <br>
    0x02E0 (1709); <br>
    0x02E8 </td>
    <td>
    <pre class="source">DWORD dwImeCompatFlags;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0114 (5.0 to 5.1); <br>
    0x0160 (5.2); <br>
    0x0168 (6.0); <br>
    0x0178 (6.1); <br>
    0x0184 (6.2 to 1511); <br>
    0x0188 (1607 to 1703); <br>
    0x0190 (1709); <br>
    0x0198 </td>
    <td>0x028C (5.2); <br>
    0x029C (6.0); <br>
    0x02BC (6.1); <br>
    0x02E4 (6.2 to 1511); <br>
    0x02DC (1607 to 1703); <br>
    0x02E4 (1709); <br>
    0x02EC </td>
    <td>
    <pre class="source">LUID luidSession;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0x0110 </td>
  </tr>
  <tr>
    <td>0x011C (5.0 to 5.1); <br>
    0x0168 (5.2); <br>
    0x0170 (6.0); <br>
    0x0180 (6.1); <br>
    0x018C (6.2 to 1511); <br>
    0x0190 (1607 to 1703); <br>
    0x0198 (1709); <br>
    0x01A0 </td>
    <td>0x0294 (5.2); <br>
    0x02A4 (6.0); <br>
    0x02C4 (6.1); <br>
    0x02EC (6.2 to 1511); <br>
    0x02E4 (1607 to 1703); <br>
    0x02EC (1709); <br>
    0x02F4 </td>
    <td>
    <pre class="source">USERSTARTUPINFO usi;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>previously at 0xE0 </td>
  </tr>
  <tr>
    <td>0x01BC </td>
    <td>0x0310 </td>
    <td>unknown word </td>
    <td>1803 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x019C (6.1); <br>
    0x01A8 (6.2 to 1511); <br>
    0x01AC (1607 to 1703); <br>
    0x01B4 (1709); <br>
    0x01C0 </td>
    <td>0x02E0 (6.1); <br>
    0x0308 (6.2 to 1511); <br>
    0x0300 (1607 to 1703); <br>
    0x0308 (1709); <br>
    0x0314 </td>
    <td>
    <pre class="source">union {
    ULONG <a href="flags.htm">Flags</a>;
    struct {
        /* bit fields, follow link */
    };
};</pre>
    </td>
    <td>6.1 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0138 (5.0 to 5.1); <br>
    0x0184 (5.2); <br>
    0x018C (6.0); <br>
    0x01A0 (6.1); <br>
    0x01AC (6.2 to 1511); <br>
    0x01B0 (1607 to 1703); <br>
    0x01B8 (1709); <br>
    0x01C4 </td>
    <td>0x02B0 (5.2); <br>
    0x02C0 (6.0); <br>
    0x02E4 (6.1); <br>
    0x030C (6.2 to 1511); <br>
    0x0304 (1607 to 1703); <br>
    0x030C (1709); <br>
    0x0318 </td>
    <td>
    <pre class="source">ULONG dwLayout;</pre>
    </td>
    <td>5.0 and higher </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 5.0 </td>
  </tr>
</table>
<p>The USERKDX debugger extension from the DDK for Windows 2000 does not list
<span class="member">dwLayout</span> among the <span class="struct">PROCESSINFO</span> 
members and would have it that the structure is 0x0138 bytes, not 0x013C. It is 
here thought that the DDK somehow retained a debugger extension for a pre-release 
build, but it may be that the inspected WIN32K executable is not truly from the 
original release. </p>
<h3>Appended for Windows XP and Windows Server 2003 </h3>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x013C (5.1); <br>
    0x0188 (5.2); <br>
    0x0190 (6.0); <br>
    0x01A4 (6.1); <br>
    0x01B0 (6.2 to 1511); <br>
    0x01B4 (1607 to 1703); <br>
    0x01BC (1709); <br>
    0x01C8 </td>
    <td>0x02B8 (5.2); <br>
    0x02C8 (6.0); <br>
    0x02E8 (6.1); <br>
    0x0310 (6.2 to 1511); <br>
    0x0308 (1607 to 1703); <br>
    0x0310 (1709); <br>
    0x0320 </td>
    <td>
    <pre class="source">PROCESS_HID_TABLE *pHidTable;</pre>
    </td>
    <td>5.1 and higher </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 5.2 </td>
  </tr>
  <tr>
    <td>0x0140 (5.1) </td>
    <td>&nbsp;</td>
    <td>unknown dword of bit flags </td>
    <td>5.1 only </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 5.1 </td>
  </tr>
</table>
<p>The four bytes at offset 0x0140 in version 5.1 are bit flags. The bit masked 
by 0x00000001 is set to disable ghosting. Version 5.2 moved it to the bit masked 
by 0x08000000 in the <span class="member">W32PF_Flags</span>. </p>
<h3>Appended for Windows Vista </h3>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x0194 (6.0); <br>
    0x01A8 (6.1); <br>
    0x01B4 (6.2 to 1511); <br>
    0x01B8 (1607 to 1703); <br>
    0x01C0 (1709); <br>
    0x01CC </td>
    <td>0x02D0 (6.0); <br>
    0x02F0 (6.1); <br>
    0x0318 (6.2 to 1511); <br>
    0x0310 (1607 to 1703); <br>
    0x0318 (1709); <br>
    0x0328 </td>
    <td>
    <pre class="source">DWORD dwRegisteredClasses;</pre>
    </td>
    <td>6.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0198 (6.0); <br>
    0x01AC (6.1) </td>
    <td>0x02D4 (6.0); <br>
    0x02F4 (6.1) </td>
    <td>unknown dword </td>
    <td>6.0 to 6.1 </td>
    <td>not present in 6.1 according to symbol files </td>
  </tr>
  <tr>
    <td>0x019C (6.0); <br>
    0x01B0 (6.1);&nbsp;<br>
    0x01B8 (6.2 to 1511); <br>
    0x01BC (1607 to 1703); <br>
    0x01C4 (1709); <br>
    0x01D0 </td>
    <td>0x02D8 (6.0); <br>
    0x02F8 (6.1); <br>
    0x0320 (6.2 to 1511); <br>
    0x0318 (1607 to 1703); <br>
    0x0320 (1709); <br>
    0x0330 </td>
    <td>unknown pointer </td>
    <td>6.0 and higher </td>
    <td>not present in 6.1 according to symbol files </td>
  </tr>
  <tr>
    <td>0x01A0 (6.0) </td>
    <td>0x02E0 (6.0) </td>
    <td>unaccounted </td>
    <td>6.0 only </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 6.0 </td>
  </tr>
</table>
<h3>Appended for Windows 7 </h3>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x01B4 (6.1); <br>
    0x01BC (6.2 to 1511); <br>
    0x01C0 (1607 to 1703); <br>
    0x01C8 (1709); <br>
    0x01D4 </td>
    <td>0x0300 (6.1); <br>
    0x0328 (6.2 to 1511); <br>
    0x0320 (1607 to 1703); <br>
    0x0328 (1709); <br>
    0x0338 </td>
    <td>unknown <span class="struct">VWPL</span> pointer </td>
    <td>6.1 and higher </td>
    <td>not present in 6.1 according to symbol files </td>
  </tr>
  <tr>
    <td>0x01B8 (6.1); <br>
    0x01C0 (6.2 to 1511); <br>
    0x01C4 (1607 to 1703); <br>
    0x01CC (1709); <br>
    0x01D8 </td>
    <td>0x0308 (6.1); <br>
    0x0330 (6.2 to 1511); <br>
    0x0328 (1607 to 1703); <br>
    0x0330 (1709); <br>
    0x0340 </td>
    <td>unaccounted </td>
    <td>6.1 and higher </td>
    <td>not present in 6.1 according to symbol files </td>
  </tr>
  <tr>
    <td>0x01BC (6.1); <br>
    0x01C4 (6.2 to 1511); <br>
    0x01C8 (1607 to 1703); <br>
    0x01D0 (1709); <br>
    0x01DC <br>
    </td>
    <td>0x0310 (6.1); <br>
    0x0338 (6.2 to 1511); <br>
    0x0330 (1607 to 1703); <br>
    0x0338 (1709); <br>
    0x0348 </td>
    <td>
    <pre class="source">VWPL *pvwplWndGCList;</pre>
    </td>
    <td>6.1 and higher </td>
    <td>0x01AC and 0x02F8 in 6.1 according to symbol files </td>
  </tr>
  <tr>
    <td>0x01C0 (6.1) </td>
    <td>0x0318 (6.1) </td>
    <td>unknown word </td>
    <td>6.1 only </td>
    <td>not present in 6.1 according to symbol files </td>
  </tr>
  <tr>
    <td>0x01C4 (6.1) </td>
    <td>0x031C (6.1) </td>
    <td>unknown dword </td>
    <td>6.1 only </td>
    <td>not present in 6.1 according to symbol files; <br>
    last <span class="struct">PROCESSINFO</span> member in 6.1 </td>
  </tr>
</table>
<p>Type information in the WIN32K symbol files from version 6.1—which, remember, 
is all that Microsoft has disclosed in public—has the <span class="struct">PROCESSINFO</span> 
ending with <span class="member">pvwplWndGCList</span> at offsets 0x01AC and 0x02F8. 
These offsets are simply not plausible for this member. For instance, where a routine 
that the symbol files name as <span class="routine">GetWindowGCList</span> calls 
another named <span class="routine">VWPLGetData</span>, it very plainly takes the 
pointer from offset 0x01BC. As if this were not trouble enough, there is evidently 
a second such pointer. For instance, a routine named <span class="routine">GetWindowMessageFilter</span> 
also calls <span class="routine">VWPLGetData</span> but taking the pointer from 
offset 0x01B4. </p>
<p>The unknown word is bit flags. The unknown dword that follows it is perhaps named
<span class="member">ProcessCheckSum</span>. It is set by an internal routine that 
the symbol files—yes, the ones that omit the member from the structure—name as
<span class="routine">WndLimit_GetProcessCheckSum</span>.. It receives the checksum 
from the process’s Portable Executable (PE) header. Both seem to have existed only 
for Windows 7. </p>
<h3>Appended for Windows 8 </h3>
<p>Microsoft’s names for members that have been added to the
<span class="struct">PROCESSINFO</span> since Windows 7 may never be known. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x01C8 (6.2 to 1511); <br>
    0x01CC (1607 to 1703); <br>
    0x01D4 (1709); <br>
    0x01E0 </td>
    <td>0x0340 (6.2 to 1511); <br>
    0x0338 (1607 to 1703); <br>
    0x0340 (1709); <br>
    0x0350 </td>
    <td>unknown 8 bytes </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x01D0 (6.3 to 1511); <br>
    0x01D4 (1607 to 1703); <br>
    0x01DC (1709); <br>
    0x01E8 </td>
    <td>0x0348 (6.3 to 1511); <br>
    0x0340 (1607 to 1703); <br>
    0x0348 (1709); <br>
    0x0358 </td>
    <td>unknown dword </td>
    <td>6.3 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x01D0 (6.2); <br>
    0x01D4 (6.3 to 1511); <br>
    0x01D8 (1607 to 1703); <br>
    0x01E0 (1709); <br>
    0x01EC </td>
    <td>0x0348 (6.2); <br>
    0x0350 (6.3 to 1511); <br>
    0x0348 (1607 to 1703); <br>
    0x0350 (1709); <br>
    0x0360 </td>
    <td>unknown pointer </td>
    <td>6.2 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="2">0x01D8 (10.0 to 1511); <br>
    0x01DC (1607 to 1703); <br>
    0x01E4 (1709); <br>
    0x01F0 </td>
    <td rowspan="2">0x0358 (10.0 to 1511); <br>
    0x0350 (1607 to 1703); <br>
    0x0358 (1709); <br>
    0x0368 </td>
    <td>unknown four pointers or handles </td>
    <td>10.0 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>unknown two pointers or handles </td>
    <td>1511 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x01D4 (6.2); <br>
    0x01D8 (6.3); <br>
    0x01E8 (10.0); <br>
    0x01E0 (1511); <br>
    0x01E4 (1607 to 1703); <br>
    0x01EC (1709); <br>
    0x01F8 </td>
    <td>0x0350 (6.2); <br>
    0x0358 (6.3); <br>
    0x0378 (10.0); <br>
    0x0368 (1511); <br>
    0x0360 (1607 to 1703); <br>
    0x0368 (1709); <br>
    0x0378 <br>
    </td>
    <td>unknown dword </td>
    <td>6.2 and higher </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 6.2; <br>
    last <span class="struct">PROCESSINFO</span> member in 6.3 </td>
  </tr>
</table>
<h3>Appended for Windows 10 </h3>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition"><col class="Versions">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x01EC (10.0); <br>
    0x01E4 (1511); <br>
    0x01E8 (1607 to 1703); <br>
    0x01F0 (1709); <br>
    0x01FC </td>
    <td>0x0380 (10.0); <br>
    0x0370 (1511); <br>
    0x0368 (1607 to 1703); <br>
    0x0370 (1709); <br>
    0x0380 </td>
    <td>unknown pointer </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x01F0 (10.0); <br>
    0x01E8 (1511); <br>
    0x01EC (1607 to 1703); <br>
    0x01F4 (1709); <br>
    0x0200 </td>
    <td>0x0388 (10.0); <br>
    0x0378 (1511); <br>
    0x0370 (1607 to 1703); <br>
    0x0378 (1709); <br>
    0x0388 </td>
    <td>unknown dword for <span class="placeholder">NumberOfActivations</span>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x01F4 (10.0); <br>
    0x01EC (1511); <br>
    0x01F0 (1607 to 1703); <br>
    0x01F8 (1709); <br>
    0x0204 </td>
    <td>0x038C (10.0); <br>
    0x037C (1511); <br>
    0x0374 (1607 to 1703); <br>
    0x037C (1709); <br>
    0x038C </td>
    <td>unknown <span class="type">CHAR [0x10]</span> for
    <span class="placeholder">ProcessImageName</span> </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0204 (10.0); <br>
    0x01FC (1511); <br>
    0x0200 (1607 to 1703); <br>
    0x0208 (1709); <br>
    0x0214 <br>
    </td>
    <td>0x039C (10.0); <br>
    0x038C (1511); <br>
    0x0384 (1607 to 1703); <br>
    0x038C (1709); <br>
    0x039C </td>
    <td>unknown dword for <span class="placeholder">ProcessId</span> </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0208 (10.0); <br>
    0x0200 (1511); <br>
    0x0204 (1607 to 1703); <br>
    0x020C (1709); <br>
    0x0218 </td>
    <td>0x03A0 (10.0); <br>
    0x0390 (1511); <br>
    0x0388 (1607 to 1703); <br>
    0x0390 (1709); <br>
    0x03A0 </td>
    <td>unknown <span class="struct">RECT</span> for <span class="placeholder">Monitor.Left</span>, 
    etc </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0218 (10.0); <br>
    0x0210 (1511); <br>
    0x0214 (1607 to 1703); <br>
    0x021C (1709); <br>
    0x0228 </td>
    <td>0x03B0 (10.0); <br>
    0x03A0 (1511); <br>
    0x0398 (1607 to 1703); <br>
    0x03A0 (1709); <br>
    0x03B0 </td>
    <td>unknown dword for <span class="placeholder">DisplayDPI</span> </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x021C (10.0); <br>
    0x0214 (1511); <br>
    0x0218 (1607 to 1703); <br>
    0x0220 (1709); <br>
    0x022C </td>
    <td>0x03B4 (10.0); <br>
    0x03A4 (1511); <br>
    0x039C (1607 to 1703); <br>
    0x03A4 (1709); <br>
    0x03B4 </td>
    <td>unknown dword for <span class="placeholder">InitialDisplayDPI</span>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0220 (10.0); <br>
    0x0218 (1511); <br>
    0x021C (1607 to 1703); <br>
    0x0224 (1709); <br>
    0x0230 </td>
    <td>0x03B8 (10.0); <br>
    0x03A8 (1511); <br>
    0x03A0 (1607 to 1703); <br>
    0x03A8 (1709); <br>
    0x03B8 </td>
    <td>unknown dword for <span class="placeholder">PrevDisplayDPI</span> </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0224 (10.0); <br>
    0x021C (1511); <br>
    0x0220 (1607 to 1703); <br>
    0x0228 (1709); <br>
    0x0234 </td>
    <td>0x03BC (10.0); <br>
    0x03AC (1511); <br>
    0x03A4 (1607 to 1703); <br>
    0x03AC (1709); <br>
    0x03BC </td>
    <td>unknown dword of bit flags: <br>
    0x00000001 for <span class="placeholder">MonitorHasChanged</span>; <br>
    0x00000002 for <span class="placeholder">DPIHasChangedWhenMonitorChanged</span>;
    <br>
    0x00000004 for <span class="placeholder">DPIHasChangedWhenMonitorNotChanged</span>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0228 (10.0); <br>
    0x0220 (1511); <br>
    0x0224 (1607 to 1703); <br>
    0x022C (1709); <br>
    0x0238 </td>
    <td>0x03C0 (10.0); <br>
    0x03B0 (1511); <br>
    0x03A8 (1607 to 1703); <br>
    0x03B0 (1709); <br>
    0x03C0 </td>
    <td>unknown <span class="type">WCHAR [0x10]</span> </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0248 (10.0); <br>
    0x0240 (1511); <br>
    0x0244 (1607 to 1703); <br>
    0x024C (1709); <br>
    0x0258 </td>
    <td>0x03E0 (10.0); <br>
    0x03D0 (1511); <br>
    0x03C8 (1607 to 1703); <br>
    0x03D0 (1709); <br>
    0x03E0 </td>
    <td>
    <pre class="source">UINT cVisWindows;</pre>
    </td>
    <td>10.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x024C (10.0); <br>
    0x0244 (1511); <br>
    0x0248 (1607 to 1703); <br>
    0x0250 (1709); <br>
    0x025C </td>
    <td>0x03E4 (10.0); <br>
    0x03D4 (1511); <br>
    0x03CC (1607 to 1703); <br>
    0x03D4 (1709); <br>
    0x03E4 </td>
    <td>unknown dword </td>
    <td>10.0 and higher </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 10.0; <br>
    last <span class="struct">PROCESSINFO</span> member in 1511 </td>
  </tr>
  <tr>
    <td>0x024C (1607 to 1703); <br>
    0x0254 (1709); <br>
    0x0260 </td>
    <td>0x03D0 (1607 to 1703); <br>
    0x03D8 (1709); <br>
    0x03E8 </td>
    <td>unknown byte </td>
    <td>1607 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x024D (1607 to 1703); <br>
    0x0255 (1709); <br>
    0x0261 </td>
    <td>0x03D1 (1607 to 1703); <br>
    0x03D9 (1709); <br>
    0x03E9 </td>
    <td>unknown byte </td>
    <td>1607 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x024E (1607 to 1703); <br>
    0x0256 (1709); <br>
    0x0262 </td>
    <td>0x03D2 (1607 to 1703); <br>
    0x03DA (1709); <br>
    0x03EA </td>
    <td>unknown byte </td>
    <td>1607 and higher </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 1607 </td>
  </tr>
  <tr>
    <td>0x0250 (1703); <br>
    0x0258 (1709); <br>
    0x0264 </td>
    <td>0x03D4 (1703); <br>
    0x03DC (1709); <br>
    0x03EC </td>
    <td>unknown dword </td>
    <td>1703 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0254 (1703); <br>
    0x025C (1709); <br>
    0x0268 </td>
    <td>0x03D8 (1703); <br>
    0x03E0 (1709); <br>
    0x03F0 </td>
    <td>unknown dword </td>
    <td>1703 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0258 (1703); <br>
    0x0260 (1709); <br>
    0x026C </td>
    <td>0x03DC (1703); <br>
    0x03E4 (1709); <br>
    0x03F4 </td>
    <td>unknown dword </td>
    <td>1703 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x025C (1703); <br>
    0x0264 (1709); <br>
    0x0270 </td>
    <td>0x03E0 (1703); <br>
    0x03E8 (1709); <br>
    0x03F8 </td>
    <td>unknown dword </td>
    <td>1703 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0260 (1703); <br>
    0x0268 (1709); <br>
    0x0274 </td>
    <td>0x03E8 (1703); <br>
    0x03F0 (1709); <br>
    0x0400 </td>
    <td>unknown <span class="struct">LIST_ENTRY</span> </td>
    <td>1703 and higher </td>
    <td>last <span class="struct">PROCESSINFO</span> member in 1703 </td>
  </tr>
  <tr>
    <td>0x0270 (1709); <br>
    0x027C </td>
    <td>0x0400 (1709); <br>
    0x0410 </td>
    <td>unknown dword </td>
    <td>1709 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0274 (1709); <br>
    0x0280 </td>
    <td>0x0404 (1709); <br>
    0x0414 </td>
    <td>unknown dword </td>
    <td>1709 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0278 (1709); <br>
    0x0284 </td>
    <td>0x0408 (1709); <br>
    0x0418 </td>
    <td>unknown dword </td>
    <td>1709 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x027C (1709); <br>
    0x0288 </td>
    <td>0x040C (1709); <br>
    0x041C </td>
    <td>unknown dword </td>
    <td>1709 and higher </td>
    <td>last <span class="member">PROCESSINFO</span> member in 1709; <br>
    last <span class="member">PROCESSINFO</span> member in 1803 </td>
  </tr>
</table>
<p>Many consecutive members that are new for Windows 10 support the trace logging 
event named AppUsageAndDisplayInfoOnExit. It is not known whether they are defined 
as a nested structure. Names given in italics are those of the parameters for the 
trace-logging event, except that in 1511 and higher what’s shown as the
<span class="placeholder">ProcessImageName</span> is instead hard-coded as ATTRI_DEPRECATED.
</p>
<p>The name <span class="member">cVisWindows</span> is proposed with some confidence 
since it acts as a per-process counter in tandem with the very much older per-thread 
counter for which Microsoft’s name in version 6.1 is known with the certainty of 
type information from symbol files. </p>
<div class="Footer">
  <p class="Dates">This page was created on 29th July 2017 but was not published 
  until 6th <a href="../../../../../../new/17/08.htm">August 2017</a>. It was last 
  modified on 1st September 2018. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c17.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="62677" -->
</div>

</body>

</html>

<html>

<head>
<title>TRACE_ENABLE_FLAG_EXTENSION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>TRACE_ENABLE_FLAG_EXTENSION </h1>
<p>The <span class="struct">TRACE_ENABLE_FLAG_EXTENSION</span> was introduced for 
Windows version 5.1 as a reinterpretation of the 32-bit <span class="member">EnableFlags</span> 
in the <span class="struct">
<a href="../../../../../win32/advapi32/api/etw/logapi/event_trace_properties.htm">
EVENT_TRACE_PROPERTIES</a></span> and <span class="struct">
<a href="../traceapi/wmi_logger_information/index.htm">WMI_LOGGER_INFORMATION</a></span> 
structures to allow for many more flags. Of these two structures, the former is 
the input and output for the user-mode API functions such as
<span class="function">StartTrace</span> and the latter is its repackaging for the 
native API function <span class="function">
<a href="../traceapi/control/index.htm">NtTraceControl</a></span>. The structures 
therefore have compatibility considerations. The aim to this particular design for 
the <span class="member">EnableFlags</span> appears to have been that the extended 
flags could be added in space after either structure without having to change the 
structures. </p>
<p>Version 6.0 elaborated the elaboration, turning the <span class="struct">TRACE_ENABLE_FLAG_EXTENSION</span> 
into a more generalised indicator that the <span class="struct">EVENT_TRACE_PROPERTIES</span> 
or <span class="struct">WMI_LOGGER_INFORMATION</span> may come not just with extended 
flags but with various types of extended information. </p>
<h2>Documentation Status </h2>
<p>The <span class="struct">TRACE_ENABLE_FLAG_EXTENSION</span> is not documented. 
Neither are the closely related <span class="struct">TRACE_ENABLE_FLAG_EXT_HEADER</span> 
and <span class="struct">TRACE_ENABLE_FLAG_EXT_ITEM</span> structures, which this 
note also describes. </p>
<p>Even the <span class="constant">EVENT_TRACE_FLAG_EXTENSION</span> flag, which 
is what indicates that the <span class="member">EnableFlags</span> are interpreted 
differently from the documentation, is not documented. Microsoft does, however, 
publish a macro definition for it in the C-language header EVNTRACE.H from Microsoft’s 
various Windows development kits—even from as far back as the Device Driver Kit 
(DDK) for Windows 2000. (Yes, the suggestion is that the opening statement about 
introduction for version 5.1 may be incorrect about how early the extension was 
developed). </p>
<p>Only two other public disclosures are known from Microsoft. One is in packages 
of symbol files that Microsoft publishes as debugging aids. Curiously, type information 
for these structures is not in symbol files for the kernel or for low-level user-mode 
DLLs, where the structures are interpreted, but is instead in symbol files for such 
user-mode oddities as AppXDeploymentClient.dll and only then in Windows 8 and higher. 
The other public disclosure is C-language definitions in NTWMI.H from the Enterprise 
edition of the Windows Driver Kit (WDK) for Windows 10 version 1511. This disclosure 
is not repeated in subsequent editions and is here thought to be an oversight. Still, 
published it is, which means that this note uses Microsoft’s names throughout.
</p>
<h2>Layout </h2>
<p>The essential point to the <span class="struct">TRACE_ENABLE_FLAG_EXTENSION</span> 
is that it overlays the <span class="member">EnableFlags</span>. It is therefore 
four bytes in both 32-bit and 64-bit Windows: </p>
<table class="Struct">
  <tr>
    <th>Offset </th>
    <th>Definition </th>
    <th>Versions </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">USHORT Offset;</pre>
    </td>
    <td>5.1 and higher </td>
  </tr>
  <tr>
    <td>0x02 </td>
    <td>
    <pre class="source">UCHAR Length;</pre>
    </td>
    <td>5.1 and higher </td>
  </tr>
  <tr>
    <td>0x03 </td>
    <td>
    <pre class="source">UCHAR Flag;</pre>
    </td>
    <td>5.1 and higher </td>
  </tr>
</table>
<p>In the original implementation, the <span class="member">Offset</span> measures 
in bytes from the start of the containing structure (<span class="struct">EVENT_TRACE_PROPERTIES</span> 
or <span class="struct">WMI_LOGGER_INFORMATION</span>) to an array of dwords that 
are the extended <span class="member">EnableFlags</span>. The
<span class="member">Length</span> counts the dwords in the array. </p>
<p>What distinguishes the <span class="member">EnableFlags</span> for reinterpretation 
is that its highest bit, which Microsoft defines as <span class="constant">EVENT_TRACE_FLAG_EXTENSION</span>, 
is set. Thus, the <span class="member">Flag</span> byte in a
<span class="struct">TRACE_ENABLE_FLAG_EXTENSION</span> necessarily has its highest 
bit set. No use is known of other bits in the <span class="member">Flag</span>.
</p>
<p>In the elaboration for version 6.0 and higher, not only does
<span class="member">Flag</span> have its high bit set (to confirm that
<span class="member">EnableFlags</span> is a <span class="struct">TRACE_ENABLE_FLAG_EXTENSION</span>) 
but the <span class="member">Length</span> has the otherwise implausible value 0xFF. 
This signifies that the array of dwords at <span class="member">Offset</span> bytes 
from the start of the containing structure has a new interpretation not as an array 
to extend one dword of <span class="member">EnableFlags</span> but as a more general 
extension to a sequence of items. </p>
<h3>Extension Header </h3>
<p>The first dword of this more general extension is specifically a
<span class="struct">TRACE_ENABLE_FLAG_EXT_HEADER</span>: </p>
<table class="Struct">
  <tr>
    <th>Offset </th>
    <th>Definition </th>
    <th>Versions </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">USHORT Length;</pre>
    </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x02 </td>
    <td>
    <pre class="source">USHORT Items;</pre>
    </td>
    <td>6.0 and higher </td>
  </tr>
</table>
<p>The <span class="member">Length</span>, as before, is the number of dwords in 
the array, which now includes the <span class="struct">TRACE_ENABLE_FLAG_EXT_HEADER</span>. 
Subsequent dwords in the array are a sequence of <span class="member">Items</span> 
items. </p>
<h3>Extension Item </h3>
<p>Each item is introduced by its own header. This is the one-dword
<span class="struct">TRACE_ENABLE_FLAG_EXT_ITEM</span> structure: </p>
<table class="Struct">
  <tr>
    <th>Offset </th>
    <th>Definition </th>
    <th>Versions </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">USHORT Offset;</pre>
    </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x02 </td>
    <td>
    <pre class="source">USHORT Type;</pre>
    </td>
    <td>6.0 and higher </td>
  </tr>
</table>
<p>Perhaps confusingly, this <span class="member">Offset</span> measures not bytes 
but dwords from the start of this item to the next item (or to the non-inclusive 
end of the array). It is equivalently the number of dwords in the item, including 
the <span class="struct">TRACE_ENABLE_FLAG_EXT_ITEM</span>. Subsequent dwords in 
the item are data for the item. Their interpretation depends on the
<span class="member">Type</span>. Microsoft’s names are known from NTWMI.H: </p>
<table>
  <tr>
    <th>Value </th>
    <th>Name </th>
    <th>Versions </th>
    <th>Item Data </th>
  </tr>
  <tr>
    <td>0x0001 </td>
    <td><span class="constant">ETW_EXT_ENABLE_FLAGS</span> </td>
    <td>6.0 and higher </td>
    <td>as many as eight dwords for a <span class="struct">
    <a href="../../../inc/api/ntwmi/perfinfo_groupmask.htm">PERFINFO_GROUPMASK</a></span> </td>
  </tr>
  <tr>
    <td>0x0002 </td>
    <td><span class="constant">ETW_EXT_PIDS</span> </td>
    <td>6.0 and higher </td>
    <td>each dword is a process ID </td>
  </tr>
  <tr>
    <td>0x0003 </td>
    <td><span class="constant">ETW_EXT_STACKWALK_FILTER</span> </td>
    <td>6.0 and higher </td>
    <td>each dword is a 16-bit <a href="../callouts/hookid.htm">hook ID</a> </td>
  </tr>
  <tr>
    <td>0x0004 </td>
    <td><span class="constant">ETW_EXT_POOLTAG_FILTER</span> </td>
    <td>6.1 and higher </td>
    <td>each dword is a pool tag </td>
  </tr>
  <tr>
    <td>0x0005 </td>
    <td><span class="constant">ETW_EXT_STACK_CACHING</span> </td>
    <td>6.2 and higher </td>
    <td>exactly two dwords as an <span class="struct">ETW_STACK_CACHING_CONFIG</span>
    </td>
  </tr>
</table>
<p>The 8-byte <span class="struct">ETW_STACK_CACHING_CONFIG</span> is known from 
both NTWMI.H and from those few public symbol files. </p>
<div class="Footer">
  <p class="Dates">This page was created on 2nd December 2018 but was not published 
  until 28th <a href="../../../../../../../new/20/05.htm">May 2020</a>. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5634" -->
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>IoAllocateIrpEx</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>IoInitializeIrpEx </h1>
<p>This function initialises caller-supplied memory for use as an I/O Request Packet 
(IRP). </p>
<h2>Declaration </h2>
<pre class="source">VOID 
IoInitializeIrpEx (
    IRP *Irp,
    DEVICE_OBJECT *DeviceObject, 
    USHORT PacketSize, 
    CHAR StackSize);</pre>
<h3>Parameters </h3>
<p>The <span class="argument">Irp</span> argument is the address at which to prepare 
an <span class="struct">IRP</span> and supporting structures. </p>
<p>The <span class="argument">DeviceObject</span> argument is the address of a
<span class="struct">DEVICE_OBJECT</span> that represents the device that the request 
will be sent to. This argument can be <span class="constant">NULL</span>. </p>
<p>The <span class="argument">PacketSize</span> argument tells how many bytes are 
available at the address given by <span class="argument">Irp</span>. </p>
<p>The <span class="argument">StackSize</span> argument is the number of I/O stack 
locations to provide for the <span class="struct">IRP</span>. </p>
<h3>Return Value </h3>
<p>This function returns nothing. </p>
<h2>Availability </h2>
<p>The <span class="function">IoInitializeIrpEx</span> function is exported by name 
from the kernel in version 10.0 and higher. </p>
<h2>Documentation Status </h2>
<p>The <span class="function">IoInitializeIrpEx</span> function is not documented. 
It is, however, declared in WDM.H. </p>
<h2>Behaviour </h2>
<p>The <span class="function">IoInitializeIrpEx</span> function is the ancient, 
documented <span class="function">IoInitializeIrp</span> function except for having 
the <span class="argument">DeviceObject</span> argument as an elaboration. The only 
known purpose to the elaboration is to help device objects that anticipate receiving 
requests that carry additional parameters in an <a href="../irpext/index.htm">IRP 
extension</a>. Such a <span class="struct">DEVICE_OBJECT</span> has a set
<span class="constant">DO_DEVICE_IRP_REQUIRES_EXTENSION</span> bit (0x08000000) 
in its <span class="member">Flags</span>. Requests for such device objects are prepared 
and managed more efficiently if the IRP extension is in the same memory block as 
the <span class="struct">IRP</span> and its I/O stack locations. </p>
<p>The function prepares the <span class="argument">PacketSize</span> bytes at the 
address <span class="argument">Irp</span> to contain the following items in the 
following order: </p>
<ul>
  <li>the fixed-size <span class="struct">IRP</span> initialised for
  <span class="argument">StackSize</span> I/O stack locations; </li>
  <li>an array of <span class="argument">StackSize</span> <span class="struct">IO_STACK_LOCATION</span> 
  structures; </li>
  <li>if the <span class="argument">DeviceObject</span> requires it, space for as 
  many additional <span class="struct">IO_STACK_LOCATION</span> structures as can 
  instead contain one <span class="struct">
  <a href="../irpext/iop_irp_extension.htm">IOP_IRP_EXTENSION</a></span>. </li>
</ul>
<p>Beware that the function simply assumes that <span class="argument">PacketSize</span> 
is large enough for these items. To discover in advance what
<span class="argument">PacketSize</span> suffices, present the same
<span class="argument">DeviceObject</span> and <span class="argument">StackSize</span> 
to the <span class="function"><a href="sizeofirpex.htm">IoSizeOfIrpEx</a></span> 
function. </p>
<div class="Footer">
  <p class="Dates">This page was created on 27th July 2016. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c16.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="6338" -->
</div>

</body>

</html>

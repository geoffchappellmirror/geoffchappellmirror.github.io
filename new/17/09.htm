<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>New in September 2017</title>
<link rel="stylesheet" type="text/css" href="../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/tree.css">
<script type="text/javascript" src="../../_scripts/master.js"></script>
<script type="text/javascript" src="../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/tree.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript Header" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="14880" -->
<div class="Main">
  <h1>New in September 2017 </h1>
  <p>Some of you who’ve written to me over the past year or so of my return to research 
  and writing have asked if I might please tackle anything more widely relevant 
  than all this kernel-mode stuff. </p>
  <p>Yes, kernel-mode programming is all well and good—nobody lingers at this website 
  except for being interested in how things work inside and even deep inside—but 
  kernel-mode programming is unarguably highly specialised work, which Microsoft 
  anyway makes ever more pointless for programmers to dabble in. (Even well-funded 
  companies baulk at having to send to Microsoft a copy of a driver that they write 
  to deploy only on their own computers.) Surely what real-world Windows programmers 
  want is information that helps with user-mode issues. How about I turn my attention 
  to illuminating some of its dark corners? </p>
  <p>It’s a good point, and although this leopard is not about to change its spots, 
  let me see if I have by now done enough kernel-mode preparation that I can at 
  least try to start meeting you somewhere along the way to your practical user-mode 
  concerns—and maybe write something about Windows that actually involves windows.
  </p>
  <p>If you’ve been paying attention, you’ll know that one of my beliefs about reverse 
  engineering is that although the security industry has somehow managed to develop 
  it into some sort of commercial practice it is still too undisciplined for achieving 
  more than the picking of low-hanging fruit. For all the money that’s nowadays 
  thrown at reverse engineering in the name of computer security, when it comes 
  to incidents that relate closely to the operating system (in contrast to more 
  or less self-contained matters of application programming) reverse engineering 
  in what has become its commercial practice shows little sign of ever graduating 
  from hunter-gathering. Researchers scratch about for what information they can 
  find as and when they need it for whatever analysis is currently their employer’s 
  bread and butter. And then the industry at large kids itself—and consumers, insurers 
  and politicians—that its reverse engineering for computer security aims high and 
  reaches high. </p>
  <p>Imagine a security researcher who comes across software that uses the windowing 
  system in some way that will need to be navigated with care if they’re to get 
  anywhere at all with understanding what the software aims to do (but gets wrong, 
  or uses for mischief, or whatever). They will soon come across various objects 
  that WIN32K.SYS builds in memory for use by USER32.DLL, by GDI32.DLL and by the 
  software that’s actually being inspected. If the problem is an interesting one, 
  there will be many objects of many different types being used in different ways 
  for different purposes, possibly with subtle implications of how these objects 
  are shared between processes. If each researcher is left to work out any significant 
  amount of this from scratch, then each will soon be overwhelmed. I expect that 
  if this doesn’t happen more than occasionally and trouble anyone but me, it’s 
  because the security industry is oblivious of the problems it has become good 
  at <span class="emphasis">not</span> tackling. </p>
  <p>When a researcher is faced by some strange use of system functionality, it 
  must be close to crazy to hope that they each find much as hunter-gatherers. Wouldn’t 
  it go easier for everyone if a background understanding of the system functionality 
  had been farmed or mined? Then, researchers could give their whole attention to 
  their specific problem instead of first diverting to discover bits and pieces 
  of background that would ideally be available to them as a found resource—and 
  I could stop banging this drum! </p>
  <p>So, to kick this off, as much as I feasibly can in time stolen from nights 
  and weekends, here’s some background material on a smattering of structures that 
  are prepared by WIN32K but are deliberately visible in user mode. Much of it is 
  still rough. Very much more is in preparation. </p>
  <h2>Kernel </h2>
  <div class="Tree">
    <ul>
      <li class="Expanded Branch">Win32k
      <ul>
        <li class="Expanded Branch">Structures
        <ul>
          <li class="Expanded Branch">PROCESSINFO
          <ul>
            <li><a href="../../studies/windows/km/win32k/structs/processinfo/pif_flags.htm">PIF_flags or W32PF_Flags</a> </li>
          </ul>
          </li>
          <li class="Expanded Branch">THREADINFO
          <ul>
            <li><a href="../../studies/windows/km/win32k/structs/threadinfo/tif_flags.htm">TIF_flags</a> </li>
          </ul>
          </li>
        </ul>
        </li>
      </ul>
      </li>
    </ul>
  </div>
  <h2>Win32 </h2>
  <div class="Tree">
    <ul>
      <li class="Expanded Branch">USER32
      <ul>
        <li class="Expanded Branch">Structures
        <ul>
          <li><a href="../../studies/windows/win32/user32/structs/handleentry.htm">HANDLEENTRY</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/head.htm">HEAD</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/procdeskhead.htm">PROCDESKHEAD</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/procmarkhead.htm">PROCMARKHEAD</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/procobjhead.htm">PROCOBJHEAD</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/sbdata.htm">SBDATA</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/sbinfo.htm">SBINFO</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/shrobjhead.htm">SHROBJHEAD</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/thrdeskhead.htm">THRDESKHEAD</a> </li>
          <li><a href="../../studies/windows/win32/user32/structs/throbjhead.htm">THRDOBJHEAD</a> </li>
          <li class="Expanded Branch"><a href="../../studies/windows/win32/user32/structs/wnd/index.htm">WND</a>
          <ul>
            <li><a href="../../studies/windows/win32/user32/structs/wnd/exstyle.htm">ExStyle</a> </li>
            <li><a href="../../studies/windows/win32/user32/structs/wnd/exstyle2.htm">ExStyle2</a> </li>
            <li><a href="../../studies/windows/win32/user32/structs/wnd/state.htm">state</a> </li>
            <li><a href="../../studies/windows/win32/user32/structs/wnd/state2.htm">state2</a> </li>
            <li><a href="../../studies/windows/win32/user32/structs/wnd/style.htm">style</a> </li>
          </ul>
          </li>
        </ul>
        </li>
      </ul>
      </li>
    </ul>
  </div>
  <div class="Footer">
    <!--webbot bot="Include" U-Include="../../_include/c17.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017. Geoff Chappell. All rights reserved.  
<a href="../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="40548" -->
  </div>
</div>

</body>

</html>

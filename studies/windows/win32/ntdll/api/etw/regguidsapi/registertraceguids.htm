<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EtwRegisterTraceGuids</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/win32.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/win32.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<!--webbot bot="Include" U-Include="../../../../_include/draft.htm" TAG="BODY" startspan -->

<div class="Header">
  <p class="alert">DRAFT: Take more than your usual care. </p>
</div>

<!--webbot bot="Include" endspan i-checksum="34080" -->
<h1>EtwRegisterTraceGuids </h1>
<p>This function registers what is nowadays termed a classic event provider. </p>
<h2>Declaration </h2>
<pre>ULONG 
EtwRegisterTraceGuids (
    WMIDPREQUEST RequestAddress, 
    PVOID RequestContext, 
    LPCGUID ControlGuid, 
    ULONG GuidCount, 
    TRACE_GUID_REGISTRATION *TraceGuidReg, 
    LPCTSTR MofImagePath, 
    LPCTSTR MofResourceName, 
    TRACEHANDLE *RegistrationHandle);</pre>
<p>This function has both ANSI and Unicode forms with A and W suffixes, respectively.
</p>
<h3>Parameters </h3>
<p>The required <span class="argument">RequestAddress</span> argument is the address 
of a routine at which the provider can be called back for various purposes both 
during this function and later, until the provider is unregistered. The
<span class="argument">RequestContext</span> argument is an arbitrary caller-supplied 
value that will be passed back to the provider as an argument on all calls to the 
routine. </p>
<p>The required <span class="argument">ControlGuid</span> argument is the address 
of a GUID that uniquely identifies the provider. </p>
<p>The <span class="argument">GuidCount</span> argument tells how many
<span class="struct">TRACE_GUID_REGISTRATION</span> structures are in the array 
whose address is given as <span class="argument">TraceGuidReg</span>. These are 
optional in the sense that the latter can be <span class="constant">NULL</span> 
if the former is zero. Within each <span class="struct">TRACE_GUID_REGISTRATION</span> 
that is supplied, the <span class="member">Guid</span> supplies input and the
<span class="member">RegHandle</span> is filled in by the function as output.
</p>
<p>The <span class="argument">MofImagePath</span> and <span class="argument">MofResourceName</span> 
arguments are ignored in versions 6.0 and higher. They are anyway optional in earlier 
versions. </p>
<p>The required <span class="argument">RegistrationHandle</span> argument is the 
address of a variable that is to receive a 64-bit handle to the registered provider.
</p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../../_include/winerrorlasterror.htm" TAG="BODY" startspan -->

<p>The function returns zero for success, else a Win32 error code (which the function 
also sets as the thread’s last error). </p>

<!--webbot bot="Include" endspan i-checksum="61401" -->
<h2>Availability </h2>
<p>The <span class="function">EtwRegisterTraceGuidsA</span> and
<span class="function">EtwRegisterTraceGuidsW</span> functions are exported by name 
from NTDLL in version 5.2 and higher. The Unicode form has the native implementation. 
Both forms have higher-level availability as forwards from the ADVAPI32 exports
<span class="function">RegisterTraceGuidsA</span> and <span class="function">RegisterTraceGuidsW</span> 
functions in its versions 5.2 and higher, and as forwards from KERNELBASE exports 
with these names in its version 6.2 and higher. Starting with ADVAPI32 version 6.3, 
the ANSI form is forward first to KERNELBASE and then to NTDLL. </p>
<p>This note is concerned only with the function as implemented in NTDLL version 
5.2 and higher. The earlier implementations in ADVAPI32 may be covered some time, 
separately. Even in NTDLL, the implementation in version 5.2 is very different, 
notably for predating the <span class="function">NtTraceControl</span> function 
and instead working through Device I/O Control to the WMI support device, and is 
presently not covered here. </p>
<h2>Documentation Status </h2>
<p>The <span class="function">EtwRegisterTraceGuids</span> function is not documented. 
Well-behaved user-mode software would call the documented <span class="function">
RegisterTraceGuids</span> function instead. Note, however, that a strict reading 
of Microsoft’s documentation prohibits calling the higher-level function, but not 
the lower-level, from a <span class="routine">DllMain</span> routine. For some hint 
that Microsoft has experience either of or closely related to this point, see the 
cautionary note about the loader lock in Microsoft’s documentation of the
<a href="https://docs.microsoft.com/windows/desktop/etw/controlcallback">WMIDPREQUEST 
callback function</a>. </p>
<h2>Behaviour </h2>
<p>If any of the required pointer arguments, i.e., <span class="argument">RequestAddress</span>,
<span class="argument">ControlGuid</span> and <span class="argument">RegistrationHandle</span>, 
are <span class="constant">NULL</span> or if the <span class="argument">GuidCount</span> 
exceeds 64K, the function returns <span class="constant">ERROR_INVALID_PARAMETER</span>.
</p>
<p>The function saves its inputs into a user-mode context to retain while the provider 
remains registered. This can fail for insufficient memory. </p>
<div class="Footer">
  <p class="Dates">This page was created on 23rd
  <a href="../../../../../../../new/18/12.htm">December 2018</a> and was last modified 
  on 31st December 2018. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c18.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2018. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="6594" -->
</div>

</body>

</html>

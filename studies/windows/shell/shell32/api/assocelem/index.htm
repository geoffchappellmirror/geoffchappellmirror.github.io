<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Association Elements</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="55064" endspan -->
<h1>Association Elements </h1>
<p>Windows has long had a scheme of associating file extensions, program IDs, class 
IDs, etc, in the registry, mostly under <span class="regkey">HKEY_CLASSES_ROOT</span>. 
Programmers are left to find their way through an assortment of relevant settings 
which are mostly documented, though not as a single collection. At least for the 
shell’s purposes of examining associations, the shell itself nowadays has a formal 
notion of an association element which models all the registry settings for a particular 
association. </p>
<p>Every type of association element has a CLSID. The original way to create an 
association element was to pass the CLSID to the documented
<span class="function"><a href="../../../shlwapi/api/assocapi/create.htm">AssocCreate</a></span> 
function. For Windows Vista, this function’s undocumented support for these CLSIDs 
was moved to SHELL32, so that an assocation element is now created by passing the 
undocumented CLSID to the undocumented SHELL32 function
<span class="function"><a href="createelement.htm">AssocCreateElement</a></span>.
</p>
<p>The following types of association element are supported: </p>
<table>
  <tr>
    <th>Element Type </th>
    <th>CLSID Symbol </th>
    <th>CLSID Value </th>
    <th>Applicable Versions </th>
  </tr>
  <tr>
    <td><a href="application.htm">application</a> </td>
    <td><span class="constant">CLSID_AssocApplicationElement</span> </td>
    <td><span class="clsid">{0C2BF91B-8746-4FB1-B4D7-7C03F890B168}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="client.htm">client</a> </td>
    <td><span class="constant">CLSID_AssocClientElement</span> </td>
    <td><span class="clsid">{3C81E7FA-1F3B-464A-A350-114A25BEB2A2}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="clsid.htm">CLSID</a> </td>
    <td><span class="constant">CLSID_AssocClsidElement</span> </td>
    <td><span class="clsid">{57AEA081-5EE9-4C27-B218-C4B702964C54}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="extension.htm">extension</a> </td>
    <td><span class="constant">CLSID_AssocExtensionElement</span> </td>
    <td><span class="clsid">{039A5DEA-159C-48B8-9DD3-56413A78FDE2}</span> </td>
    <td>SHELL32 only </td>
  </tr>
  <tr>
    <td><a href="folder.htm">folder</a> </td>
    <td><span class="constant">CLSID_AssocFolderElement</span> </td>
    <td><span class="clsid">{7566DF7A-42CC-475D-A025-1205DDF4911F}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="perceived.htm">perceived</a> </td>
    <td><span class="constant">CLSID_AssocPerceivedElement</span> </td>
    <td><span class="clsid">{0DC5FB21-B93D-4E3D-BB2F-CE4E36A70601}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="progid.htm">ProgID</a> </td>
    <td><span class="constant">CLSID_AssocProgidElement</span> </td>
    <td><span class="clsid">{9016D0DD-7C41-46CC-A664-BF22F7CB186A}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="progidignoreunknown.htm">ignore-unknown ProgID</a> </td>
    <td><span class="constant">CLSID_AssocProgidElementIgnoreUnknown</span> </td>
    <td><span class="clsid">{503167C9-0060-471D-9DEA-C1E3306EC347}</span> </td>
    <td>SHELL32 only </td>
  </tr>
  <tr>
    <td><a href="shell.htm">shell</a> </td>
    <td><span class="constant">CLSID_AssocShellElement</span> </td>
    <td><span class="clsid">{C461837F-EA59-494A-B7C6-CD040E37185E}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="star.htm">star</a> </td>
    <td><span class="constant">CLSID_AssocStarElement</span> </td>
    <td><span class="clsid">{0633B720-6926-404C-B6B3-923B1A501743}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="system.htm">system</a> </td>
    <td><span class="constant">CLSID_AssocSystemElement</span> </td>
    <td><span class="clsid">{A6C4BAAD-4AF5-4191-8685-C2C8953A148C}</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><a href="unknownprogid.htm">unknown ProgID</a> </td>
    <td><span class="constant">CLSID_AssocUnknownProgidElement</span> </td>
    <td><span class="clsid">{E337427C-C96D-4183-9C00-B7B8671DF7B5}</span> </td>
    <td>SHELL32 only </td>
  </tr>
</table>
<p>Each association element implements the following interfaces: </p>
<ul>
  <li><span class="interface">
  <a href="../../../shlwapi/interfaces/iassociationelement.htm">IAssociationElement</a></span>
  </li>
  <li><span class="interface">
  <a href="../../interfaces/iobjectwithquerysource.htm">IObjectWithQuerySource</a></span>
  </li>
  <li><span class="interface"><a href="../../interfaces/ipersiststring2.htm">IPersistString2</a></span>
  </li>
</ul>
<p>The <span class="function">AssocCreateElement</span> function obtains an interface 
pointer to a newly created association element, which is only minimally constructed. 
All association elements expect initialisation in one of two ways. The aim in both 
is to provide the element with a query source, i.e., an <span class="interface">
<a href="../../../shlwapi/interfaces/iquerysource.htm">IQuerySource</a></span> implementation, 
which then supports the <span class="interface">IAssociationElement</span> methods.
</p>
<p>One initialisation technique is to specify the query source explicitly, by passing 
the address of its <span class="interface">IQuerySource</span> interface to the 
element’s <span class="method">SetSource</span> method. The other, arguably the 
preferred, way to initialise an assocation element is to let the element create 
its own query source from an initialisation string that is supplied to the
<span class="method">SetString</span> method. Different types of association elements 
interpret the initialisation string differently, mostly to decide the appropriate 
registry key to access as a query source. </p>
<p>All elements have <span class="method">SetString</span> fail if an initialisation 
string has already been accepted. All elements have <span class="method">SetSource</span> 
fail if a query source has already been accepted, including if created because of 
an earlier call to <span class="method">SetString</span>. However, all elements 
allow <span class="method">SetString</span> to override a query source that was 
already accepted through <span class="method">SetSource</span>. This last scenario 
seems not to have been anticipated: the previous query source is merely forgotten, 
rather than released. </p>
<p>The <span class="method">GetString</span> method produces a copy of the element’s 
initialisation string. The <span class="method">GetSource</span> method obtains 
a desired interface to the element’s query source. The <span class="method">GetClassID</span> 
method produces a copy of the element’s CLSID. </p>
<p>The <span class="interface">IAssociationElement</span> methods all query the 
query source for association settings. Without a query source, all these methods 
fail. Various well-known association settings are represented by values in the
<span class="enum"><a href="query.htm">ASSOCQUERY</a></span> enumeration, which 
is given as the first argument for all the methods. A second argument supplies an 
additional string to qualify the setting. Except for the <span class="method">QueryExists</span> 
method, a third argument is an address at which to receive the data for the setting.
</p>
<div class="Footer">
  <p class="Dates">This page was created on 2nd July 2009 and was last modified 
  on 18th July 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c09.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009. Geoff Chappell. All rights reserved.
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="50766" endspan -->
</div>

</body>

</html>

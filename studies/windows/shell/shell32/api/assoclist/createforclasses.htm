<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>AssocCreateForClasses</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="55064" endspan -->
<h1>AssocCreateForClasses </h1>
<p>This function creates a <span class="class">
<a href="../../classes/queryassociations.htm">QueryAssociations</a></span> object 
and populates it with <a href="../assocelem/index.htm">association elements</a>.
</p>
<h2>Declaration </h2>
<pre class="source">HRESULT
AssocCreateForClasses (
    const ASSOCIATIONELEMENT *rgClasses, 
    ULONG cClasses, 
    REFIID riid, 
    PVOID *ppv);</pre>
<p>Since the <span class="struct">ASSOCIATIONELEMENT</span> structure seems to be 
used only for this function, its definition is as well reproduced here: </p>
<pre class="source">typedef struct ASSOCIATIONELEMENT_ {
    ASSOCCLASS ac;
    HKEY hkClass;
    PCWSTR pszClass;
} ASSOCIATIONELEMENT;</pre>
<h3>Parameters </h3>
<p>The <span class="argument">rgClasses</span> argument provides an array of descriptors 
for the desired association elements. </p>
<p>The <span class="argument">cClasses</span> argument provides the number of elements.
</p>
<p>The <span class="argument">riid</span> argument provides the IID of a desired 
interface to the association array. </p>
<p>The <span class="argument">ppv</span> argument provides the address of a variable 
that is to receive a pointer to the desired interface. </p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../_include/hresult.htm" TAG="BODY" startspan -->

<p>The function returns zero for success, else an error code. </p>

<!--webbot bot="Include" i-checksum="1551" endspan -->
<h2>Behaviour </h2>
<p>The function first creates an association list. This is an internal object with 
an <span class="interface"><a href="../../interfaces/iassociationlist.htm">IAssociationList</a></span> 
interface. The list is populated with assocation elements, one for each of the
<span class="argument">cClasses</span> descriptors at <span class="argument">rgClasses</span>, 
in the order given. Failure to create the list is failure for the function. Failure 
to add an element to the list is failure for the function. Note however that failure 
to create an element is not. </p>
<p>Each <span class="struct">ASSOCIATIONELEMENT</span> descriptor in the given array 
specifies a type of element and provides for its initialisation from either an open 
registry key or a string (corresponding respectively to initialising through the
<span class="method">SetSource</span> and <span class="method">SetString</span> 
methods of the element’s <span class="interface">
<a href="../../interfaces/iobjectwithquerysource.htm">IObjectWithQuerySource</a></span> 
and <span class="interface"><a href="../../interfaces/ipersiststring2.htm">IPersistString2</a></span> 
interfaces). The following types are supported (as values in the
<span class="enum">ASSOCCLASS</span> enumeration): </p>
<table>
  <tr>
    <th>Type </th>
    <th>Symbolic Name </th>
    <th>Initialise From </th>
    <th>Class of Element Created </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td><span class="constant">ASSOCCLASS_SHELL_KEY</span> </td>
    <td>key </td>
    <td><span class="class"><a href="../assocelem/shell.htm">AssocShellElement</a></span>
    </td>
  </tr>
  <tr>
    <td>0x01 </td>
    <td><span class="constant">ASSOCCLASS_PROGID_KEY</span> </td>
    <td>key </td>
    <td><span class="class"><a href="../assocelem/progid.htm">AssocProgidElement</a></span>
    </td>
  </tr>
  <tr>
    <td>0x02 </td>
    <td><span class="constant">ASSOCCLASS_PROGID_STR</span> </td>
    <td>string </td>
    <td><span class="class">AssocProgidElement</span> </td>
  </tr>
  <tr>
    <td>0x03 </td>
    <td><span class="constant">ASSOCCLASS_CLSID_KEY</span> </td>
    <td>key </td>
    <td><span class="class"><a href="../assocelem/clsid.htm">AssocClsidElement</a></span>
    </td>
  </tr>
  <tr>
    <td>0x04 </td>
    <td><span class="constant">ASSOCCLASS_CLSID_STR</span> </td>
    <td>string </td>
    <td><span class="class">AssocClsidElement</span> </td>
  </tr>
  <tr>
    <td>0x05 </td>
    <td><span class="constant">ASSOCCLASS_APP_KEY</span> </td>
    <td>key </td>
    <td><span class="class"><a href="../assocelem/application.htm">AssocApplicationElement</a></span>
    </td>
  </tr>
  <tr>
    <td>0x06 </td>
    <td><span class="constant">ASSOCCLASS_APP_STR</span> </td>
    <td>string </td>
    <td><span class="class">AssocApplicationElement</span> </td>
  </tr>
  <tr>
    <td>0x07 </td>
    <td><span class="constant">ASSOCCLASS_SYSTEM_STR</span> </td>
    <td>string </td>
    <td><span class="class"><a href="../assocelem/system.htm">AssocSystemElement</a></span>
    </td>
  </tr>
  <tr>
    <td>0x08 </td>
    <td><span class="constant">ASSOCCLASS_FOLDER</span> </td>
    <td>hard-coded string “Folder” </td>
    <td><span class="class"><a href="../assocelem/folder.htm">AssocFolderElement</a></span>
    </td>
  </tr>
  <tr>
    <td>0x09 </td>
    <td><span class="constant">ASSOCCLASS_STAR</span> </td>
    <td>string </td>
    <td><span class="class"><a href="../assocelem/star.htm">AssocStarElement</a></span>
    </td>
  </tr>
</table>
<p>Having created the elements, the function creates a <span class="class">QueryAssociations</span> 
object to hold the elements as an association array. If this object cannot be created, 
the function fails. The function then sets its list of elements into the array by 
calling the <span class="method">SetList</span> method of the array’s
<span class="interface">
<a href="../../interfaces/iobjectwithassociationlist.htm">IObjectWithAssociationList</a></span> 
interface. If this fails or if the function cannot get the desired interface to 
the array, the function fails. </p>
<p>Queries of the array, through methods of its <span class="interface">
<a href="../../interfaces/iassociationarray.htm">IAssociationArray</a></span> and
<span class="interface">IQueryAssociations</span> interfaces, are satisfied from 
the first element that responds successfully. Elements are therefore to be given 
in the descriptors in order of decreasing precedence. </p>
<p>An association array can contain elements whose types are not supported through 
this function, but the array must be created separately (e.g., with the
<span class="function"><a href="../../../shlwapi/api/assocapi/create.htm">AssocCreate</a></span> 
function), the desired elements must be created separately (with the
<span class="function"><a href="../assocelem/createelement.htm">AssocCreateElement</a></span> 
function) and organised into a custom <span class="interface">IAssociationList</span> 
implementation and set into the array by explicitly calling the
<span class="method">SetList</span> method. If the desired elements are all listed 
above, then using this function is much more convenient. </p>
<h2>Availability </h2>
<p>The <span class="function">AssocCreateForClasses</span> function is exported 
by name from SHELL32.DLL in the version 6.00 from Windows Vista, and higher. </p>
<div class="Footer">
  <p class="Dates">This page was created on 20th July 2009 and was last modified 
  on 23rd July 2009. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c09.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009. Geoff Chappell. All rights reserved.
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="50766" endspan -->
</div>

</body>

</html>

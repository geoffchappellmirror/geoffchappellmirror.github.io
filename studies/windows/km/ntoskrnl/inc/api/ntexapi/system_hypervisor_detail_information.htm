<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SYSTEM_HYPERVISOR_DETAIL_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>SYSTEM_HYPERVISOR_DETAIL_INFORMATION </h1>
  <p>The <span class="struct">SYSTEM_HYPERVISOR_DETAIL_INFORMATION</span> structure 
  is what a successful call to <span class="function">
  <a href="../../../api/ex/sysinfo/query.htm">ZwQuerySystemInformation</a></span> 
  or <span class="function">NtQuerySystemInformation</span> produces in its output 
  buffer when given the information class <span class="constant">SystemHypervisorDetailInformation</span> 
  (0x9F). It collects the output from executing the <span class="instruction">
  <a href="../../../../cpu/cpuid/index.htm">cpuid</a></span> instruction repeatedly 
  for a set of hypervisor leaves, i.e., starting at 0x40000000. </p>
  <h2>Availability </h2>
  <p>The <span class="struct">SYSTEM_HYPERVISOR_DETAIL_INFORMATION</span> and the 
  corresponding information class are new for Windows 10. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">SYSTEM_HYPERVISOR_DETAIL_INFORMATION</span> structure 
  is not documented. </p>
  <!--webbot bot="Include" U-Include="../_include/type_info_urlmon.htm" TAG="BODY" startspan -->

<p>Microsoft does publish the practical equivalent of a C-language definition as 
type information in symbol files—not for the kernel, where the structure is prepared, 
nor even for low-level user-mode DLLs that interpret the structure, but for a handful 
of higher-level DLLs that might ordinarily be thought very distant from any involvement 
with the structure. Perhaps only by oversight, but starting as long ago as Windows 
8, Microsoft’s downloadable packages of public symbols have included a smattering 
of private symbol files and these continue to be available through the public symbol 
server. Precisely which DLLs have the type information varies between versions. 
COMBASE.DLL is among the more reliable nowadays. Disclosure in symbol files for 
URLMON.DLL stopped for the 1803 release of Windows 10 but is specially notable 
because of this DLL’s origins in Internet Explorer and thence for the strong suggestion 
that Microsoft’s programmers of Internet Explorer had access to more details of 
low-level Windows programming than Microsoft publishes for wider use (including 
by the programmers of competing web browsers). </p>

<!--webbot bot="Include" endspan i-checksum="12783" -->
  <h2>Layout </h2>
  <p>The <span class="struct">SYSTEM_HYPERVISOR_DETAIL_INFORMATION</span> is 0x70 
  bytes in both 32-bit and 64-bit Windows 10 at least to the 2004 release. Offsets, 
  names and types are from symbol files, as noted above. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Remarks" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Leaf </th>
        <th>Interpretation </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source"><a href="hv_details.htm">HV_DETAILS</a> HvVendorAndMaxFunction;</pre>
        </td>
        <td>0x40000000 </td>
        <td><span class="struct">
        <a href="../../shared/hvgdk_mini/hv_vendor_and_max_function.htm">HV_VENDOR_AND_MAX_FUNCTION</a></span>
        </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>
        <pre class="source">HV_DETAILS HypervisorInterface;</pre>
        </td>
        <td>0x40000001 </td>
        <td><span class="struct">
        <a href="../../shared/hvgdk_mini/hv_hypervisor_interface_info.htm">HV_HYPERVISOR_INTERFACE_INFO</a></span>
        </td>
      </tr>
      <tr>
        <td>0x20 </td>
        <td>
        <pre class="source">HV_DETAILS HypervisorVersion;</pre>
        </td>
        <td>0x40000002 </td>
        <td><span class="struct">
        <a href="../../shared/hvgdk_mini/hv_hypervisor_version_info.htm">HV_HYPERVISOR_VERSION_INFO</a></span>&nbsp;
        </td>
      </tr>
      <tr>
        <td>0x30 </td>
        <td>
        <pre class="source">HV_DETAILS HvFeatures;</pre>
        </td>
        <td>0x40000003 </td>
        <td><span class="struct">
        <a href="../../shared/hvgdk_mini/hv_x64_hypervisor_features.htm">HV_X64_HYPERVISOR_FEATURES</a></span>
        </td>
      </tr>
      <tr>
        <td>0x40 </td>
        <td>
        <pre class="source">HV_DETAILS HwFeatures;</pre>
        </td>
        <td>0x40000006 </td>
        <td><span class="struct">
        <a href="../../shared/hvgdk_mini/hv_x64_hypervisor_hardware_features.htm">
        HV_X64_HYPERVISOR_HARDWARE_FEATURES</a></span> </td>
      </tr>
      <tr>
        <td>0x50 </td>
        <td>
        <pre class="source">HV_DETAILS EnlightenmentInfo;</pre>
        </td>
        <td>0x40000004 </td>
        <td><span class="struct">
        <a href="../../shared/hvgdk_mini/hv_x64_enlightenment_information.htm">HV_X64_ENLIGHTENMENT_INFORMATION</a></span>
        </td>
      </tr>
      <tr>
        <td>0x60 </td>
        <td>
        <pre class="source">HV_DETAILS ImplementationLimits;</pre>
        </td>
        <td>0x40000005 </td>
        <td><span class="struct">
        <a href="../../shared/hvgdk_mini/hv_implementation_limits.htm">HV_IMPLEMENTATION_LIMITS</a></span>
        </td>
      </tr>
    </tbody>
  </table>
  <p>Each member is an <span class="struct">HV_DETAILS</span> structure. This is 
  a generic container for the <span class="instruction">cpuid</span> instruction’s 
  output in the <span class="register">eax</span>, <span class="register">ebx</span>,
  <span class="register">ecx</span> and <span class="register">edx</span> registers, 
  apparently only used when the input in <span class="register">eax</span> selects 
  a <span class="instruction">cpuid</span> leaf from the hypervisor series which 
  begins at 0x40000000. Microsoft defines more specific containers, presumably for 
  its internal use. These and the corresponding <span class="instruction">cpuid</span> 
  leaves are noted above in the Leaf and Interpretation columns. </p>
  <p>The <span class="struct">SYSTEM_HYPERVISOR_DETAIL_INFORMATION</span> members 
  are not quite arranged in increasing order of the corresponding
  <span class="instruction">cpuid</span> leaves. What may have happened is that 
  leaves 0x40000004 and 0x40000005 were initially omitted because an interpretation 
  of their output was already exposed in other structures that are the output for 
  older information classes: <span class="struct">SYSTEM_HYPERVISOR_QUERY_INFORMATION</span> 
  and <span class="struct">SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION</span>, 
  respectively. Then perhaps the raw output from these <span class="instruction">
  cpuid</span> leaves was tacked on. If so, the present layout was settled for the 
  original release of Windows 10. It has not been extended to report on
  <span class="instruction">cpuid</span> leaves that have become meaningful to the 
  kernel since the original Windows 10. </p>
  <p>A hypervisor’s presence is established by a set 0x80000000 bit in
  <span class="register">ecx</span> from <span class="instruction">cpuid</span> 
  leaf 1. This is taken as implying that <span class="instruction">cpuid</span> 
  leaves 0x40000000 and 0x40000001 are implemented. If <span class="instruction">
  cpuid</span> leaf 0x40000001 produces 0x31237648 in <span class="register">ebx</span>, 
  the hypervisor is deemed Microsoft-compatible. This in turn implies that
  <span class="instruction">cpuid</span> leaves 0x40000002 to 0x40000005 are implemented. 
  Implementation of <span class="instruction">cpuid</span> leaf 0x40000006 is inferred 
  only if <span class="register">eax</span> from <span class="instruction">cpuid</span> 
  leaf 0x40000000 is at least 0x40000006. For any <span class="instruction">cpuid</span> 
  leaf that is in this way deemed unimplemented, the corresponding
  <span class="struct">HV_DETAILS</span> is zeroed. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 9th July 2016 but was not published 
    until 13th <a href="../../../../../../../new/16/11.htm">November 2016</a>. It 
    was last modified on 19th <a href="../../../../../../../new/22/10.htm">November 
    2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

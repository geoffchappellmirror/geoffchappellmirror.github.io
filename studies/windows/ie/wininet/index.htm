<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>WININET</title>
<link rel="stylesheet" type="text/css" href="../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../_styles/ie.css">
<script type="text/javascript" src="../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../_scripts/ie.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="22084" endspan -->
<h1>The Windows Internet API (WININET) </h1>
<p>It must nowadays be rare that a substantial Windows application will not sometimes 
want to connect to the Internet—often without caring to get the user’s explicit 
assent. Long before, it would at least have been very odd had Microsoft not provided 
a Windows API through which arbitrary Windows applications may set about the humdrum 
work of Internet access. WININET is the DLL where this functionality is implemented.
</p>
<p>So, why do I place WININET in Internet Explorer for this study? I must admit 
that writing now in 2010 this placement is uneasy. WININET is used by just about 
every sort of Windows program, from malware to web browsers, as if calling on functionality 
taken for granted as part of Windows. Where Microsoft documents this functionality 
in the SDK, it is plainly in the section for <span class="citation">Win32 and COM 
Development</span>, not <span class="citation">Web Development</span>. A programmer 
coming to WININET now, or in the last decade, might easily and reasonably never 
think of it as having any particular connection with Internet Explorer. </p>
<p>My answer is that a large part of this survey’s motivation is to record for History 
how the functionality developed. The fact is that WININET was developed for Internet 
Explorer and was in its early years promoted by Microsoft as part of Internet Explorer. 
Of course, those were the years when Internet Explorer was often promoted as a means 
by which consumers of Windows, both users and programmers, could get new Windows 
functionality faster than waiting for the next Windows version. Boundaries were 
blurred, surely as deliberate strategy. Yet when the blurring became controversial 
enough to attract the attention of regulators and courts, the public record left 
behind shows next to nothing of any attempt to map what functionality actually went 
where in what software. I may be fighting the tide here, but I think that to place 
WININET with Windows rather than with Internet Explorer would be to revise history, 
not to record it. </p>
<p>Something Microsoft itself found to say in 1997 about whether WININET is a part 
of Windows or of Internet Explorer was: </p>
<blockquote>
  Windows 95, OEM Service Release 2 includes Internet Explorer 3.0, which in turn 
  includes the Windows Internet Extensions API (WinInet).
</blockquote>
<p>If only to me, the “in turn” is definitive. WININET was not then a Windows component 
that was being helpfully included with Internet Explorer even months ahead of eventual 
distribution with a new Windows version, as were COMCTL32 and SHLWAPI. No, WININET 
was plainly said to be an Internet Explorer component making its way into Windows 
because the former was bundled entirely into the latter. </p>
<p>Neither is it just Microsoft’s words that place WININET in Internet Explorer. 
The original Internet Explorer 3.0 has a WININET.DLL with a lower version number 
than ever got bundled into any Windows release. Many functions that have only ever 
been documented as WININET functions actually originated in a DLL, named URLCACHE.DLL, 
that seems to have been distributed only with Internet Explorer 3.0, never with 
any Windows version. All that was long ago, of course. A current test is simply 
that WININET’s version numbers still track the contemporaneous Internet Explorer 
release, not the Windows release. </p>
<p>For the general benefit of Windows programmers, I really would prefer that WININET 
were properly a component of Windows, not of Internet Explorer. If nothing else, 
Windows programmers would have more WININET functions to work with, since Microsoft’s 
settlement of anti-trust litigation would have required at least a few more to be 
documented (as Windows API functions used by Internet Explorer). </p>
<div class="Footer">
  <!--webbot bot="Include" U-Include="../_include/c10.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2010. Geoff Chappell. All rights reserved. 
<a href="../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62171" endspan -->
</div>

</body>

</html>

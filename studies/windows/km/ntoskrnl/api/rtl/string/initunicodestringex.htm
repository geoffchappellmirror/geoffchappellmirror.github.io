<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>RtlInitUnicodeStringEx</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>RtlInitUnicodeStringEx </h1>
<p>The <span class="function">RtlInitUnicodeStringEx</span> function initialises 
a <span class="struct"><a href="../../../inc/shared/ntdef/unicode_string.htm">UNICODE_STRING</a></span> structure 
as describing a given null-terminated Unicode string. </p>
<h2>Declaration </h2>
<pre class="source">NTSTATUS 
RtlInitUnicodeStringEx (
    UNICODE_STRING *DestinationString, 
    PCWSTR SourceString);</pre>
<h3>Parameters </h3>
<!--webbot bot="Include" U-Include="_include/initunicodestring_parameters.htm" TAG="BODY" startspan -->

<p>The required <span class="argument">DestinationString</span> argument provides 
the address of a <span class="struct">UNICODE_STRING</span> structure that the function 
is to initialise. </p>
<p>The optional <span class="argument">SourceString</span> argument is the address 
of a null-terminated Unicode string that is to be represented by the structure. 
This argument can be <span class="constant">NULL</span> to initialise the struture 
as representing no string. </p>

<!--webbot bot="Include" endspan i-checksum="19344" -->
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../../_include/ntstatus.htm" TAG="BODY" startspan -->

<p>The function returns <span class="constant">STATUS_SUCCESS</span> if successful, 
else a negative error code. </p>

<!--webbot bot="Include" endspan i-checksum="8" -->
<h2>Availability </h2>
<p>The <span class="function">RtlInitUnicodeStringEx</span> function is exported 
by name from the kernel in version 5.2 and higher. It is older in user mode, being 
exported by name from NTDLL in version 5.1 and higher. </p>
<h2>Documentation Status </h2>
<p>The <span class="function">RtlInitUnicodeStringEx</span> function is not documented.
</p>
<p>A C-language declaration is published in NTIFS.H from the Windows Driver Kit 
(WDK) since at least Windows Vista. Whether this declaration originated in an earlier 
Installable File System (IFS) Kit is not known, no such kit having been obtained 
for inspection. The declaration is guarded by conditional compilation that requires 
Windows XP and higher. This is the user-mode availability, even though NTIFS.H is 
ostensibly for kernel-mode programming. </p>
<p>What <span class="emphasis">is</span> documented is a routine named
<span class="routine">WdmlibRtlInitUnicodeStringEx</span> from a statically linked 
library named WDMSEC.LIB. This routine has the same code as the exported function. 
Supplying it as a library routine had the merit of making it available to new drivers 
that find themselves running on old Windows versions that do not export the function. 
The library seems to have been distributed first with the Device Driver Kit (DDK) 
for Windows XP, including to provide for its use when developing drivers for Windows 
2000. Though the routine is nowadays documented by Microsoft as “Available starting 
with Windows 2000”, it certainly was not available in the DDK for Windows 2000.
</p>
<p>Even this documentation—of the <span class="routine">WdmlibRtlInitUnicodeStringEx</span> 
routine, not the <span class="function">RtlInitUnicodeStringEx</span> function—looks 
to be very recent. The only date on it as observed online today, 17th March 2019, 
is 29th April 2018. It is not known in any DDK or WDK that Microsoft supplied with 
documentation files for offline reference, i.e., up to and including the WDK for 
Windows 7. Neither is it known in any of the downloadable documentation packages 
for Visual Studio up to and including Visual Studio 2017. It seems fair to say at 
the very least that Microsoft did not trouble to make the documentation prominent. 
This seems important to stress because the function and the library routine surely 
have no reason for existence except to deal with a serious defect of the older, 
documented <span class="function"><a href="initunicodestring.htm">RtlInitUnicodeString</a></span>. 
But what is the point to an improvement if it’s then kept quiet? </p>
<h2>Behaviour </h2>
<!--webbot bot="Include" U-Include="../nls/_include/unicode_string.htm" TAG="BODY" startspan -->

<p>The intention of the <span class="struct">UNICODE_STRING</span> structure is 
to keep together both the address and size of a Unicode string, presumably to save 
on passing them as separate arguments for subsequent work with the string and to 
save on repeated re-reading of the whole string to rediscover its size. Indeed, 
the structure keeps two sizes. The <span class="member">Length</span> member is 
the size in bytes of the array of Unicode characters at <span class="member">Buffer</span>. 
If this array is null-terminated, which it explicitly need not be, then
<span class="member">Length</span> does not count the null terminator. The
<span class="member">MaximumLength</span> member is the size in bytes of the memory 
from <span class="member">Buffer</span> onwards. </p>

<!--webbot bot="Include" endspan i-checksum="43448" -->
<p>Both the <span class="function">RtlInitUnicodeString</span> and
<span class="function">RtlInitUnicodeStringEx</span> functions initialise a
<span class="struct">UNICODE_STRING</span> so that it describes a buffer that contains 
exactly the given null-terminated Unicode string. Microsoft’s names
<span class="argument">DestinationString</span> and <span class="argument">SourceString</span> 
for the function’s arguments are unfortunate for suggesting some sort of data transfer. 
No source string is copied, only its address. </p>
<p>The only functional difference between <span class="function">RtlInitUnicodeStringEx</span> 
and the older <span class="function">RtlInitUnicodeString</span> is to make an error 
of a case for which the latter can’t escape being defective because it has no means 
of reporting an error. Microsoft’s own kernel-mode programming makes extensive use 
of <span class="function">RtlInitUnicodeStringEx</span> as if superseding
<span class="function">RtlInitUnicodeString</span>. </p>
<h3>Initialisation </h3>
<p>If the <span class="argument">SourceString</span> argument is
<span class="constant">NULL</span>, the <span class="argument">DestinationString</span> 
gets a minimal initialisation to represent nothing: <span class="member">Length</span> 
and <span class="member">MaximumLength</span> are zero and <span class="member">
Buffer</span> is <span class="constant">NULL</span>. Ordinarily,
<span class="argument">SourceString</span> is not <span class="constant">NULL</span>, 
and <span class="argument">DestinationString</span> gets initialised such that
<span class="member">Length</span> and <span class="member">MaximumLength</span> 
are respectively the sizes in bytes of the string not counting and counting its 
null terminator, and <span class="member">Buffer</span> is the string’s address 
as given. </p>
<p>If, however, the given string has more than 0x7FFE characters, not counting its 
null terminator, it is too long to be represented faithfully by the 16-bit
<span class="member">Length</span> and <span class="member">MaximumLength</span>, 
and so the function fails, returning <span class="constant">STATUS_NAME_TOO_LONG</span>.
</p>
<h3>Quirk </h3>
<p>It is unclear what is intended for the <span class="argument">DestinationString</span> 
when the function fails. The original implementation leaves it untouched. Microsoft’s 
usual practice is anyway that failure leaves a function’s outputs undefined. Yet 
a small reworking for version 6.0 has as its only effect that the function’s failure 
leaves the <span class="argument">DestinationString</span> with
<span class="member">Buffer</span> pointing to the <span class="argument">SourceString</span> 
and with zero for both the <span class="member">Length</span> and
<span class="member">MaximumLength</span>. It is here thought that the intention 
is not to define behaviour for failure but to limit the damage from subsequent use 
of the <span class="struct">UNICODE_STRING</span> if this function is not checked 
for failure. </p>
<h3>IRQL </h3>
<p>The kernel-mode implementation is in a non-paged section in all versions. Provided 
that <span class="emphasis">both</span> the <span class="struct">UNICODE_STRING</span> 
and the Unicode string that are addressed through the given arguments are in non-paged 
memory, the <span class="function">RtlnitUnicodeStringEx</span> function can safely 
be called even at <span class="constant">DISPATCH_LEVEL</span> and higher. </p>
<h3>Documentation Errors </h3>
<p>If only for now, documentation errors can only be in what Microsoft says of the 
function’s parallel implementation as the <span class="routine">WdmlibRtlInitUnicodeStringEx</span> 
library routine. If only as this documentation shows today, 17th March 2019, as
<a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/content/wdmsec/nf-wdmsec-wdmlibrtlinitunicodestringex">
WmdlibRtlInitUnicodeStringEx function (wdmsec.h) - Windows drivers | Microsoft Docs</a>, 
it has a highlighted box whose primary effect on readers may be to encourage a realisation 
that the documentation has been cobbled together in haste: </p>
<blockquote>
  <b>Note</b> If the source string is longer than MAX_USTRING - 1 bytes, <b>WdmlibRtlInitUnicodeStringEx</b> 
  sets the <b>Length</b> member of the <b>UNICODE_STRING</b> structure pointed to 
  by <i>DestinationString</i> to MAX_USTRING - 2, and sets the <b>MaximumLength</b> 
  member of this structure to MAX_USTRING. In this case, the <b>Length</b> and
  <b>MaximumLength</b> values misrepresent the length of the null-terminated source 
  string, and relying on the accuracy of these values is potentially dangerous.</blockquote>
<p>Leave aside that no <span class="constant">MAX_USTRING</span> is defined in any 
header in a publicly distributed WDK or SDK and that even Google knows nearly nothing 
of it except from what appears to be leaked Microsoft source code. What Microsoft 
describes in this box is not what <span class="routine">WdmlibRtlInitUnicodeStringEx</span> 
does but what it exists to correct! Change <span class="routine">WdmlibRtlInitUnicodeStringEx</span> 
(back) to <span class="function">RtlInitUnicodeString</span> and you have a very 
apt warning to include with documentation of <span class="function">RtlInitUnicodeString</span>.
</p>
<div class="Footer">
  <p class="Dates">This page was created on 16th
  <a href="../../../../../../../new/19/03.htm">March 2019</a> and was last modified 
  on 2nd June 2020. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1920.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2019-2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5277" -->
</div>

</body>

</html>

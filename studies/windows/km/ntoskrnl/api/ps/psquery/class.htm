<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>THREADINFOCLASS</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<!--webbot bot="Include" U-Include="../../../../_include/draft.htm" TAG="BODY" startspan -->

<div class="Header">
  <p class="alert">DRAFT: Take more than your usual care. </p>
</div>

<!--webbot bot="Include" endspan i-checksum="34080" -->
<h1>THREADINFOCLASS </h1>
<p>The <span class="enum">THREADINFOCLASS</span> is an enumeration whose values 
are intended as input to the <span class="function">ZwQueryInformationThread</span> 
and <span class="function">ZwSetInformationThread</span> functions. Different values 
select different types of information to query or set. </p>
<h2>Documentation Status </h2>
<p>A C-language definition of the <span class="enum">THREADINFOCLASS</span> enumeration 
has been publicly available in the NTDDK.H header since at least the Device Driver 
Kit (DDK) for Windows NT 3.51. It there supported the declaration of the
<span class="function">ZwSetInformationThread</span> function which is exported 
from both the kernel and NTDLL in version 3.10 and higher but was not formally documented 
even for kernel-mode programming until some time after the Windows Driver Kit (WDK) 
for Windows 7 in 2009. Such kernel-mode documentation as exists of either function 
presents only a handful of the defined values. In the WDK for Windows 10, even the 
definition in NTDDK.H has become selective. </p>
<p>Microsoft’s first formal documentation of either <span class="enum">THREADINFOCLASS</span> 
or of any function that uses it was in the Software Development Kit (SDK) for user-mode 
programming. A WINTERNL.H file was added to the SDK in 2002, apparently for Microsoft’s 
compliance with a settlement concerning unfair use of internal Windows APIs by “middleware” 
products such as, but in no way limited to, Internet Explorer. The file presents 
a greatly reduced C-language definition, just of the <span class="constant">ThreadIsIoPending</span> 
case, which contemporaneous documentation of the <span class="function">NtQueryInformationThread</span> 
function quite rightly noted would better be accessed via the documented API function
<span class="function">GetThreadPendingIoFlag</span>. This documentation later added
<span class="constant">ThreadQuerySetWin32StartAddress</span> to its description, 
though apparently without this case ever making it to the definition in the header.
</p>
<p>As for the values that are added for Windows 10 but which the definition in the 
contemporaneous WDK skips, these are knowable from type information in symbol files. 
The surprise, however, is <span class="emphasis">which</span> symbol files—not for 
the kernel, where the enumeration is interpreted and the relevant functions are 
implemented, nor even NTDLL, but for various higher-level user-mode DLLs. The most 
conspicuous is URLMON.DLL, for it is a component of Internet Explorer, i.e., of 
the most prominent “middleware” that compelled even the grudgingly partial disclosure 
in 2002. The symbol files that have been publicly available for URLMON since 2012 
show that it is built not with the reduced <span class="enum">THREADINFOCLASS</span> 
from WINTERNL.H but with the whole thing. However URLMON was built in the years 
when Microsoft’s compliance with the settlement was reviewed by—it might be hoped—competent 
regulators, it is now built with more knowledge of low-level Windows than Microsoft 
publishes even for kernel-mode device driver programmers. Do not tell me that there 
was not at Microsoft somewhere some time someone who enjoyed mocking the government 
and courts over this. (I say this as criticism of the latter very much more than 
of Microsoft.) </p>
<h2>Enumeration </h2>
<p>Of the many defined cases, some can be used successfully only to query or only 
to set. Some can’t usefully be called either way—at least, not in all versions. 
The present purpose however is not to show which values are implemented non-trivially 
in which versions, but which values are defined in which versions, as much as can 
be known. </p>
<table>
  <tr>
    <th>Numeric Value </th>
    <th>Symbolic Name </th>
    <th>Versions </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td><span class="declared constant">ThreadBasicInformation</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x01 </td>
    <td><span class="declared constant">ThreadTimes</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x02 </td>
    <td><span class="constant">ThreadPriority</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x03 </td>
    <td><span class="constant">ThreadBasePriority</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x04 </td>
    <td><span class="declared constant">ThreadAffinityMask</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x05 </td>
    <td><span class="declared constant">ThreadImpersonationToken</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x06 </td>
    <td><span class="declared constant">ThreadDescriptorTableEntry</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x07 </td>
    <td><span class="declared constant">ThreadEnableAlignmentFaultFixup</span>
    </td>
    <td>all </td>
  </tr>
  <tr>
    <td rowspan="2">0x08 </td>
    <td><span class="declared constant">ThreadEventPair</span> </td>
    <td>3.10 to 4.0 </td>
  </tr>
  <tr>
    <td><span class="declared constant">ThreadEventPair_Reusable</span> </td>
    <td>5.0 and higher </td>
  </tr>
  <tr>
    <td>0x09 </td>
    <td><span class="constant">ThreadQuerySetWin32StartAddress</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x0A </td>
    <td>unknown </td>
    <td>3.10 only </td>
  </tr>
  <tr>
    <td>0x0B (3.10); <br>
    0x0A </td>
    <td><span class="declared constant">ThreadZeroTlsCell</span> </td>
    <td>all </td>
  </tr>
  <tr>
    <td>0x0B </td>
    <td><span class="declared constant">ThreadPerformanceCount</span> </td>
    <td>3.51 and higher </td>
  </tr>
  <tr>
    <td>0x0C </td>
    <td><span class="declared constant">ThreadAmILastThread</span> </td>
    <td>3.51 and higher </td>
  </tr>
  <tr>
    <td>0x0D </td>
    <td><span class="declared constant">ThreadIdealProcessor</span> </td>
    <td>4.0 and higher </td>
  </tr>
  <tr>
    <td>0x0E </td>
    <td><span class="declared constant">ThreadPriorityBoost</span> </td>
    <td>4.0 and higher </td>
  </tr>
  <tr>
    <td>0x0F </td>
    <td><span class="declared constant">ThreadSetTlsArrayAddress</span> </td>
    <td>4.0 and higher </td>
  </tr>
  <tr>
    <td>0x10 </td>
    <td><span class="constant">ThreadIsIoPending</span> </td>
    <td>5.0 and higher </td>
  </tr>
  <tr>
    <td>0x11 </td>
    <td><span class="declared constant">ThreadHideFromDebugger</span> </td>
    <td>5.0 and higher </td>
  </tr>
  <tr>
    <td>0x12 </td>
    <td><span class="declared constant">ThreadBreakOnTermination</span> </td>
    <td>5.2 and higher </td>
  </tr>
  <tr>
    <td>0x13 </td>
    <td><span class="declared constant">ThreadSwitchLegacyState</span> </td>
    <td>5.2 from Windows Server 2003 SP1, and higher </td>
  </tr>
  <tr>
    <td>0x14 </td>
    <td><span class="declared constant">ThreadIsTerminated</span> </td>
    <td>5.2 from Windows Server 2003 SP1, and higher </td>
  </tr>
  <tr>
    <td>0x15 </td>
    <td><span class="declared constant">ThreadLastSystemCall</span> </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x16 </td>
    <td><span class="declared constant">ThreadIoPriority</span> </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x17 </td>
    <td><span class="declared constant">ThreadCycleTime</span> </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x18 </td>
    <td><span class="constant">ThreadPagePriority</span> </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x19 </td>
    <td><span class="declared constant">ThreadActualBasePriority</span> </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x1A </td>
    <td><span class="declared constant">ThreadTebInformation</span> </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x1B </td>
    <td><span class="declared constant">ThreadCSwitchMon</span> </td>
    <td>6.0 and higher </td>
  </tr>
  <tr>
    <td>0x1C </td>
    <td><span class="declared constant">ThreadCSwitchPmu</span> </td>
    <td>6.1 and higher </td>
  </tr>
  <tr>
    <td>0x1D </td>
    <td><span class="declared constant">ThreadWow64Context</span> </td>
    <td>6.1 and higher </td>
  </tr>
  <tr>
    <td>0x1E </td>
    <td><span class="declared constant">ThreadGroupInformation</span> </td>
    <td>6.1 and higher </td>
  </tr>
  <tr>
    <td>0x1F </td>
    <td><span class="declared constant">ThreadUmsInformation</span> </td>
    <td>6.1 and higher </td>
  </tr>
  <tr>
    <td>0x20 </td>
    <td><span class="declared constant">ThreadCounterProfiling</span> </td>
    <td>6.1 and higher </td>
  </tr>
  <tr>
    <td>0x21 </td>
    <td><span class="declared constant">ThreadIdealProcessorEx</span> </td>
    <td>6.1 and higher </td>
  </tr>
  <tr>
    <td>0x22 </td>
    <td><span class="declared constant">ThreadCpuAccountingInformation</span>
    </td>
    <td>6.2 and higher </td>
  </tr>
  <tr>
    <td>0x23 </td>
    <td><span class="declared constant">ThreadSuspendCount</span> </td>
    <td>6.3 and higher </td>
  </tr>
  <tr>
    <td>0x24 </td>
    <td><span class="undocumented constant">ThreadHeterogeneousCpuPolicy</span>
    </td>
    <td>10.0 and higher </td>
  </tr>
  <tr>
    <td>0x25 </td>
    <td><span class="undocumented constant">ThreadContainerId</span> </td>
    <td>10.0 and higher </td>
  </tr>
  <tr>
    <td>0x26 </td>
    <td><span class="undocumented constant">ThreadNameInformation</span> </td>
    <td>10.0 and higher </td>
  </tr>
  <tr>
    <td>0x27 </td>
    <td><span class="undocumented constant">ThreadSelectedCpuSets</span> </td>
    <td>10.0 and higher </td>
  </tr>
  <tr>
    <td>0x28 </td>
    <td><span class="undocumented constant">ThreadSystemThreadInformation</span>
    </td>
    <td>10.0 and higher </td>
  </tr>
  <tr>
    <td>0x29 </td>
    <td><span class="declared constant">ThreadActualGroupAffinity</span> </td>
    <td>10.0 and higher </td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td><span class="constant">MaxThreadInfoClass</span> </td>
    <td>all </td>
  </tr>
</table>
<div class="Footer">
  <p class="Dates">This page was created on 23rd
  <a href="../../../../../../../new/17/07.htm">July 2017</a>. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c17.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="6466" -->
</div>

</body>

</html>

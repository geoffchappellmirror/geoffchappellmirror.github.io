<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Character Constants</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/msvc.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/msvc.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="24274" endspan -->
<!--webbot bot="Include" U-Include="../../../_include/sketch.htm" TAG="BODY" startspan -->

<p class="alert">SKETCH OF HOW RESEARCH MIGHT CONTINUE AND RESULTS BE PRESENTED 
- PREVIEW ONLY </p>

<!--webbot bot="Include" i-checksum="42246" endspan -->
<h1>Character Constants </h1>
<h2>Syntax </h2>
<blockquote>
  <p>[<span class="placeholder">prefix</span>]<span class="constant">&#39;</span>[<span class="placeholder">c-char-sequence</span>]<span class="constant">&#39;</span>
  </p>
</blockquote>
<p>The introductory sequence for a character constant is </p>
<ul>
  <li>a single-quote </li>
  <li>or a single-character <span class="placeholder">prefix</span>, which can 
  only be <span class="constant">L</span>, followed immediately by a 
  single-quote
  </li>
</ul>
<p>An <span class="constant">S</span> in the position of
<span class="placeholder">prefix</span> does not introduce a character constant, 
but is a fatal error (C1190) unless compiling for managed code (as with the
<span class="switch">/clr</span> option) with either the <span class="switch">/E</span> 
option active or the <span class="symbol">System.Object</span> symbol 
successfully imported as metadata (as from the <span class="directive">#using 
&lt;mscorlib.dll&gt;</span> 
directive). </p>
<p>The optional <span class="placeholder">c-char-sequence</span> begins 
immediately after the opening single-quote. It is any number of elements of the 
following types in any order: </p>
<ul>
  <li>an <span class="placeholder">escape-sequence</span>, meaning a backslash 
  and one or more subsequent characters (to make an <a href="escape.htm">escape 
  sequence</a>)
  </li>
  <li>a <span class="placeholder">c-char</span>, meaning any character other 
  than a backslash, single-quote or new-line </li>
</ul>
<p>A single-quote where a <span class="placeholder">c-char</span> or
<span class="placeholder">escape-sequence</span> is permitted terminates the
<span class="placeholder">c-char-sequence</span>. It is an error (C2001) if the 
line ends without this closing single-quote. </p>
<p>Data for the character constant is built initially as a string, with a null 
character appended. It is an error (C2026) if this string data gets too long. 
The present limit is roughly 2048 bytes. (The imprecision applies when the 
string data is produced as wide characters. Conversion of one or two source-set 
characters to wide characters is done using space further into the same buffer 
in which the string data is built. The limit is therefore reached when the 
string data is a few bytes short of 2048. Exactly how short depends on the 
mixture of single-byte and double-byte characters as the limit is approached.) </p>
<p>If <span class="placeholder">prefix</span> is absent, then each
<span class="placeholder">c-char</span> or <span class="placeholder">
escape-sequence</span> 
specifies one character or byte, respectively, of string data. Be aware however, 
of a subtlety to the ordering. Once an escape sequence is encountered in the
<span class="placeholder">c-char-sequence</span>, the bytes that correspond to 
each of any more escape sequences are added not to the end of the string data 
but to the start. With a <span class="placeholder">prefix</span>, each
<span class="placeholder">c-char</span> or <span class="placeholder">
escape-sequence</span> 
specifies one wide character for the string data, in the natural order. </p>
<p>The character constant becomes one token, a <span class="definition">constant 
token</span>, whose value is obtained from the string data specified by
<span class="placeholder">c-char-sequence</span> (less the null terminator). </p>
<p>When <span class="placeholder">prefix</span> is absent, it is an error 
(C2137) if there is no string data, i.e., if <span class="placeholder">
c-char-sequence</span> 
is omitted, and it is an error (C2015) if there are more than 4 bytes of string 
data. The number formed from the string data, interpreting successive bytes as 
base-256 digits from most significant to least, becomes the value of the token. 
The type of the constant is a <span class="type">char</span> if there is one 
byte of string data, else an <span class="type">int</span>. </p>
<p>With a <span class="placeholder">prefix</span>, the first wide character of 
string data (else zero, if <span class="placeholder">c-char-sequence</span> is 
omitted) becomes the value of the token. The type of the constant is a <span class="type">
wchar_t</span> if the <span class="switch">/Zc:wchar_t</span> option is active, 
else an <span class="type">unsigned short</span>. Wide characters other than the 
first are ignored, with a warning (C4066). </p>
<h3>Translation Precedence </h3>
<p>In general, the characters of a string constant are read (and the preceding 
notes on syntax are to be interpreted) as if trigraphs and line splices are 
already translated.
</p>
<p>An exception exists, whether by design or oversight. Where the introduction 
to a character constant has both a <span class="placeholder">prefix</span> and 
single-quote, the two must be consecutive in the actual input stream. Separation 
by a trigraph or line splice prevents recognition of <span class="placeholder">
prefix</span> as starting a character constant. </p>
<div class="Footer">
  <p class="Dates">This page was created on 29th November 2006 and was last 
  modified on 6th January 2010. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c0610.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2006-2010. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="62416" endspan -->
</div>

</body>

</html>
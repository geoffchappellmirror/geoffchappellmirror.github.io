<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Aggregation</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="14798" endspan -->
<h1>Aggregation </h1>
<p>An essential feature of Microsoft’s Component Object Model (COM) is that objects 
be reusable. A general meaning for this is that one programmer may write the code 
for an object which may then, without adaptation, be contained by an object written 
by another programmer. Indeed, this containment is possible just with knowledge 
of the inner object’s interfaces. At its simplest, containment just has the outer 
object implement its interfaces in terms of the inner object’s interfaces. Though 
the outer object is a COM server to its clients, it appears to the inner object 
as a client like any other. This has the merit that the inner object does not need 
to have anticipated the reuse, but it leaves the outer object with unwelcome overhead 
since even methods that are passed straight through to the inner object need to 
be explicitly coded as such. </p>
<p>COM also provides for a particular sort of containment, called aggregation, in 
which the containment is greatly eased for the outer object because the inner object 
is explicitly prepared for it. The effect is that the inner object’s methods are 
exposed as if they are the outer object’s but without the outer object having to 
code for delegation of every method. An essential part of the technique is that 
the inner object implements an explicit <span class="interface">IUnknown</span> 
interface that gives access to its other interfaces, but has all its other interfaces 
delegate their <span class="interface">IUnknown</span> methods to an outer
<span class="interface">IUnknown</span> interface that is provided by the outer 
object when creating the inner object. The techniques comes with some rules, both 
for implementation of the inner object and for how the outer object may use the 
inner object’s interfaces. In particular, when the outer object successfully queries 
the inner object’s explicit <span class="interface">IUnknown</span> interface for 
an interface other than <span class="interface">IUnknown</span>, it must follow 
by releasing its own outer <span class="interface">IUnknown</span> interface. Correspondingly, 
when releasing an inner object’s interface other than <span class="interface">IUnknown</span>, 
the outer object must first add a reference to the outer <span class="interface">
IUnknown</span>. </p>
<p>Since version 5.00, SHLWAPI exports two functions to help with these rules for 
proper reference counting in aggregation: </p>
<ul>
  <li><span class="undocumented function"><a href="shweakqueryinterface.htm">SHWeakQueryInterface</a></span>
  </li>
  <li><span class="undocumented function"><a href="shweakreleaseinterface.htm">SHWeakReleaseInterface</a></span>
  </li>
</ul>
<p>Neither is yet documented. </p>
<div class="Footer">
  <p class="Dates">This page was created on 2nd June 2009 and was last modified 
  on 8th June 2009. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c09.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009. Geoff Chappell. All rights reserved.
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="7105" endspan -->
</div>

</body>

</html>

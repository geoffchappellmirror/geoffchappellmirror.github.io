<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>New and Updated in May 2019</title>
<link rel="stylesheet" type="text/css" href="../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/tree.css">
<script type="text/javascript" src="../../_scripts/master.js"></script>
<script type="text/javascript" src="../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/tree.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript Header" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="14880" -->
<div class="Main">
  <h1>New and Updated in May 2019 </h1>
  <p>A gauche attempt on Twitter to suggest that poor performance of a relatively 
  new Windows feature—described by Microsoft as “a highly-optimized platform security 
  feature”—may have other explanations than incompetent choice of algorithm led 
  to my thinking that I might usefully get up-to-date about the feature and especially 
  that I should put my money where my mouth is about how <span class="highlight">
  observation is not explanation</span>. </p>
  <p>One of the things that consistently surprises me about that side of the software 
  industry that examines technical shortcomings is that we easily enough prize observation 
  but see little commercial imperative in converting our observation of a fault 
  into an understanding of it. Much of the reason, of course, is that when the fault 
  is in somebody else’s software—as it always is, of course—then the cost of understanding 
  it is for the somebody else. Fair enough, too! Indeed, disciplined observation 
  is not cost-free, either, and I leave for another time that even though you save 
  the somebody else the initial grunt work of pinpointing for them where to start 
  looking, you may yet be brushed off countless times by several levels of obtuse 
  screeners before you get the attention of any programmer who actually knows the 
  subject. </p>
  <p>But I think this all disguises something: the cost of understanding, as most 
  of us perceive this cost, is higher than it would be if we were more skilled at 
  the understanding. Perhaps because we tend to think of this work as something 
  to push off to others or to brush away, we tend not to cultivate the necessary 
  investigative skills or to support the maintenance of huge amounts of background 
  knowledge that give the skills more to feed on. Anything that we’re not well practised 
  at inevitably seems more difficult and costly than it really is. </p>
  <p>Now, this is not the place to talk in detail of the particular observations 
  that I investigated for an explanation—or for me to write up the explanation. 
  What Bruce Dawson observed was
  <a href="https://randomascii.wordpress.com/2019/04/21/on2-in-createprocess">O(n^2) 
  in CreateProcess</a> from spending crazy amounts of time in one routine that he 
  described rather too casually for my tastes as “too large to be easily reverse 
  engineered”. To me, explaining Bruce’s observations was incidental work that very 
  plausibly took me less time than Bruce spent on making them and even on writing 
  them up. This is not at all to say that Bruce’s observations weren’t worth making 
  or that they weren’t made well: disciplined observation is no small skill. It’s 
  also not to say that an explanation isn’t worth having. Microsoft will easily 
  enough fix its bug. Sufficiently interested “security researchers” will then pick 
  apart what’s changed and get some idea of the problem’s cause. But I, for one, 
  do count it as valuable to have an explanation in advance. A relatively slight 
  coding error is credibly the cause of numerous reports over roughly five years 
  that this highly promoted security feature is a poor performer despite what its 
  manufacturer claims is high optimisation. We’re unlikely ever to have an account 
  from Microsoft. Our society needs more resources for independent evaluation of 
  what our software does. Our industry ought to be better at delivering this.
  </p>
  <p>Of course, I too have no end of excuses about how I could do this or that study 
  except that it’s impractical in competition with everything else that seems more 
  important. I very likely never will write up this passing curiosity of Control 
  Flow Guard’s poor performance at something that doesn’t directly affect me. I 
  did, however, take it as a spur to catch up on the feature overall as an important 
  development in Windows which my busy life had somehow left neglected. In the process 
  I had to draw on a surprisingly wide range of notes on memory management in the 
  Windows kernel, both old and new, some in good shape, most not, including many 
  that I started piecing together in 2016 but did not publish before moving on to 
  other things. Let’s see how far I can get with a publication effort this time.
  </p>
  <h2>Kernel </h2>
  <div class="Tree">
    <ul>
      <li class="Expanded Branch">Kernel
      <ul>
        <li class="Expanded Branch">API
        <ul>
          <li class="Expanded Branch">Memory Manager
          <ul>
            <li class="Expanded Branch">Control Flow Guard
            <ul>
              <li class="Expanded Branch">Structures
              <ul>
                <!-- li><a href="../../studies/windows/km/ntoskrnl/api/mm/cfg/mi_cfg_bitmap_info.htm">MI_CFG_BITMAP_INFO</a> (new) </li -->
                <li>MI_CFG_BITMAP_INFO (in preparation) </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">Kernel Virtual Addresses
            <ul>
              <li class="Expanded Branch">Structures
              <ul>
                <!-- li><a href="../../studies/windows/km/ntoskrnl/api/mm/kernelva/mi_assigned_region_types.htm">MI_ASSIGNED_REGION_TYPES</a> (new) </li -->
                <!-- li><a href="../../studies/windows/km/ntoskrnl/api/mm/kernelva/mi_system_va_type.htm">MI_SYSTEM_VA_TYPE</a> (new) </li -->
                <li>MI_ASSIGNED_REGION_TYPES (in preparation) </li>
                <li>MI_SYSTEM_VA_TYPE (in preparation) </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">Support
            <ul>
              <li class="Expanded Branch">Structures
              <ul>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/ps/mmsupport.htm">MMSUPPORT</a> </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/ps/mmsupport_flags.htm">MMSUPPORT_FLAGS</a> </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/ps/mmsupport_full.htm">MMSUPPORT_FULL</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/ps/mmsupport_instance.htm">MMSUPPORT_INSTANCE</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/ps/mmsupport_shared.htm">MMSUPPORT_SHARED</a> (new) </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">Partitions
            <ul>
              <li class="Expanded Branch">Implementation
              <ul>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mi_partition.htm">MI_PARTITION</a> </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mi_partition_core.htm">MI_PARTITION_CORE</a> </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mi_partition_page_lists.htm">MI_PARTITION_PAGE_LISTS</a> </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mi_visible_partition.htm">MI_VISIBLE_PARTITION</a> </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">PFN Lists
            <ul>
              <li class="Expanded Branch">Enumerations
              <ul>
                <!-- li><a href="../../studies/windows/km/ntoskrnl/api/mm/pfnlist/mmlists.htm">MMLISTS</a> (new) </li -->
                <li>MMLISTS (in preparation) </li>
              </ul>
              </li>
              <li class="Expanded Branch">Structures
              <ul>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mmpfn/index.htm">MMPFN</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mmpfnentry.htm">MMPFNENTRY</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mm/mmpfnlist.htm">MMPFNLIST</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mm/mmpfnlist_short.htm">MMPFNLIST_SHORT</a> (new) </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">Process Support
            <ul>
              <li class="Expanded Branch">Structures
              <ul>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mi_user_va_info.htm">MI_USER_VA_INFO</a> (new) </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">Working Set Lists
            <ul>
              <li class="Expanded Branch">Structures
              <ul>
                <!-- li><a href="../../studies/windows/km/ntoskrnl/api/mm/wslist/mmwsle.htm">MMWSLE</a> (new) </li -->
                <!-- li><a href="../../studies/windows/km/ntoskrnl/api/mm/wslist/mmwslentry.htm">MMWSLENTRY</a> (new) </li -->
                <li>MMWSLE (in preparation) </li>
                <li>MMWSLENTRY (in preparation) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mmwsl.htm">MMWSL</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mmwsl_full.htm">MMWSL_FULL</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mmwsl_instance.htm">MMWSL_INSTANCE</a> (new) </li>
                <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mmwsl_shared.htm">MMWSL_SHARED</a> (in preparation) </li>
              </ul>
              </li>
            </ul>
            </li>
            <li class="Expanded Branch">Implementation
            <ul>
              <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mi_system_information.htm">MI_SYSTEM_INFORMATION</a> (new) </li>
              <li><a href="../../studies/windows/km/ntoskrnl/inc/ntos/mi/mi_visible_state.htm">MI_VISIBLE_STATE</a> (new) </li>
            </ul>
            </li>
          </ul>
          </li>
          <li class="Expanded Branch">Run-Time Library
          <ul>
            <li class="Expanded Branch">RVA Lists
            <ul>
              <li class="Expanded Branch">Structures
              <ul>
                <li><a href="../../studies/windows/km/ntoskrnl/api/rtl/rvalist/rva_list.htm">RTL_RVA_LIST</a> (new) </li>
              </ul>
              </li>
            </ul>
            </li>
          </ul>
          </li>
        </ul>
        </li>
      </ul>
      </li>
      <li class="Expanded Branch">Debugging
      <ul>
        <li class="Expanded Branch">Kernel Debugger Extensions
        <ul>
          <li><a href="../../studies/windows/km/debug/kdexts/pfn.htm">!pfn</a> (new) </li>
        </ul>
        </li>
      </ul>
      </li>
    </ul>
  </div>
  <p>It will be some time—a few weekends, anyway—before this work settles. It will 
  be even longer before I return to the documentation I started of Image File Execution 
  Options, including the Global Flags. That was all supposed to be new for
  <a href="04.htm">April</a>! </p>
  <div class="Footer">
    <!--webbot bot="Include" U-Include="../../_include/c1920.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2019-2020. Geoff Chappell. All rights reserved.  
<a href="../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="65160" -->
  </div>
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Flags in the OBJECT_HEADER</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="33595" -->
<div class="Main">
  <h1>Object Header Flags </h1>
  <p>From as long ago as Windows NT 3.50, the <span class="struct">
  <a href="index.htm">OBJECT_HEADER</a></span> has a byte that’s interpreted as 
  bit flags. From type information in public symbol files for the kernel, it is 
  known that Windows 8.1 formalises these flags as a structure of
  <span class="type">UCHAR</span> bit fields in union with the
  <span class="member">Flags</span> byte for conveniently accessing multiple bits 
  together: </p>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x01 </td>
        <td>
        <pre class="source">UCHAR NewObject : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
      <tr>
        <td>0x02 </td>
        <td>
        <pre class="source">UCHAR KernelObject : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>
        <pre class="source">UCHAR KernelOnlyAccess : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">UCHAR ExclusiveObject : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>
        <pre class="source">UCHAR PermanentObject : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
      <tr>
        <td>0x20 </td>
        <td>
        <pre class="source">UCHAR DefaultSecurityQuota : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
      <tr>
        <td>0x40 </td>
        <td>
        <pre class="source">UCHAR SingleHandleEntry : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
      <tr>
        <td>0x80 </td>
        <td>
        <pre class="source">UCHAR DeletedInline : 1;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>Before Windows 8.1, the bits look to have been accessd only through macro definitions 
  of the masks. These are known from public disclosure of NTOSP.H in the original 
  and Version 1511 editions of the Windows Driver Kit (WDK) for Windows 10: </p>
  <table class="Flags">
    <colgroup>
      <col class="Mask"><col class="Name"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Mask </th>
        <th>Name </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x01 </td>
        <td><span class="constant">OBJ_FLAG_NEW_OBJECT</span> </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x02 </td>
        <td><span class="constant">OBJ_FLAG_KERNEL_OBJECT</span> </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td><span class="constant">OBJ_FLAG_KERNEL_ONLY_ACCESS</span> </td>
        <td>3.51 and higher </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td><span class="constant">OBJ_FLAG_EXCLUSIVE_OBJECT</span> </td>
        <td>3.51 and higher </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td><span class="constant">OBJ_FLAG_PERMANENT_OBJECT</span> </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x20 </td>
        <td><span class="constant">OBJ_FLAG_DEFAULT_SECURITY_QUOTA</span> </td>
        <td>3.50 and higher </td>
      </tr>
      <tr>
        <td>0x40 </td>
        <td><span class="constant">OBJ_FLAG_SINGLE_HANDLE_ENTRY</span> </td>
        <td>3.51 and higher </td>
      </tr>
      <tr>
        <td>0x80 </td>
        <td><span class="constant">OBJ_FLAG_DELETED_INLINE</span> </td>
        <td>5.1 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>The versions are the first for which the flag is yet known to be used. Identifying 
  first use from inspection of binaries is, perhaps forever, a work in progress.
  </p>
  <p>What makes an object count as new, in the sense of having a set
  <span class="constant">OBJ_FLAG_NEW_OBJECT</span>, is that the
  <span class="struct">OBJECT_CREATE_INFORMATION</span> that temporarily held 
  parameters while creating the object has not yet been freed. Its address 
  remains in the <span class="struct">OBJECT_HEADER</span> as the
  <span class="member">ObjectCreateInfo</span> member.
  </p>
  <!-- p>An object is new in the sense of <span class="constant">OBJ_FLAG_NEW_OBJECT</span> 
if it still has an <span class="struct">OBJECT_CREATE_INFORMATION</span> pointed 
to by its header’s <span class="member">ObjectCreateInfo</span>.
</p -->
  <div class="Footer">
    <p class="Dates">This page was created on 21st June 2020 but was not published 
    until 30th <a href="../../../../../../../../new/20/06.htm">June 2020</a>.
    It was last modified on 23rd August 2022.
    </p>
    <!--webbot bot="Include" U-Include="../../../../../_include/c2022.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="13546" -->
  </div>
</div>

</body>

</html>

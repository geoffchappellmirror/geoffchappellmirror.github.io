<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EDX From CPUID Leaf 1</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43332" -->
<div class="Main">
  <!--webbot bot="Include" U-Include="../../../_include/draft.htm" TAG="BODY" startspan -->

<div class="Header">
  <p class="alert">DRAFT: Take more than your usual care. </p>
</div>

<!--webbot bot="Include" endspan i-checksum="34080" -->
  <h1>EDX From CPUID Leaf 1 </h1>
  <p>Executing the <span class="instruction"><a href="../index.htm">cpuid</a></span> 
  instruction with 1 in <span class="register">eax</span> produces feature flags 
  in <span class="register">edx</span>. These are the original processor features 
  that <span class="instruction">cpuid</span> can report. Many are so long established 
  that modern versions of Windows will not start without them. </p>
  <p>Indeed, 64-bit Windows started with the luxury of requiring most of them up-front. 
  If any of the feature bits marked below with “required” in parentheses is not 
  set when the 64-bit kernel initialises its support for a processor, Windows stops 
  with the bug check <span class="constant"><a href="../../../bugchecks/5d.htm">
  UNSUPPORTED_PROCESSOR</a></span> (0x5D). For 32-bit Windows, requirement of features 
  is not nearly so immediate. Each processor is first evaluated, and not just from 
  this leaf, to build a list of the kernel’s own notion of feature bits such as 
  would be saved as the <span class="member">FeatureBits</span> member of the processor’s
  <span class="struct"><a href="../../../ntoskrnl/inc/ntos/kprcb.htm">KPRCB</a></span>. 
  The 32-bit kernel’s eventual rejection of a processor is decided from these feature 
  bits, not directly from the <span class="instruction">cpuid</span> feature flags. 
  Details may eventually follow the table as notes on each feature flag. </p>
  <table class="Constants">
    <tr>
      <th>Mask </th>
      <th>Intel’s Symbolic Name </th>
      <th>Versions (x86) </th>
      <th>Versions (x64) </th>
    </tr>
    <tr>
      <td>0x00000001 </td>
      <td><span class="bit">FPU</span> </td>
      <td>&nbsp;</td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000002 </td>
      <td><span class="bit">VME</span> </td>
      <td>3.50 and higher </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x00000004 </td>
      <td><span class="bit">DE</span> </td>
      <td>&nbsp;</td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000008 </td>
      <td><span class="bit">PSE</span> </td>
      <td>4.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000010 </td>
      <td><span class="bit">TSC</span> </td>
      <td>3.50 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000020 </td>
      <td><span class="bit">MSR</span> </td>
      <td>&nbsp;</td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000040 </td>
      <td><span class="bit">PAE</span> </td>
      <td>&nbsp;</td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000080 </td>
      <td><span class="bit">MCE</span> </td>
      <td>3.50 to 3.51 </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000100 </td>
      <td><span class="bit">CX8</span> </td>
      <td>4.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000200 </td>
      <td><span class="bit">APIC</span> </td>
      <td>&nbsp;</td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00000800 </td>
      <td><span class="bit">SEP</span> </td>
      <td>5.1 and higher </td>
      <td>&nbsp;</td>
    </tr>
    <tr>
      <td>0x00001000 </td>
      <td><span class="bit">MTRR</span> </td>
      <td>4.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00002000 </td>
      <td><span class="bit">PGE</span> </td>
      <td>4.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00004000 </td>
      <td><span class="bit">MCA</span> </td>
      <td>&nbsp;</td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00008000 </td>
      <td><span class="bit">CMOV</span> </td>
      <td>4.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00010000 </td>
      <td><span class="bit">PAT</span> </td>
      <td>5.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00080000 </td>
      <td><span class="bit">CLFSH</span> </td>
      <td>6.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x00200000 </td>
      <td><span class="bit">DS</span> </td>
      <td>5.1 and higher </td>
      <td>all </td>
    </tr>
    <tr>
      <td>0x00800000 </td>
      <td><span class="bit">MMX</span> </td>
      <td>4.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x01000000 </td>
      <td><span class="bit">FXSR</span> </td>
      <td>5.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x02000000 </td>
      <td><span class="bit">SSE</span> </td>
      <td>5.0 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x04000000 </td>
      <td><span class="bit">SSE2</span> </td>
      <td>5.1 and higher </td>
      <td>all (required) </td>
    </tr>
    <tr>
      <td>0x10000000 </td>
      <td><span class="bit">HTT</span> </td>
      <td>5.1 and higher </td>
      <td>all </td>
    </tr>
  </table>
  <p>To be clear, version 3.10 does not test for any <span class="instruction">cpuid</span> 
  feature flag. Its only interest in <span class="instruction">cpuid</span> leaf 
  1 is to get the <a href="eax.htm">family, model and stepping from
  <span class="register">eax</span></a>. For 64-bit Windows, “all” starts with the 
  version 5.2 from Windows Server 2003 SP1. </p>
  <!-- p>&nbsp;</p>
  <h2><span class="bit">FPU</span> (Bit 0) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">VME</span> (Bit 1) </h2>
  <p>&nbsp;</p>
  <h2><span class="bit">DE</span> (Bit 2) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">PSE</span> (Bit 3) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">TSC</span> (Bit 4) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">MSR</span> (Bit 5) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">PAE</span> (Bit 6) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">MCE</span> (Bit 7) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">CX8</span> (Bit 8) </h2>
  <p>AMD literature names this bit <span class="bit">CMPXCHG8B</span>. For AMD or 
  Intel, it signifies the processor’s support of the <span class="instruction">cmpxchg8b</span> 
  instruction. </p>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">APIC</span> (Bit 9) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">SEP</span> (Bit 11) </h2>
  <p>AMD literature names this bit <span class="bit">SysEnterSysExit</span>. Under 
  either name, it means roughly that the processor has the
  <span class="instruction">sysenter</span> and <span class="instruction">sysexit</span> 
  instructions. </p>
  <h2><span class="bit">MTRR</span> (Bit 12) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">PGE</span> (Bit 13) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">MCA</span> (Bit 14) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">CMOV</span> (Bit 15) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">PAT</span> (Bit 16) </h2>
  <p>This feature is required for 64-bit Windows. </p -->
  <h2><span class="bit">PSE-36</span> (Bit 17) </h2>
  <p>AMD’s documentation omits the hyphen. No Windows kernel is known to use this 
  feature. </p>
  <h2><span class="bit">PSN</span> (Bit 18) </h2>
  <p>AMD’s documentation has this bit as reserved. No Windows kernel is known to 
  use this feature. </p>
  <!-- h2><span class="bit">CLFSH</span> (Bit 19) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">DS</span> (Bit 21) </h2>
  <p>AMD’s documentation has this bit as reserved. </p>
  <p>This bit translates to 0x00000200 (bit 9) in the <span class="member">FeatureFlags</span> 
  member of the <span class="struct">KPRCB</span> for 64-bit Windows. </p -->
  <h2><span class="bit">ACPI</span> (Bit 22) </h2>
  <p>AMD’s documentation has this bit as reserved. No Windows kernel is known to 
  use this feature. </p>
  <!-- h2><span class="bit">MMX</span> (Bit 23) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">FXSR</span> (Bit 24) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <h2><span class="bit">SSE</span> (Bit 25) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <p>Tested for <span class="internal routine">SymCryptDetectCpuFeaturesByCpuid</span>.
  </p>
  <h2><span class="bit">SSE2</span> (Bit 26) </h2>
  <p>This feature is required for 64-bit Windows. </p>
  <p>Tested for <span class="internal routine">SymCryptDetectCpuFeaturesByCpuid</span>.
  </p>
  <h3>XD Disable </h3>
  <p>Versions 6.2 and 6.3 have a curious interpretation of the <span class="bit">SSE2</span> 
  bit as some sort of proxy for whether the processor is sufficiently advanced to 
  override what would otherwise be a disabling of the <span class="bit">XD</span> 
  (or <span class="bit">NX</span>) feature. The background to this is that Intel provides 
  that if the Model Specific Register 0x01A0 has bit 34 set, then
  <span class="register">edx</span> from <span class="instruction">cpuid</span> leaf 
  0x80000001 should have the <span class="bit">XD</span> bit (20) clear. It will then 
  look to Windows (or any operating system) as if the processor’s implementation of 
  64-bit page table entries do not have the high bit available for marking pages of 
  data as non-executable. </p>
  <p>If the <span class="bit">SSE2</span> bit is set in the <span class="register">
  edx</span> from <span class="instruction">cpuid</span> leaf 1 and the processor’s 
  vendor string from <span class="instruction">cpuid</span> leaf 0 is GenuineIntel, 
  then both the 32-bit and 64-bit kernels in versions 6.2 and 6.3 clear the XD Bit 
  Disable bit (34) in <span class="register">IA32_MISC_ENABLE</span> (0x01A0). </p>
  <p>This interpretation of the <span class="bit">SSE2</span> bit for this purpose 
  is almost certainly a coding error. </p -->
  <h2><span class="bit">SS</span> (Bit 27) </h2>
  <p>AMD’s documentation has this bit as reserved. No Windows kernel is known to 
  use this feature. </p>
  <!-- h2><span class="bit">HTT</span> (Bit 28) </h2>
  <h2><span class="bit">TM</span> (Bit 29) </h2>
  <p>AMD’s documentation has this bit as reserved. No Windows kernel is known to 
  use this feature. </p>
  <h2><span class="bit">IA64</span> (Bit 30) </h2>
  <p>AMD’s documentation has this bit as reserved. No Windows kernel is known to 
  use this feature. </p>
  <h2><span class="bit">PBE</span> (Bit 31) </h2>
  <p>AMD’s documentation has this bit as reserved. No Windows kernel is known to 
  use this feature. </p -->
  <div class="Footer">
    <p class="Dates">This page was created on 2nd
    <a href="../../../../../../new/19/12.htm">January 2020</a> and was last modified 
    on 26th January 2020. </p>
    <!--webbot bot="Include" U-Include="../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="61845" -->
  </div>
</div>

</body>

</html>

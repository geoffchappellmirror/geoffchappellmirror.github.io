<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>CPUID Leaf 1</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43332" -->
<div class="Main">
  <h1>CPUID Leaf 1 </h1>
  <p>Executing the <a href="../index.htm"><span class="instruction">cpuid</span></a> 
  instruction with 1 in <span class="register">eax</span> nowdays produces meaningful 
  output in all four of the possible registers. The <a href="eax.htm">processor 
  identification signature in <span class="register">eax</span></a> is presumably 
  original. It is what the processor loads into <span class="register">edx</span> 
  as an initial state. That <span class="instruction">cpuid</span> gives easy access 
  to this signature long after the processor’s initialisation may mean that this 
  signature is <span class="emphasis">the</span> CPU ID that gives
  <span class="instruction">cpuid</span> its name. The <a href="edx.htm">feature 
  flags in <span class="register">edx</span></a> are original too, or very nearly. 
  The <a href="ecx.htm">feature flags in <span class="register">ecx</span></a> certainly 
  weren’t defined until much later, but both are now more or less fully defined 
  by Intel and AMD, though not all are yet used by Windows. The miscellaneous information 
  in <span class="register">ebx</span> is presently left for another time. </p>
  <p>Strictly speaking, <span class="instruction">cpuid</span> leaf 1 is like any 
  other in that it should be treated as unsupported unless the maximum leaf that’s 
  returned in <a href="../00000000h/eax.htm"><span class="register">eax</span> from
  <span class="instruction">cpuid</span> leaf 0</a> is at least 1. Against this 
  is that it’s nearly unthinkable that any <span class="instruction">cpuid</span> 
  implementation doesn’t extend to leaf 1. The original Windows kernel, for version 
  3.10, did not bother checking. Nearly unthinkable, however, is not completely 
  unthinkable. With one important exception, versions 3.50 to 6.2 of the 32-bit 
  kernel all check. A processor whose <span class="instruction">cpuid</span> does 
  not have leaf 1 is treated the same as any old processor that doesn’t have the 
  instruction at all. Whether this was just that a Microsoft programmer took “strictly 
  speaking” seriously or that some processor actually did implement
  <span class="instruction">cpuid</span> with a leaf 0 but no leaf 1 is not known.
  </p>
  <p>Versions 6.3 and higher of the x86 kernel take as granted that
  <span class="instruction">cpuid</span> is available and has leaf 1. All x64 versions 
  do too, this much <span class="instruction">cpuid</span> functionality being assured 
  just from have a 64-bit instruction set. For the 32-bit instruction set, the assurance 
  is instead provided by the loader, WINLOAD.EXE, if only for the boot processor. 
  Starting with version 6.2, the loader fails its initialisation almost immediately 
  if the boot processor doesn’t have at least <span class="instruction">cpuid</span> 
  leaf 1. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 2nd
    <a href="../../../../../../new/19/12.htm">January 2020</a> and was last modified 
    on 24th January 2021. </p>
    <!--webbot bot="Include" U-Include="../../../_include/c2021.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020-2021. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="54391" -->
  </div>
</div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SYSTEM_PROCESSOR_FEATURES_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>SYSTEM_PROCESSOR_FEATURES_INFORMATION </h1>
<p>The <span class="struct">SYSTEM_PROCESSOR_FEATURES_INFORMATION</span> structure 
is what a successful call to <span class="function"><a href="query.htm">ZwQuerySystemInformation</a></span> 
or <span class="function">NtQuerySystemInformation</span> produces in its output 
buffer when given the information class <span class="constant">SystemProcessorFeaturesInformation</span> 
(0x9A). </p>
<h2>Documentation Status </h2>
<p>The <span class="struct">SYSTEM_PROCESSOR_FEATURES_INFORMATION</span> structure 
is not documented. </p>
<!--webbot bot="Include" U-Include="_include/type_info_urlmon.htm" TAG="BODY" startspan -->

<p>Microsoft does publish the practical equivalent of a C-language definition as 
type information in public symbol files, though not for the kernel, where the structure 
is prepared, nor even for low-level user-mode DLLs that interpret the structure, 
but for various higher-level user-mode DLLs such as URLMON.DLL and only then starting 
with version 6.2. </p>

<!--webbot bot="Include" endspan i-checksum="38013" -->
<h2>Layout </h2>
<p>The <span class="struct">SYSTEM_PROCESSOR_FEATURES_INFORMATION</span> is 0x20 
bytes in both 32-bit and 64-bit Windows. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset </th>
    <th>Definition </th>
    <th>Versions </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">ULONGLONG ProcessorFeatureBits;</pre>
    </td>
    <td>6.3 and higher </td>
  </tr>
  <tr>
    <td>0x08 </td>
    <td>
    <pre class="source">ULONGLONG Reserved [3];</pre>
    </td>
    <td>6.3 and higher </td>
  </tr>
</table>
<p>The <span class="member">ProcessorFeatureBits</span> are retrieved directly from 
the kernel’s internal variable <span class="internal variable">KeFeatureBits</span>. 
So too is the same-named member of the much older <span class="struct">
<a href="processor.htm">SYSTEM_PROCESSOR_INFORMATION</a></span> but it is there 
only a <span class="type">ULONG</span>. The <span class="struct">SYSTEM_PROCESSOR_FEATURES_INFORMATION</span> 
structure with its 64-bit <span class="member">ProcessorFeatureBits</span> is not 
known to have any other motivation than the widening of
<span class="internal variable">KeFeatureBits</span> for 64-bit Windows 8.1 and 
32-bit Windows 10. </p>
<p>The internal variable <span class="internal variable">KeFeatureBits</span> that 
is the source of the <span class="member">ProcessorFeatureBits</span> is itself 
the intersection of feature bits for all the processors. Put another way, each set
<span class="member">ProcessorFeatureBits</span> tells of a feature that the kernel 
has identified for use on all processors. Note the phrase “identified for use”. 
A processor feature can have been identified as present yet be rejected for use.
</p>
<p>The feature bits for any one processor are kept in the <span class="member">
<a href="../../../structs/kprcb/featurebits.htm">FeatureBits</a></span> member of 
that processor’s <span class="struct">
<a href="../../../inc/ntos/kprcb.htm">KPRCB</a></span>. </p>
<div class="Footer">
  <p class="Dates">This page was created on 9th July 2016 but was not published 
  until 6th January 2020. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5634" -->
</div>

</body>

</html>

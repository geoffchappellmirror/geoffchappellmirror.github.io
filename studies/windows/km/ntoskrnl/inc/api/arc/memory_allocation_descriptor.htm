<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>MEMORY_ALLOCATION_DESCRIPTOR</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>MEMORY_ALLOCATION_DESCRIPTOR </h1>
  <p>The <span class="struct">MEMORY_ALLOCATION_DESCRIPTOR</span> structure (formally
  <span class="struct">_MEMORY_ALLOCATION_DESCRIPTOR</span>) is how the loader describes 
  to the kernel what memory has been found and which of it is already in use for 
  what purpose. </p>
  <p>There is one structure for each memory block. The structures are provided by 
  the loader to the kernel as a double-linked list, linked through the
  <span class="member">ListEntry</span> member. The head is the
  <span class="member">MemoryDescriptorListHead</span> member of the
  <span class="struct"><a href="loader_parameter_block.htm">LOADER_PARAMETER_BLOCK</a></span> 
  structure whose address the loader passes to the kernel as the latter’s one argument 
  for initialisation. Until the kernel completes its initialisation, it keeps the 
  address in the exported <span class="variable">KeLoaderBlock</span> variable, 
  which means the whole list of memory blocks can be easily inspected not just with 
  a debugger but by device drivers. </p>
  <h2>Availability </h2>
  <p>The <span class="struct">MEMORY_ALLOCATION_DESCRIPTOR</span> and its relationship 
  to the <span class="struct">LOADER_PARAMETER_BLOCK</span> are ancient, being already 
  well established for Windows NT 3.1. </p>
  <h2>Documentation Status </h2>
  <p>Microsoft is not known ever to have documented the <span class="struct">MEMORY_ALLOCATION_DESCRIPTOR</span>. 
  For many years, it was known from Microsoft only through type information in public 
  symbol files for the kernel. Even this started only as recently as Windows Vista. 
  After roughly another decade, Microsoft published a C-language definition. This 
  is in a header named <a href="../../../source/inc/arc.htm">ARC.H</a> which Microsoft 
  distributed with the Windows Driver Kit (WDK) for Windows 10 in its original and 
  Version 1511 editions. This disclosure was very likely a mistake. The header is 
  in a subdirectory, named “minwin”, of a directory named “um” as if for user-mode 
  programming even though many of the headers in the subdirectory define types that 
  no user-mode software has any access to. Oversight or not, the header was gone 
  from the WDK for Version 1607. </p>
  <h2>Layout </h2>
  <p>Though the <span class="struct">MEMORY_ALLOCATION_DESCRIPTOR</span> structure 
  is undocumented, it is stable up to and including Windows Vista. In 32-bit builds, 
  it is stable even to Windows 10. In 64-bit builds, however, Windows 7 supports 
  physical memory above 16TB, i.e., physical page numbers that are too wide for 
  32 bits, and therefore widens two members. The size of a <span class="struct">
  MEMORY_ALLOCATION_DESCRIPTOR</span> is 0x14 bytes in 32-bit builds and either 
  0x20 or 0x28 bytes in 64-bit builds depending on the version. </p>
  <p>Names, types and offsets given below are from Microsoft’s symbol files for 
  the kernel, starting with Windows Vista. What’s known for earlier versions comes 
  from inspecting the binaries for continuity with the later versions. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>
        <pre class="source">LIST_ENTRY ListEntry;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>0x10 </td>
        <td>
        <pre class="source"><a href="type_of_memory.htm">TYPE_OF_MEMORY</a> MemoryType;</pre>
        </td>
        <td>all </td>
      </tr>
      <tr>
        <td rowspan="2">0x0C </td>
        <td>0x14 </td>
        <td>
        <pre class="source">ULONG BasePage;</pre>
        </td>
        <td>3.10 to 6.1 </td>
      </tr>
      <tr>
        <td>0x18 </td>
        <td>
        <pre class="source">ULONG_PTR BasePage;</pre>
        </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td rowspan="2">0x10 </td>
        <td>0x18 </td>
        <td>
        <pre class="source">ULONG PageCount;</pre>
        </td>
        <td>3.10 to 6.1 </td>
      </tr>
      <tr>
        <td>0x20 </td>
        <td>
        <pre class="source">ULONG_PTR PageCount;</pre>
        </td>
        <td>6.1 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>What the descriptor describes is physical memory. The <span class="member">
  BasePage</span> would be appropriatedly defined as a <span class="type">PFN_NUMBER</span>. 
  The <span class="member">PageCount</span> might be defined as a
  <span class="type">PFN_NUMBER</span> too. The (briefly) published C-language definition, 
  however, confirms that Microsoft defines both as <span class="type">ULONG_PTR</span>.
  </p>
  <div class="Footer">
    <p class="Dates">This page was created on 28th
    <a href="../../../../../../../new/16/04.htm">April 2016</a> and was last modified 
    on 9th <a href="../../../../../../../new/22/12.htm">December 2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

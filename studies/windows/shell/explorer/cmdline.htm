<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>The Windows Explorer Command Line</title>
<link rel="stylesheet" type="text/css" href="../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../_styles/shell.css">
<script type="text/javascript" src="../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="22084" endspan -->
<!--webbot bot="Include" U-Include="../_include/preview.htm" TAG="BODY" startspan -->

<div class="Header">
  <p class="alert">CURRENT WORK ITEM - PREVIEW ONLY </p>
</div>

<!--webbot bot="Include" i-checksum="8381" endspan -->
<h1>The Windows Explorer Command Line </h1>
<p>The EXPLORER command line is a sequence of fields with commas and equals signs 
serving as separators. To allow commas and equals signs within a field, there is 
a facility for enclosure by double-quotes. The double-quotes are otherwise ignored, 
except that two consecutive double-quotes in the command line pass into the extracted 
field as one literal double-quote. White space is ignored at the start and end of 
each field. </p>
<p>Each argument for EXPLORER is one or more fields, shown below as if separated 
only by commas and without the complications of white space or quoting. Where the 
first field is a command-line switch, necessarily beginning with the forward slash, 
it is case-insensitive. </p>
<table>
  <tr>
    <td><span class="switch">/e</span> </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td><span class="switch">/idlist,:</span><span class="placeholder">handle</span><span class="switch">:</span><span class="placeholder">process</span>
    </td>
    <td>specifies object as <span class="struct">ITEMIDLIST</span> in
    <a href="../shlwapi/api/shared/index.htm">shared memory</a> block with given 
    handle in context of given process </td>
  </tr>
  <tr>
    <td><span class="switch">/n</span> </td>
    <td>redundant in Windows Vista </td>
  </tr>
  <tr>
    <td><span class="switch">/root,/idlist,:</span><span class="placeholder">handle</span><span class="switch">:</span><span class="placeholder">process</span>
    <br>
    <span class="switch">/root,</span><span class="placeholder">clsid</span> <br>
    <span class="switch">/root,</span><span class="placeholder">clsid</span><span class="switch">,</span><span class="placeholder">path</span>
    <br>
    <span class="switch">/root,</span><span class="placeholder">path</span> </td>
    <td>specifies object as root </td>
  </tr>
  <tr>
    <td><span class="switch">/select</span> </td>
    <td>show object as selected item in parent folder </td>
  </tr>
  <tr>
    <td><span class="switch">/separate</span> </td>
    <td>show in separate EXPLORER process </td>
  </tr>
  <tr>
    <td><span class="placeholder">path</span> </td>
    <td>specifies object; <br>
    ignored if object already specified; <br>
    overridden by specification in later <span class="switch">/idlist</span> or
    <span class="switch">/root</span> argument </td>
  </tr>
</table>
<p>The overall aim of the command line is to specify a shell namespace object and 
a way in which EXPLORER is to show that object. </p>
<h2>Ordinary Specification of Object </h2>
<p>Where the first field in an argument is not a command-line switch, the whole 
field is interpreted as a path in the shell namespace. If the path as given does 
not identify a shell namespace object, it is re-interpreted as a file-system path 
relative to the current directory. </p>
<h3>Shell Namespace Paths </h3>
<p>A shell-namespace path may be a file-system path but may also refer to class 
objects by using the notation of two colons followed by a CLSID in curly braces. 
For instance, </p>
<pre class="input">explorer ::{21ec2020-3aea-1069-a2dd-08002b30309d}\::{2227a280-3aea-1069-a2de-08002b30309d} </pre>
<p>opens the Printers folder in the Control Panel. </p>
<p>As an amusement, note that </p>
<pre class="input">explorer ,</pre>
<p>is a convenient, if undocumented (and possibly unintended), shorthand for opening 
the Computer object (previously called My Computer). This works because the comma 
delimits an empty <span class="placeholder">path</span>. When this ends up with 
the SHELL32 function <span class="function">SHParseDisplayName</span> as an empty
<span class="argument">pszDisplayName</span> argument, it is interpreted as referring 
to the Computer object. </p>
<p>A more serious aside is that Microsoft seems never to have documented a formal 
syntax for the shell namespace. Some explanation may be that since each object in 
the namespace can take responsibility for parsing the display names of its items, 
and interpret the text however it wants, there is no generally applicable syntax 
to document. However, almost all parsing in everyday practice, as for the EXPLORER 
command line, starts from the desktop folder and much of it proceeds through one 
or another built-in objects that have a common handling as registry folders. The 
syntax applied by these registry folders is as close to a standard syntax as exists 
for the shell namespace and is surely important to know. Why is it not documented? 
</p>
<h2>Object As ITEMIDLIST From Other Process </h2>
<p>It may be that whoever asks to run EXPLORER already has the object described 
in the structural form used throughout the shell, i.e., as an
<span class="struct">ITEMIDLIST</span>. A typical occasion is when a shell namespace 
object is to be opened by calling the SHELL32 function <span class="function">ShellExecuteEx</span> 
and the database of file associations names EXPLORER.EXE as the program to run for 
applying the requested verb to the object. In a standard installation of Windows 
Vista, this is set up not just for objects of type Folder but also for cabinet files 
and zip files and for less obvious things such as the Windows Search Protocol.
</p>
<p>The field after a <span class="switch">/idlist</span> is expected to begin with 
a colon and the <span class="placeholder">handle</span>. The latter is an optional 
minus sign and any number of decimal digits. These may in turn be followed by any 
number of characters that are not decimal digits until another colon and the
<span class="placeholder">process</span>. This too is an optional minus sign and 
any number of decimal digits. Any remaining characters in the field are ignored. 
An object specified by <span class="switch">/idlist</span> and a valid second field 
replaces any object specified by any earlier argument of any sort. If
<span class="switch">/idlist</span> does not have a second field from which an
<span class="struct">ITEMIDLIST</span> actually is obtained, then the whole command 
line is invalid unless an object is specified by an earlier argument (in which case, 
just the one or two fields of the <span class="switch">/idlist</span> argument are 
ignored). </p>
<h2>Root </h2>
<p>If <span class="switch">/root</span> does not have at least a second field, then 
the whole command line is invalid. If the second field is <span class="switch">/idlist</span>, 
an additional field is expected as when <span class="switch">/idlist</span> begins 
an argument. However, if the additional field is absent or does not yield an
<span class="struct">ITEMIDLIST</span>, then the two or three fields of the
<span class="switch">/root</span> argument are ignored. </p>
<p>The <span class="placeholder">clsid</span> for a <span class="switch">/root</span> 
argument is the usual representation with curly braces. It provides a root class. 
If omitted, EXPLORER uses <span class="clsid">{00021400-0000-0000-C000-000000000046}</span>, 
which is known symbolically as <span class="symbol">CLSID_ShellDesktop</span>. If 
a <span class="placeholder">clsid</span> is given without a
<span class="placeholder">path</span>, then provided that Windows is not started 
in one of its safe modes, EXPLORER finds the path from the following registry key:
</p>
<table>
  <tr>
    <td>Key: </td>
    <td><span class="regkey">HKEY_CLASSES_ROOT\CLSID\<span class="placeholder">clsid</span>\ShellExplorerRoot</span>
    </td>
  </tr>
  <tr>
    <td>Value: </td>
    <td>default </td>
  </tr>
  <tr>
    <td>Type: </td>
    <td><span class="constant">REG_SZ</span> or <span class="constant">REG_EXPAND_SZ</span>
    </td>
  </tr>
</table>
<p>If the key does not exist or its default value does not have string data or if 
Windows is in Safe Mode (with or without networking), then the
<span class="placeholder">path</span> cannot be resolved and the command line is 
invalid. </p>
<div class="Footer">
  <p class="Dates">TThis page was created on 30th May 2009 and was last modified 
  on 5th August 2009. </p>
  <!--webbot bot="Include" u-include="../_include/c09.htm" tag="BODY" startspan -->

<p class="Copyright">Copyright © 2009. Geoff Chappell. All rights reserved.
<a href="../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="46116" endspan -->
</div>

</body>

</html>

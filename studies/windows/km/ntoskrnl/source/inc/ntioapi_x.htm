<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>NTIOAPI_X.H</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="54033" -->
<h1>NTIOAPI_X.H </h1>
<p>The public symbol file NTKRPAMP.PDB for the original release of Windows 10 tells 
that the kernel is built with the NTIOAPI_X.H header at </p>
<blockquote>
  d:\th.public.fre\internal\sdk\inc\minwin
</blockquote>
<p>and draws from it the type definitions that are shown in the table below. NTIOAPI_X.H 
is published in the “minwin” directory of the Windows Driver Kit (WDK) for Windows 
10 in the original and Version 1511 editions. This disclosure is here thought to 
have been an oversight. Publication is not continued in later editions. </p>
<p>All types that the kernel is known to pick up from NTIOAPI_X.H are defined in 
the standard header WDM.H or in the slightly less standard header NTIFS.H. The line 
numbers on the left of the table are from NTIOAPI_X.H as known from the symbol file. 
All agree with the NTIOAPI_X.H from the WDK for the original release of Windows 
10. The line numbers on the right are from the WDM.H and NTIFS.H in the same WDK.
</p>
<table>
  <colgroup>
    <col class="LineNumber"><col class="Name"><col class="LineNumber" span="2">
  </colgroup>
  <tr>
    <th>Line Number </th>
    <th>Type </th>
    <th>WDM.H </th>
    <th>NTIFS.H </th>
  </tr>
  <tr>
    <td>529 </td>
    <td>struct <span class="struct">_IO_STATUS_BLOCK</span> </td>
    <td>6358 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>573 </td>
    <td>enum <span class="enum">_IO_SESSION_STATE</span> </td>
    <td>6402 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>638 </td>
    <td>enum <span class="enum">_FILE_INFORMATION_CLASS</span> </td>
    <td>6449 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>943 </td>
    <td>struct <span class="struct">_FILE_BASIC_INFORMATION</span> </td>
    <td>6528 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>951 </td>
    <td>struct <span class="struct">_FILE_STANDARD_INFORMATION</span> </td>
    <td>6536 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1037 </td>
    <td>struct <span class="struct">_FILE_NETWORK_OPEN_INFORMATION</span> </td>
    <td>6562 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1283 </td>
    <td>enum <span class="enum">_IO_PRIORITY_HINT</span> </td>
    <td>6609 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1445 </td>
    <td>struct <span class="struct">_FILE_GET_QUOTA_INFORMATION</span> </td>
    <td>&nbsp;</td>
    <td>6256 </td>
  </tr>
  <tr>
    <td>1487 </td>
    <td>enum <span class="enum">_FSINFOCLASS</span> </td>
    <td>6675 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>1688 </td>
    <td>union <span class="union">_FILE_SEGMENT_ELEMENT</span> </td>
    <td>6703 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>8619 </td>
    <td>enum <span class="enum">_INTERFACE_TYPE</span> </td>
    <td>6760 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>8649 </td>
    <td>enum <span class="enum">_DMA_WIDTH</span> </td>
    <td>6790 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>8662 </td>
    <td>enum <span class="enum">_DMA_SPEED</span> </td>
    <td>6803 </td>
    <td>&nbsp;</td>
  </tr>
</table>
<p>Explanation of what can be known of the correspondence between definitions in 
NTIOAPI_X.H and in the others is easier if NTIOAPI_X.H is treated as a master from 
which definitions in the other files are copied, but keep in mind that NTIOAPI_X.H 
may itself be tool-generated. Still, at least for NTIOAPI_X.H, more is known than 
just its name, some of the types it defines, and the line numbers that have the 
opening braces of these definitions. Few candidates as master headers are supplied 
even in the “minwin” disclosure, and NTIOAPI_X.H is by far the largest. Its availability 
means that the mapping of line numbers in NTIOAPI_X.H to line numbers in WDM.H can 
be known not just for the relatively few that are identified by the symbol file. 
Instead, It can worked out with good confidence in its entirety. </p>
<p>Certainty would require access to the extraction tool, but a good sense of the 
scheme seems safe to infer from observation. Lines in NTIOAPI_X.H are copied to 
other headers if they end with a comment in a particular form or they are between 
comments in a particular form. For these comments the other headers have names such 
as “wdm” for WDM.H. Ranges of lines to copy are book-ended by single-line comments 
that can contain apparently any number in any mix of begin_<span class="placeholder">name</span> 
and end_<span class="placeholder">name</span>. The copying to a header is just of 
lines between this header’s begin and end comments, non-inclusively. There looks 
to be no requirement that begin and end comments for the same name must balance. 
Ranges for different names look to be independent. A single line is copied to a 
header if it ends with a single-line comment that names the header. (Presumably, 
it becomes copy-able to multiple headers by having multiple names in the comment, 
but NTIOAPI_X.H has no example.) Where a line that is copied to a header has a comment 
that would select some other header, the comment may be copied or not: what rule 
governs this is unclear. See for instance that a “begin_winnt” and “end_winnt” at 
lines 32 and 94 in a range for copying to WDM.H become empty lines in WDM.H but 
a seemingly similar pair at lines 7231 and 7315 are copied whole to NTIFS.H. </p>
<p>The mapping from the 8719-line NTIOAPI_X.H to the other headers would be tedious 
to show in its entirety. For instance, lines are copied to WDM.H and to NTIFS.H 
in 15 and 34 distinct ranges. A summary is easier from the reverse perspective. 
Each of several headers from the WDK for Windows 10 or the contemporaneous Software 
Development Kit (SDK) has one range of contiguous lines that can all be accounted 
for as copies from NTIOAPI_X.H, either intact or after stripping selection comments:
</p>
<table>
  <tr>
    <th>Comment Name </th>
    <th>Header </th>
    <th>Contiguous Range in Header</th>
    <th>First and Last in NTIOAPI_X.H </th>
  </tr>
  <tr>
    <td>wdm </td>
    <td>WDM.H </td>
    <td>6094 to 6820 </td>
    <td>32 and 8679 </td>
  </tr>
  <tr>
    <td>ntddk </td>
    <td>NTDDK.H </td>
    <td>4024 to 4233 </td>
    <td>485 and 8703 </td>
  </tr>
  <tr>
    <td>ntifs </td>
    <td>NTIFS.H </td>
    <td>5548 to 12763 </td>
    <td>243 and 8709 </td>
  </tr>
  <tr>
    <td>ntminiport </td>
    <td>MINIPORT.H </td>
    <td>5771 to 5861 </td>
    <td>8613 and 8703 </td>
  </tr>
  <tr>
    <td>ntosifs </td>
    <td>NTOSIFS.H </td>
    <td>2814 to 3157 </td>
    <td>2258 and 8237 </td>
  </tr>
  <tr>
    <td>winnt </td>
    <td>WINNT.H </td>
    <td>12142 to 12729 </td>
    <td>33 and 8709 </td>
  </tr>
  <tr>
    <td>winioctl </td>
    <td>WINIOCTL.H </td>
    <td>5544 to 10383 </td>
    <td>2025 and 8237 </td>
  </tr>
  <tr>
    <td>wudfwdm </td>
    <td>WUDFWDM.H </td>
    <td>1161 to 1249 </td>
    <td>169 and 8641 </td>
  </tr>
</table>
<p>The headers are ordered according to some rough and subjective measure of specialisation 
or of distance from kernel-mode programming. The first four are standard in the 
sense that driver code of the right sort can be written without including any of 
the other standard headers. NTOSIFS.H is slightly different in that it adds less 
public material to the more readily available NTIFS.H. It’s available for inspection 
only because it’s another “minwin” disclosure. WINNT.H and WINIOCTL.H are, of course, 
for user-mode programming. WUDFWDM.H is for user-mode drivers. </p>
<p>Extraction is also defined for several headers that have not been found in any 
kit. Their names in comments are: ntndis, ntoshvp and wudfpwdm. </p>
<div class="Footer">
  <p class="Dates">This page was created on 23rd July 2020 but was not published 
  until 25th <a href="../../../../../../new/20/10.htm">October 2020</a>. It was 
  last modified on 2nd November 2020. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="61845" -->
</div>

</body>

</html>

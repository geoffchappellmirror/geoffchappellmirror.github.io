<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>EVENT_TRACE_SPINLOCK_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>EVENT_TRACE_SPINLOCK_INFORMATION </h1>
  <p>The <span class="struct">EVENT_TRACE_SPINLOCK_INFORMATION</span> structure 
  is one of many that the <span class="function">
  <a href="../../../api/ex/sysinfo/query.htm">ZwQuerySystemInformation</a></span> 
  (or <span class="function">NtQuerySystemInformation</span>) and
  <span class="function"><a href="../../../api/ex/sysinfo/set.htm">ZwSetSystemInformation</a></span> 
  (or <span class="function">NtSetSystemInformation</span>) functions expect in 
  their information buffer when given the information class
  <span class="constant">SystemPerformanceTraceInformation</span> (0x1F). This particular 
  structure is selected when the first dword in the information buffer on input 
  is <span class="constant">EventTraceSpinlockInformation</span> (0x05). </p>
  <p>The remaining members of the structure are parameters that govern the tracing 
  of events that sample the acquisition and release of spin locks. This tracing 
  is enabled for NT Kernel Logger sessions for which the
  <a href="../ntwmi/perfinfo_groupmask.htm">group mask</a>
  <span class="constant">PERF_SPINLOCK</span> (0x20010000) is set. The events have 
  the <a href="../ntwmi/wmi_trace_packet/hookid.htm">Hook ID</a>
  <span class="constant">PERFINFO_LOG_TYPE_SPINLOCK</span> (0x0529), with event-specific 
  data in the form of a <span class="struct">
  <a href="../../../api/etw/locktrace/wmi_spinlock.htm">WMI_SPINLOCK</a></span> 
  structure. While this tracing is enabled, the kernel tracks the acquisition and 
  release of spin locks, and writes an event whenever a lock’s release satisfies 
  the sampling conditions that are described by this structure’s parameters. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">EVENT_TRACE_SPINLOCK_INFORMATION</span> structure 
  is not documented. </p>
  <!--webbot bot="Include" U-Include="_include/typeinfo_struct.htm" TAG="BODY" startspan -->

<p>A few public disclosures are known from Microsoft, though not as any sort of 
plain-English documentation. One is that a previously unpublished header named NTETW.H 
was published in the original and Version 1511 editions of the Windows Driver Kit 
(WDK) for Windows 10, and this header contains a C-language definition of the structure.
</p>
<p>Were it not for this limited and possibly unintended disclosure of NTETW.H, a 
practical equivalent of the C-language definition (but missing comments, of course) 
would anyway be known from type information in symbol files. But this too has the 
look of an oversight. Type information for this structure has never appeared in 
any public symbol files for the kernel or for the obvious low-level user-mode DLLs. 
It has instead slipped out in symbol files for a smattering of higher-level user-mode 
DLLs, starting with Windows 8. For these few, the readily available symbol files 
actually are private symbol files and show that the unpublished
<a href="../../../source/inc/ntetw.htm">NTETW.H</a> was included when compiling 
the corresponding binaries. </p>

<!--webbot bot="Include" endspan i-checksum="23935" -->
  <!--webbot bot="Include" U-Include="_include/clfsmgmt.htm" TAG="BODY" startspan -->

<p>Type information also has been published in a statically linked library, named 
CLFSMGMT.LIB, which Microsoft distributes with the Software Development Kit (SDK) 
starting for Windows Vista. This does not have the forensic quality as has type 
information in symbol files for the binaries that ship with an operating system, 
for although it is as accurate for when the library was built, there is no requirement 
that the library have been built with the operating system that it targets. There 
can be, and often is, some discrepancy, and there is anyway not always a fresh library 
for each service pack. </p>

<!--webbot bot="Include" endspan i-checksum="57935" -->
  <h2>Layout </h2>
  <p>The <span class="struct">EVENT_TRACE_SPINLOCK_INFORMATION</span> is originally 
  0x10 bytes in both 32-bit and 64-bit Windows. An addition for version 6.3 lengthens 
  the structure to 0x14 bytes. The original structure is defined separately as
  <span class="struct">EVENT_TRACE_SPINLOCK_INFORMATION_V1</span> in version 6.3 
  and higher. </p>
  <p>Offsets, names and types in the table that follows are from type information 
  in symbol files and libraries, and from the published C-language definition, as 
  described above. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source"><a href="event_trace_information_class.htm">EVENT_TRACE_INFORMATION_CLASS</a> EventTraceInformationClass;</pre>
        </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>
        <pre class="source">ULONG SpinLockSpinThreshold;</pre>
        </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">ULONG SpinLockAcquireSampleRate;</pre>
        </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td>0x0C </td>
        <td>
        <pre class="source">ULONG SpinLockContentionSampleRate;</pre>
        </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>
        <pre class="source">ULONG SpinLockHoldThreshold;</pre>
        </td>
        <td>6.3 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>Though the structure is presented above as being defined in version 6.1, it 
  has no 32-bit implementation until version 6.2. The 64-bit kernel’s code for spin 
  locks had been in C (or C++) from the start, i.e., for Windows Server 2003 SP1, 
  but the corresponding code in the 32-bit kernel is still in assembly language 
  in Windows 7. Its evolution from Windows NT 3.1 had gone as far as adding hypervisor 
  notifications and, for Windows 7, the maintenance of performance counters in the
  <span class="struct"><a href="../../ntos/i386_x/kprcb/index.htm">KPRCB</a></span>, 
  but there it was left. Not until Windows 8 does 32-bit Windows trace events for 
  spin locks. </p>
  <h2>Behaviour </h2>
  <p>To set these members in version 6.2 and higher, the caller must have
  <span class="constant">TRACELOG_GUID_ENABLE</span> access to the NT Kernel Logger.
  </p>
  <p>Constraints on the parameters are enforced when setting information, else the 
  function returns <span class="constant">STATUS_INVALID_PARAMETER</span>: </p>
  <ul>
    <li>at least 1 for <span class="member">SpinLockSpinThreshold</span>; </li>
    <li>at least 1,000 for <span class="member">SpinLockAcquireSampleRate</span>;
    </li>
    <li>at least 1 for <span class="member">SpinLockContentionSampleRate</span>;
    </li>
    <li>either 0 or at least 1,000,000 for <span class="member">SpinLockHoldThreshold</span>.
    </li>
  </ul>
  <p>For each, the least permitted value is anyway what the kernel starts with and 
  is thus the default. </p>
  <p>A <span class="constant">PERFINFO_LOG_TYPE_SPINLOCK</span> event is written 
  whenever a spin lock is released, if <span class="constant">PERF_SPINLOCK</span> 
  is enabled and any of the following conditions are met: </p>
  <ul>
    <li>the current <span class="member">SpinLockHoldThreshold</span> is non-zero 
    and the lock was held for more than <span class="member">SpinLockHoldThreshold</span> 
    cycles; </li>
    <li>the lock’s acquisition needed at least <span class="member">SpinLockSpinThreshold</span> 
    and the processor’s current count of all spin lock contentions is an exact multiple 
    of <span class="member">SpinLockContentionSampleRate</span>; </li>
    <li>the lock was acquired without spinning and the processor’s count of all 
    uncontended spin lock acquisitions is an exact multiple of
    <span class="member">SpinLockAcquireSampleRate</span>. </li>
  </ul>
  <p>Uncontended acquisition of spin locks is highly desirable, hopefully ordinary 
  and correspondingly uninteresting, such that relatively few (if any) are usefully 
  sampled: hence the high minimum for the <span class="member">SpinLockAcquireSampleRate</span>. 
  The default is, in effect, to trace roughly every thousandth uncontended acquisition. 
  See that the rate is an inverse: increasing it means that uncontended acquisitions 
  are sampled less frequently. </p>
  <p>The default for contended acquisitions is to trace them all. For some purposes 
  this may be excessive. Occasional contention is expected and ordinary. Tracing 
  them all can generate very many events very quickly. One way to reduce the volume 
  is to increase the <span class="member">SpinLockContentionSampleRate</span> and 
  thus trace only a roughly random sample of contended acquisitions. Another is 
  to raise <span class="member">SpinLockSpinThreshold</span> while keeping the
  <span class="member">SpinLockContentionSampleRate</span> at 1. This selectively 
  ignores the acquisitions that proceeded with only a few spins in favour of tracing 
  those whose wait was more problematic. </p>
  <p>Whether a lock’s acquisition was immediate or contended, and whatever filtering 
  is applied by the original three parameters, it is a serious problem if the time 
  from (finally) acquiring the lock until releasing it is too long. The
  <span class="member">SpinLockHoldThreshold</span> is in the same processor cycles 
  that are counted by the <span class="instruction">rdtsc</span> instruction. For 
  processors with clock speeds of a few GHz, the default is an order of magnitude 
  larger than Microsoft’s long-standing warnings that “No routine should hold a 
  spin lock for longer than 25 microseconds.” </p>
  <div class="Footer">
    <p class="Dates">This page was created on 2nd
    <a href="../../../../../../../new/19/12.htm">December 2019</a> and was last 
    modified on 30th <a href="../../../../../../../new/22/10.htm">November 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1922.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2019-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5309" -->
  </div>
</div>

</body>

</html>

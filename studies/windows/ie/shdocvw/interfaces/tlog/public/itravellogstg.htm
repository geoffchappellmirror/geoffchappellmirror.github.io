<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>ITravelLogStg</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/ie.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js">
</script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js">
</script>
<script type="text/javascript" src="../../../../_scripts/ie.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="14798" endspan -->
<h1>ITravelLogStg </h1>
<table>
  <tr>
    <td><span class="constant">IID_ITravelLogStg</span> </td>
    <td><span class="iid">{7EBFDD80-AD18-11D3-A4C5-00C04F72D6B8}</span> </td>
  </tr>
</table>
<p>The <span class="interface">ITravelLogStg</span> methods are (as ordered in 
the virtual function table after the <span class="interface">IUnknown</span> 
methods):
</p>
<table class="Struct">
  <colgroup>
    <col class="Offset"><col class="Name">
  </colgroup>
  <tr>
    <th>Offset </th>
    <th>Method </th>
  </tr>
  <tr>
    <td>0x0C </td>
    <td><span class="method">CreateEntry</span> </td>
  </tr>
  <tr>
    <td>0x10 </td>
    <td><span class="method">TravelTo</span> </td>
  </tr>
  <tr>
    <td>0x14 </td>
    <td><span class="method">EnumEntries</span> </td>
  </tr>
  <tr>
    <td>0x18 </td>
    <td><span class="method">FindEntries</span> </td>
  </tr>
  <tr>
    <td>0x1C </td>
    <td><span class="method">GetCount</span> </td>
  </tr>
  <tr>
    <td>0x20 </td>
    <td><span class="method">RemoveEntry</span> </td>
  </tr>
  <tr>
    <td>0x24 </td>
    <td><span class="method">GetRelativeEntry</span> </td>
  </tr>
</table>
<p>with prototypes: </p>
<pre class="source">HRESULT CreateEntry (PCWSTR, PCWSTR, ITravelLogEntry *, BOOL, ITravelLogEntry *);</pre>
<pre class="source">HRESULT TravelTo (ITravelLogEntry *);</pre>
<pre class="source">HRESULT EnumEntries (DWORD, IEnumTravelLogEntry **);</pre>
<pre class="source">HRESULT FindEntries (DWORD, PCWSTR, IEnumTravelLogEntry **);</pre>
<pre class="source">HRESULT GetCount (DWORD, DWORD *);</pre>
<pre class="source">HRESULT RemoveEntry (ITravelLogEntry *);</pre>
<pre class="source">HRESULT GetRelativeEntry (int, ITravelLogEntry **);</pre>
<h2>Implementation </h2>
<p>The one known implementation is in a class, named <span class="class">
CPublicTravelLog</span> 
according to Microsoft’s published symbol files, that exists to enclose a 
browser’s
<a href="../index.htm">travel log</a>. For any one browser’s travel log, the
<span class="argument">punk</span> argument required by most of the travel log’s 
methods is a generality that is not needed. It is always the same and can 
usefully be hidden from the client’s attention. Except for <span class="method">
FindEntries</span>, which is implemented to fail trivially, all the <span class="interface">
ITravelLogStg</span> 
methods then become more or less straightforward translations to a corresponding 
method of the underlying travel log’s <span class="interface">
<a href="../itravellogex/index.htm">ITravelLogEx</a></span> interface (or in one 
case, <span class="interface"><a href="../itravellog.htm">ITravelLog</a></span>):
</p>
<ul>
  <li><span class="method">CreateEntry</span> to <span class="method">
  <a href="../itravellogex/insertentry.htm">InsertEntry</a></span> </li>
  <li><span class="method">TravelTo</span> to <span class="method">
  <a href="../itravellogex/traveltoentry.htm">TravelToEntry</a></span> </li>
  <li><span class="method">EnumEntries</span> to <span class="method">
  <a href="../itravellogex/createenumentry.htm">CreateEnumEntry</a></span> </li>
  <li><span class="method">GetCount</span> to <span class="method">
  <a href="../itravellogex/countentrynodes.htm">CountEntryNodes</a></span> </li>
  <li><span class="method">RemoveEntry</span> to <span class="method">
  <a href="../itravellogex/deleteentry.htm">DeleteEntry</a></span> </li>
  <li><span class="method">GetRelativeEntry</span> to <span class="method">
  GetTravelEntry</span>
  </li>
</ul>
<p>The translations that are less straightforward are of <span class="method">
CreateEntry</span> 
and <span class="method">GetRelativeEntry</span>. For the latter, the 
translation is to a method of the older <span class="interface">ITravelLog</span> 
interface, which produces the found entry in terms of an <span class="interface">
ITravelEntry</span> 
pointer, which requires conversion. Translation of <span class="method">
CreateEntry</span> 
is much less straightforward because the public travel log must set itself up to 
look like a travel log client to the underlying travel log. </p>
<p>Despite these slight complications, there is no better way to understand
<span class="interface">ITravelLogStg</span> except as dressing
<span class="interface">ITravelLog</span> and <span class="interface">
ITravelLogEx</span> 
for easier use. Note however that <span class="interface">ITravelLogStg</span> 
exposes only a tiny portion of the underlying travel log’s functionality (and 
none at all of its <span class="interface">ITravelLog2</span> interface). </p>
<h2>Availability </h2>
<p>The <span class="interface">ITravelLogStg</span> interface is implemented in 
SHDOCVW version 5.50 and higher, and in IEFRAME version 7.00. </p>
<div class="Footer">
  <p class="Dates">This page was created on 1st April 2008 and was last modified 
  on 2nd April 2008. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c08.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2008. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="6530" endspan -->
</div>

</body>

</html>
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SYSTEM_EXCEPTION_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>SYSTEM_EXCEPTION_INFORMATION </h1>
<p>The <span class="struct">SYSTEM_EXCEPTION_INFORMATION</span> structure is what 
a successful call to <span class="function"><a href="query.htm">ZwQuerySystemInformation</a></span> 
or <span class="function">NtQuerySystemInformation</span> produces in its output 
buffer when given the information class <span class="constant">SystemExceptionInformation</span> 
(0x21). </p>
<h2>Documentation Status </h2>
<p>The <span class="struct">SYSTEM_EXCEPTION_INFORMATION</span> structure is defined 
in WINTERNL.H from the Software Development Kit (SDK). The definition there has 
the whole structure as one array of bytes, named <span class="member">Reserved1</span>. 
Documentation of <span class="function">NtQuerySystemInformation</span> describes 
the structure as “opaque” and suggests that whatever is produced in it for the
<span class="constant">SystemExceptionInformation</span> case “can be used to generate 
an unpredictable seed for a random number generator.” </p>
<!--webbot bot="Include" U-Include="_include/type_info_urlmon.htm" TAG="BODY" startspan -->

<p>Microsoft does publish the practical equivalent of a C-language definition as 
type information in public symbol files, though not for the kernel, where the structure 
is prepared, nor even for low-level user-mode DLLs that interpret the structure, 
but for various higher-level user-mode DLLs such as URLMON.DLL and only then starting 
with version 6.2. </p>

<!--webbot bot="Include" endspan i-checksum="38013" -->
<!--webbot bot="Include" U-Include="_include/type_info_ddklibs.htm" TAG="BODY" startspan -->

<p>Two earlier disclosures of type information are known, though not in symbol files 
but in statically linked libraries: GDISRVL.LIB from the Device Driver Kit (DDK) 
for Windows NT 3.51; and SHELL32.LIB from the DDK for Windows NT 4.0. </p>

<!--webbot bot="Include" endspan i-checksum="55883" -->
<h2>Layout </h2>
<p>The <span class="struct">SYSTEM_EXCEPTION_INFORMATION</span> is 0x10 bytes in 
both 32-bit and 64-bit Windows, starting with version 4.0, but is only 0x0C bytes 
originally. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>
    <pre class="source">ULONG AlignmentFixupCount;</pre>
    </td>
    <td>3.50 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 </td>
    <td>
    <pre class="source">ULONG ExceptionDispatchCount;</pre>
    </td>
    <td>3.50 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x08 </td>
    <td>
    <pre class="source">ULONG FloatingEmulationCount;</pre>
    </td>
    <td>3.50 and higher </td>
    <td>last member in 3.50 to 3.51 </td>
  </tr>
  <tr>
    <td>0x0C </td>
    <td>
    <pre class="source">ULONG ByteWordEmulationCount;</pre>
    </td>
    <td>4.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
</table>
<p>The first two or three counts, and perhaps all four in principle, are aggregated 
over all processors from the similarly named members of the <span class="struct">
<a href="../../../inc/ntos/kprcb.htm">KPRCB</a></span> for each processor. 
(The <span class="struct">KPRCB</span> members have a <span class="member">Ke</span> 
prefix.) Since version 6.0 discontinued floating-point emulation, the
<span class="member">FloatingPointEmulationCount</span> is always zero. Whatever 
may have been intended by the extension for version 4.0 (perhaps for some other 
processor architecture), the <span class="member">ByteWordEmulationCount</span> 
is always zero. </p>
<div class="Footer">
  <p class="Dates">This page was created on 9th July 2016 but was not published 
  until 25th <a href="../../../../../../../new/16/10.htm">October 2016</a>. It was 
  last modified on 27th June 2019. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1619.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2019. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5029" -->
</div>

</body>

</html>

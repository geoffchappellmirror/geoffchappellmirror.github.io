<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Global Counters</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/shell.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js">
</script>
<script type="text/javascript" src="../../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="55064" endspan -->
<h1>Global Counters </h1>
<p>From version 5.00 onwards, SHLWAPI provides a set of functions for working 
with global counters: </p>
<ul>
  <li><span class="undocumented function"><a href="security.htm">
  CreateAllAccessSecurityAttributes</a></span>
  </li>
  <li><span class="undocumented function"><a href="create.htm">
  SHGlobalCounterCreate</a></span>
  </li>
  <li><span class="undocumented function"><a href="createnamed.htm">
  SHGlobalCounterCreateNamed</a></span>
  </li>
  <li><span class="undocumented function"><a href="decrement.htm">
  SHGlobalCounterDecrement</a></span>
  </li>
  <li><span class="undocumented function"><a href="getvalue.htm">
  SHGlobalCounterGetValue</a></span>
  </li>
  <li><span class="undocumented function"><a href="increment.htm">
  SHGlobalCounterIncrement</a></span>
  </li>
</ul>
<p>A global counter is in essence a named <span class="type">LONG</span> in 
system memory. SHLWAPI contrives to present the counter like a named kernel 
object so that handles can be obtained to it by multiple processes, which may 
then increment, decrement or read the counter. </p>
<p>The <span class="function">SHGlobalCounterCreateNamed</span> function either 
creates or opens a counter with a given name and a given initial value for the 
counter. The probably earlier function <span class="function">
SHGlobalCounterCreate</span> 
does the same but with the name formed from a GUID and with the initial value of 
a newly created counter being necessarily zero. </p>
<p>The <span class="function">SHGlobalCounterIncrement</span> and
<span class="function">SHGlobalCounterDecrement</span> functions seem intended 
in principle to correspond closely to the standard API functions
<span class="function">InterlockedIncrement</span> and <span class="function">
InterlockedDecrement</span>. The standard functions act on a <span class="type">
LONG</span> variable that is specified by an address, which may be in memory 
shared among multiple processes. Both return what the variable got changed to. 
Both are atomic, in the sense that whatever reads and writes are performed on 
the variable in one thread cannot be interrupted by reads or writes performed on 
the variable in some other thread. The SHLWAPI functions seem intended to have 
all this same behaviour except that the
<span class="type">LONG</span> variable is specified by a handle, which eases 
reference to the variable from multiple processes and hides that the variable 
actually is implemented in (system) memory shared by all processes. </p>
<p>The <span class="function">SHGlobalCounterGetValue</span> function reads the 
counter. </p>
<p>A side-effect of exposing an object to multiple processes, and especially for 
inheritance by child processes, is that SHLWAPI has to create some wide-ranging 
security attributes. These may be generally useful and are made accessible 
through the <span class="function">CreateAllAccessSecurityAttributes</span> 
function.
</p>
<p>All these functions are exported only by ordinal. None are yet documented.
</p>
<div class="Footer">
  <!--webbot bot="Include" U-Include="../../../_include/c0407.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2004-2007. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="54855" endspan -->
</div>

</body>

</html>
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>ZwSetIntervalProfile</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="29544" -->
<h1>ZwSetIntervalProfile </h1>
<p>This function sets the profile interval for a given profile source. </p>
<h2>Declaration </h2>
<pre class="source">NTSTATUS 
NtSetIntervalProfile (
    ULONG Interval, 
    <a href="../../ke/profobj/kprofile_source.htm">KPROFILE_SOURCE</a> ProfileSource);</pre>
<p>in version 3.51 and higher, but </p>
<pre class="source">NTSTATUS NtSetIntervalProfile (ULONG Interval);</pre>
<p>in versions 3.10 and 3.50. </p>
<h3>Parameters </h3>
<p>The <span class="argument">Interval</span> argument provides the new time or 
count that is to separate profile interrupts that have the given source. The unit 
of measurement depends on the source. </p>
<p>The <span class="argument">ProfileSource</span> argument selects a possible source 
of profile interrupts. </p>
<h3>Return Value </h3>
<!--webbot bot="Include" U-Include="../../_include/ntstatus.htm" TAG="BODY" startspan -->

<p>The function returns <span class="constant">STATUS_SUCCESS</span> if successful, 
else a negative error code. </p>

<!--webbot bot="Include" endspan i-checksum="8" -->
<h2>Availability </h2>
<p>The <span class="function">NtSetIntervalProfile</span> function and its alias
<span class="function">ZwSetIntervalProfile</span> are exported by name from NTDLL 
in version 3.10 and higher. In kernel mode, where <span class="function">ZwSetIntervalProfile</span> 
is a stub and <span class="function">NtSetIntervalProfile</span> is the implementation, 
neither is exported until the 1607 release of Windows 10 exports the stub. </p>
<h2>Documentation Status </h2>
<p>Neither <span class="function">NtSetIntervalProfile</span> nor its alias is documented. 
As <span class="function">ZwSetIntervalProfile</span>, it is declared in the ZWAPI.H 
file in the Windows Driver Kit (WDK) for Windows 10. </p>
<p>The semi-documented repackaging of <span class="function">NtSetIntervalProfile</span> 
in a higher-level user-mode module (than NTDLL) is the <span class="constant">TraceSampledProfileIntervalInfo</span> 
(0x05) information class of the ADVAPI32 and SECHOST function
<span class="function">
<a href="../../../../../win32/advapi32/api/etw/logapi/set.htm">TraceSetInformation</a></span>. 
Not that the documentation spells it out, but the information buffer to provide 
for this information class is the <span class="struct">TRACE_PROFILE_INTERVAL</span>. 
Though the structure appears to be undocumented, a C-language definition is available 
in EVNTRACE.H. That structure’s non-zero <span class="member">Source</span> on input 
is in fact a <span class="enum">KPROFILE_SOURCE</span>. It and the structure’s
<span class="member">Interval</span> becomes the two arguments to
<span class="function">NtSetIntervalProfile</span>. </p>
<h2>Behaviour </h2>
<!--webbot bot="Include" U-Include="../../_include/win10.htm" TAG="BODY" startspan -->

<p>The following implementation notes come mainly from inspection of the kernel 
from the original release of Windows 10. They may some day get revised to account 
for other versions. Where anything is written about earlier versions, take it not 
as an attempt at presenting a comprehensive history but as a bonus from my being 
unable to resist a quick trip down memory lane. I have no programme of revisiting 
this analysis for later releases. Updates mean just that I happen to have noticed 
something and to have found time to add it. </p>

<!--webbot bot="Include" endspan i-checksum="60685" -->
<h3>Privilege </h3>
<p>The function requires <span class="constant">SeSystemProfilePrivilege</span>. 
Without it, the function returns <span class="constant">STATUS_PRIVILEGE_NOT_HELD</span>. 
With it, the function necessarily succeeds, but the behaviour is not trivial. It 
may help to sketch the basic behaviour before getting to details. </p>
<h3>Basics </h3>
<p>All profile sources other than <span class="constant">ProfileAlignmentFixup</span> 
(0x01) are managed by the HAL. On each currently active processor, the kernel calls 
the HAL via the <span class="member">HalSetSystemInformation</span> pointer in the 
kernel’s <span class="struct"><a href="../../../inc/ntos/hal/hal_dispatch.htm">HAL_DISPATCH</a></span>, 
specifically for the information class <span class="constant">HalProfileSourceInterval</span> 
(0x00), giving the <span class="argument">Interval</span> and
<span class="argument">ProfileSource</span> as the information. </p>
<p>What, if anything, the HAL does with the <span class="argument">Interval</span> 
and <span class="argument">ProfileSource</span> is immaterial to the
<span class="function">NtSetIntervalProfile</span> function. Some points to watch 
for can be surmised as interface features. The profile source might not be supported. 
For each supported profile source, the HAL has a minimum and maximum interval which 
can be learnt in advance even from user mode through <span class="function">
<a href="../../../../../win32/advapi32/api/etw/logapi/query.htm">TraceQueryInformation</a></span> 
with the information class <span class="constant">TraceProfileSourceListInfo</span> 
(0x07). How the HAL is required to respond to an attempt to set an interval that 
is too small or too large is unclear. Indeed, it’s not clear that the HAL is required 
to accept any interval exactly as given. If it matters, e.g., for calculations, 
to know what interval the HAL uses, it might be prudent to follow
<span class="function">NtSetIntervalProfile</span> with a call to
<span class="function"><a href="queryinterval.htm">NtQueryIntervalProfile</a></span>.
</p>
<p>Beware anyway that profile sources are global. An interval that one process sets 
for a profile source can be changed by any other sufficiently privileged process’s 
call to the same function for the same profile source. </p>
<h3>Refinements </h3>
<p>If the tracing of profile events to NT Kernel Logger sessions is enabled when 
the function has set the interval, the function will trace an event to record what 
the interval changed from. If the tracing of profile events is already enabled before 
the function sets the interval, the function first queries for the current setting, 
as preparation. </p>
<p>The profile source <span class="constant">ProfileTime</span> (0) has special 
interest to the kernel for cache errata support. If the desired
<span class="argument">Interval</span> is larger than the kernel needs for that 
support, the kernel’s interval is what gets set.&nbsp; </p>
<p>For <span class="constant">ProfileAlignmentFixup</span>, the kernel does not 
involve the HAL but simply remembers the given <span class="argument">Interval</span>. 
No x86 or x64 build of Windows in any version is known to make any other use of 
this interval except that it can be set and queried. </p>
<p>Once the interval has been set as described above, if tracing of profile events 
is enabled, the function queries for what actually did get set as the new interval 
and puts both the new and old settings in an event. If tracing was not enabled before 
the function set the interval, then zero is used as the old setting. The
<a href="../../etw/callouts/hookid.htm">hook ID</a> for the event that records the 
change of interval is <span class="constant">PERFINFO_LOG_TYPE_SAMPLED_PROFILE_SET_INTERVAL</span> 
(0x0F48). </p>
<div class="Footer">
  <p class="Dates">This page was created on 7th
  <a href="../../../../../../../new/17/01.htm">January 2017</a> and was last modified 
  on 23rd November 2018. </p>
  <!--webbot bot="Include" U-Include="../../../../_include/c1718.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2017-2018. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5141" -->
</div>

</body>

</html>

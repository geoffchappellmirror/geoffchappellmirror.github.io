<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>WMI_BUFFER_HEADER</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="33595" -->
<div class="Main">
  <p class="alert">This page is being prepared for a substantial reworking. Some 
  content may be temporarily missing. Temporarily may turn into indefinitely. New 
  content may be more than usually defective. The page is now published only as 
  a revision in progress. Use with caution. </p>
  <h1>WMI_BUFFER_HEADER </h1>
  <p>The <span class="struct">WMI_BUFFER_HEADER</span> structure (formally
  <span class="struct">_WMI_BUFFER_HEADER</span>) begins each trace buffer that an event 
  logger, or more formally an event tracing sesssion, uses for storing event data 
  on the way to an Event Trace Log (ETL) file. Indeed, because such buffers are 
  flushed as is, header and all, the structure is not only at the beginning of every 
  ETL file but also recurs throughout. </p>
  <p>The rest of each buffer, after the fixed-size <span class="struct">WMI_BUFFER_HEADER</span>, 
  is a sequence of variable-size WMI data blocks. In the formulation for Windows 
  Management Instrumentation (WMI), each data block begins with a fixed-size
  <span class="struct">WNODE_HEADER</span>. Event Tracing for Windows (ETW) repurposes 
  the scheme so that each data block begins with one of several possible fixed-size
  <a href="../traceheaders/index.htm">Trace Headers</a>. </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">WMI_BUFFER_HEADER</span> structure is not documented. 
  A C-language definition is published in NTWMI.H from the original and Version 
  1511 editions of the Windows Driver Kit (WDK) for Windows 10. </p>
  <h2>Layout </h2>
  <p>The <span class="struct">WMI_BUFFER_HEADER</span> is 0x48 bytes in both 32-bit 
  and 64-bit Windows in all versions for which the structure is known, meaning 5.0 
  and higher. Offsets, names and types below are from type information for the structure 
  in symbol files for the kernel, starting with Windows XP SP3 and Windows Server 
  2003 SP2. Since symbol files for earlier versions do not contain type information 
  for this structure, what’s known for them is instead inferred from what use these 
  versions of the kernel are seen to make of the structure in comparison with those 
  for which Microsoft’s names and types are known. Where the correspondence is close, 
  it seems reasonable to suppose continuity. Some use, however, has no correspondence, 
  the code having changed too much. Even where the use hasn’t changed, tracking 
  it down exhaustively would be difficult, if not impossible, even with source code.
  </p>
  <p>The structure’s development is hard enough to track even for the versions that 
  do have type information in public symbol files. The modern layout has been very 
  nearly stable since Windows 7. The description of earlier versions is complicated 
  because the structure’s creation from and compatibility with the documented
  <span class="struct">WNODE_HEADER</span> is explicit. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="3">0x00 </td>
        <td>
        <pre class="source">union {
    WNODE_HEADER Wnode;
    struct {
        /* see below (Lists)  */
    };
    struct {
        /* see below (WNODE-compatible)  */
    };
};</pre>
        </td>
        <td>5.0 to 5.2 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    WNODE_HEADER Wnode;
    struct {
        /*  see below (WNODE-compatible)  */
    };
};</pre>
        </td>
        <td>6.0 only </td>
      </tr>
      <tr>
        <td>
        <pre class="source">/*  unstructured members, see below (WNODE-compatible)  */</pre>
        </td>
        <td>6.1 and higher </td>
      </tr>
      <tr>
        <td>0x30 </td>
        <td>
        <pre class="source">ULONG Offset;</pre>
        </td>
        <td>5.0 and higher </td>
      </tr>
      <tr>
        <td>0x34 (5.0 to 5.1) </td>
        <td>
        <pre class="source">ULONG EventsLost;</pre>
        </td>
        <td>5.0 to 5.1 </td>
      </tr>
      <tr>
        <td>0x34 </td>
        <td>
        <pre class="source">USHORT <a href="bufferflag.htm">BufferFlag</a>;</pre>
        </td>
        <td>5.2&nbsp; and higher </td>
      </tr>
      <tr>
        <td>0x36 </td>
        <td>
        <pre class="source">USHORT <a href="buffertype.htm">BufferType</a>;</pre>
        </td>
        <td>5.2 and higher </td>
      </tr>
      <tr>
        <td>0x38 </td>
        <td>
        <pre class="source">union {
    /*  changing members, see below (Tail)  */
};</pre>
        </td>
        <td>5.0 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>For Microsoft’s names for the possible values of <span class="member">BufferFlag</span> 
  and <span class="member">BufferType</span>, follow the links. </p>
  <h3>WNODE Header Overlay </h3>
  <p>In versions before 6.0, the <span class="struct">WMI_BUFFER_HEADER</span> begins 
  with a <span class="struct">WNODE_HEADER</span> in union with two unnamed structures. 
  Version 6.0 removed the first, and version 6.1 did away with the union by removing 
  the <span class="struct">WNODE_HEADER</span>. </p>
  <h4>Lists </h4>
  <p>The first of the unnamed structures that overlays the <span class="struct">
  WNODE_HEADER</span> seems only ever to have had two meaningful members,
  <span class="member">SlistEntry</span> and <span class="member">Entry</span>, 
  defined in that order but placed with <span class="member">Entry</span> (at offset 
  0x18) before <span class="member">SlistEntry</span> (at 0x1C and 0x20, for x86 
  and x64, respectively): </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>
        <pre class="source">ULONGLONG Reserved1;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x08 </td>
        <td>
        <pre class="source">ULONGLONG Reserved2;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x10 </td>
        <td>
        <pre class="source">LARGE_INTEGER Reserved3;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x18 </td>
        <td>
        <pre class="source">LIST_ENTRY Entry;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    struct {
        PVOID Alignment;
        SINGLE_LIST_ENTRY SlistEntry;
    };
    LIST_ENTRY Entry;
};</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td><span class="member">SlistEntry</span> next at offset 0x38; <br>
        <span class="member">Entry</span> next at offset 0x38 </td>
      </tr>
    </tbody>
  </table>
  <p>Versions 5.0 to 5.2 cache free buffers. Version 5.0 keeps a double-linked list, 
  linked through <span class="member">Entry</span>. Versions 5.1 and 5.2 keep a 
  single-linked list with an <span class="struct">SLIST_HEADER</span>, linking through
  <span class="member">SlistEntry</span>. While no use of <span class="member">SlistEntry</span> 
  is known in version 5.0 and none of <span class="member">Entry</span> in versions 
  5.1 and 5.2, It is here inferred that <span class="member">SlistEntry</span> was 
  not yet defined for version 5.0 and <span class="member">Entry</span> was retained 
  from version 5.0. </p>
  <h4>WNODE-Compatible </h4>
  <p>When the two list entries were moved beyond the <span class="struct">WNODE_HEADER</span> 
  to offset 0x38 for version 6.0, the first unnamed structure in the union was removed. 
  The other unnamed structure was anyway the one that more closely overlaid the
  <span class="struct">WNODE_HEADER</span>, duplicating the latter’s
  <span class="member">TimeStamp</span> and <span class="member">Guid</span> (and
  <span class="member">BufferSize</span>, eventually) and keeping at least the names 
  of the <span class="member">ClientContext</span> and <span class="member">Flags</span> 
  members. It remained in union with the <span class="struct">WNODE_HEADER</span> 
  until the latter was removed for version 6.1. Its members then became direct members 
  of the <span class="struct">WMI_BUFFER_HEADER</span>: </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2">0x00 </td>
        <td>
        <pre class="source">LONG ReferenceCount;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>next as <span class="type">LONG volatile</span> at 0x0C </td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG BufferSize;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x04 </td>
        <td>
        <pre class="source">ULONG SavedOffset;</pre>
        </td>
        <td>5.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x08 </td>
        <td>
        <pre class="source">ULONG CurrentOffset;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG volatile CurrentOffset;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x0C </td>
        <td>
        <pre class="source">ULONG UsePerfClock;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">LONG volatile ReferenceCount;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>previously <span class="type">LONG</span> at 0x00 </td>
      </tr>
      <tr>
        <td rowspan="3">0x10 </td>
        <td>
        <pre class="source">LARGE_INTEGER TimeStamp;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    LARGE_INTEGER TimeStamp;
    LARGE_INTEGER StartPerfClock;
};</pre>
        </td>
        <td>6.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">LARGE_INTEGER TimeStamp;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x18 (5.0 to 5.2) </td>
        <td>
        <pre class="source">GUID Guid;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x18 </td>
        <td>
        <pre class="source">LONGLONG SequenceNumber;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="3">0x20 </td>
        <td>
        <pre class="source">ULONG Spare0;
ULONG Spare1;</pre>
        </td>
        <td>early 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    ULONG Padding0 [2];
    SINGLE_LIST_ENTRY SlistEntry;
    WMI_BUFFER_HEADER *NextBuffer;
};</pre>
        </td>
        <td>late 6.0 to 6.1 </td>
        <td><span class="member">SlistEntry</span> previously at 0x38; <br>
        <span class="member">NextBuffer</span> previously at 0x38; </td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    struct {
        ULONGLONG ClockType : 3;
        ULONGLONG Frequency : 61;
    };
    SINGLE_LIST_ENTRY SlistEntry;
    WMI_BUFFER_HEADER *NextBuffer;
};</pre>
        </td>
        <td>6.2 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x28 </td>
        <td>
        <pre class="source"><a href="../wmi_client_context.htm">WMI_CLIENT_CONTEXT</a> ClientContext;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ETW_BUFFER_CONTEXT ClientContext;</pre>
        </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="4">0x2C </td>
        <td>
        <pre class="source">ULONG Flags;</pre>
        </td>
        <td>5.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    <a href="../wmi_buffer_state.htm">WMI_BUFFER_STATE</a> State;
    ULONG Flags;
};</pre>
        </td>
        <td>5.1 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">union {
    <a href="../etw_buffer_state.htm">ETW_BUFFER_STATE</a> State;
    ULONG Flags;
};</pre>
        </td>
        <td>6.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ETW_BUFFER_STATE State;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>For a <span class="struct">WMI_BUFFER_HEADER</span> in an ETL file, the
  <span class="member">BufferSize</span> might as well be regarded as the offset 
  in bytes to the next buffer in the file (or to the end of the file). The
  <span class="member">SavedOffset</span> is similarly the number of bytes that 
  are valid within the buffer, both of the <span class="struct">WMI_BUFFER_HEADER</span> 
  and the events that follow. </p>
  <p>The <span class="struct">WMI_BUFFER_STATE</span> is a structure of
  <span class="type">ULONG</span> bit fields. It is not known to be 
  accessed as bit fields in version 5.0 and is here regarded as being not yet defined 
  for that version. The <span class="enum">ETW_BUFFER_STATE</span> that supersedes 
  it is an enumeration. Though the <span class="member">Flags</span> member is retained 
  for version 6.0, it will no longer have been useful for allowing the bit fields 
  of the <span class="enum">WMI_BUFFER_STATE</span> to be manipulated together, 
  and version 6.1 removes it. </p>
  <h3>Tail </h3>
  <p>The last 0x10 bytes, at offset 0x38, of the <span class="struct">WMI_BUFFER_HEADER</span> 
  are an unnamed union in all versions, with numerous complications for orderly 
  description: </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset"><col class="Definition"><col class="Versions">
      <col class="Remarks">
    </colgroup>
    <thead>
      <tr>
        <th>Offset </th>
        <th>Definition </th>
        <th>Versions </th>
        <th>Remarks </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td rowspan="2">0x38 </td>
        <td>
        <pre class="source">GUID InstanceGuid;</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG Padding1 [4];</pre>
        </td>
        <td>6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td rowspan="2">0x38 </td>
        <td>
        <pre class="source">LARGE_INTEGER StartTime;</pre>
        </td>
        <td>6.0 only </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">ETW_REF_CLOCK ReferenceTime;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x38 </td>
        <td>
        <pre class="source">LIST_ENTRY Entry;</pre>
        </td>
        <td>6.0 only </td>
        <td>previously at 0x18 </td>
      </tr>
      <tr>
        <td>0x38 </td>
        <td>
        <pre class="source">SINGLE_LIST_ENTRY SlistEntry;</pre>
        </td>
        <td>early 6.0 only </td>
        <td>previously at 0x1C (x86) and 0x20 (x64); <br>
        next at 0x20 </td>
      </tr>
      <tr>
        <td rowspan="4">0x38 </td>
        <td>
        <pre class="source">struct {
    PVOID LoggerContext;
    SINGLE_LIST_ENTRY GlobalEntry;
};</pre>
        </td>
        <td>5.0 to 5.2 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">struct {
    WMI_BUFFER_HEADER *NextBuffer;
    SINGLE_LIST_ENTRY GlobalEntry;
};</pre>
        </td>
        <td>early 6.0 </td>
        <td><span class="member">NextBuffer</span> next at 0x20 </td>
      </tr>
      <tr>
        <td>
        <pre class="source">struct {
    PVOID Padding2;
    SINGLE_LIST_ENTRY GlobalEntry;
};</pre>
        </td>
        <td>late 6.0 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>
        <pre class="source">LIST_ENTRY GlobalEntry;</pre>
        </td>
        <td>6.1 and higher </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>0x38 </td>
        <td>
        <pre class="source">struct {
    PVOID Pointer0;
    PVOID Pointer1;
};</pre>
        </td>
        <td>late 6.0 and higher </td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <div class="Footer">
    <p class="Dates">This page was created on 27th
    <a href="../../../../../../../../new/16/11.htm">November 2016</a> and was last 
    modified on 23rd <a href="../../../../../../../../new/22/10.htm">October 2022</a>.
    </p>
    <!--webbot bot="Include" U-Include="../../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="14250" -->
  </div>
</div>

</body>

</html>

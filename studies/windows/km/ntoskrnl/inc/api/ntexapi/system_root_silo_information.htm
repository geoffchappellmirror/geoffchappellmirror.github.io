<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>SYSTEM_ROOT_SILO_INFORMATION</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="48540" -->
<div class="Main">
  <h1>SYSTEM_ROOT_SILO_INFORMATION </h1>
  <p>The <span class="struct">SYSTEM_ROOT_SILO_INFORMATION</span> structure is what 
  a successful call to <span class="function">
  <a href="../../../api/ex/sysinfo/query.htm">ZwQuerySystemInformation</a></span> 
  or <span class="function">NtQuerySystemInformation</span> produces in its output 
  buffer when given the information class <span class="constant">SystemRootSiloInformation</span> 
  (0xAE). </p>
  <h2>Documentation Status </h2>
  <p>The <span class="struct">SYSTEM_ROOT_SILO_INFORMATION</span> structure is not 
  documented. Neither is Microsoft known to have published any C-language declaration 
  in any header from any development kit for either kernel-mode or user-mode programming.
  </p>
  <p>Microsoft does publish the practical equivalent of a C-language definition 
  as type information in a handful of private symbol files that Microsoft has included 
  in packages of public symbol files and continues to make available through Microsoft’s 
  public symbol server. These private symbol files are not for the kernel, where 
  the structures is prepared, nor even for low-level user-mode DLLs that interpret 
  the structure. They are instead for various higher-level user-mode DLLs such as 
  URLMON.DLL. The latter is here singled out because of its origins in Internet 
  Explorer and thence for the strong suggestion that even a decade after Microsoft’s 
  anti-trust settlement Microsoft’s programmers of Internet Explorer had access 
  to more details of low-level Windows programming than Microsoft publishes for 
  wider use. </p>
  <h2>Variability </h2>
  <p>Though the <span class="struct">SYSTEM_ROOT_SILO_INFORMATION</span> is used 
  for output through an API to both kernel-mode and user-mode callers, it varied 
  while Microsoft’s implementation of silos was yet to settle: </p>
  <table class="Sizes">
    <colgroup>
      <col class="Version"><col class="Size" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>Version </th>
        <th>Size (x86) </th>
        <th>Size (x64) </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>10.0 </td>
        <td>0x08 </td>
        <td>0x10 </td>
      </tr>
      <tr>
        <td>1511 </td>
        <td>0x14 </td>
        <td>0x14 </td>
      </tr>
      <tr>
        <td>1607 to 2004 </td>
        <td>0x08 </td>
        <td>0x08 </td>
      </tr>
    </tbody>
  </table>
  <p>Except for the original Windows 10, the structure is not just the same size 
  in 32-bit and 64-bit Windows but is identical internally. </p>
  <h2>Layout </h2>
  <p>The sizes in the preceding table and the offsets, names and types in the next 
  are from type information in symbol files. </p>
  <table class="Struct">
    <colgroup>
      <col class="Offset" span="2"><col class="Definition">
      <col class="Versions">
    </colgroup>
    <thead>
      <tr>
        <th>Offset (x86) </th>
        <th>Offset (x64) </th>
        <th>Definition </th>
        <th>Versions </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>0x00 </td>
        <td>0x00 </td>
        <td>
        <pre class="source">ULONG NumberOfSilos;</pre>
        </td>
        <td>10.0 and higher </td>
      </tr>
      <tr>
        <td rowspan="3">0x04 </td>
        <td rowspan="3">0x08 (10.0); <br>
        0x04 </td>
        <td>
        <pre class="source">ULONG_PTR SiloIdList [ANYSIZE_ARRAY];</pre>
        </td>
        <td>10.0 only </td>
      </tr>
      <tr>
        <td>
        <pre class="source">GUID SiloIdList [ANYSIZE_ARRAY];</pre>
        </td>
        <td>1511 only </td>
      </tr>
      <tr>
        <td>
        <pre class="source">ULONG SiloIdList [ANYSIZE_ARRAY];</pre>
        </td>
        <td>1607 and higher </td>
      </tr>
    </tbody>
  </table>
  <p>Provided the function is given a large enough output buffer, it aims to enter 
  into the <span class="member">SiloIdList</span> one silo identifier for each silo 
  that is in the caller’s silo. Put another way, the caller’s silo is taken as the 
  root silo. The caller is to be told of this silo and any within, but of none without.
  </p>
  <p>The nature of the identifier changed through the early versions while the silo 
  implementation was still in flux. Originally, the identifier is allocated from 
  a handle table (and is kept in the <span class="struct">
  <a href="../../ntos/ps/esilo.htm">ESILO</a></span>) and is thus produced as a 
  pointer-sized integer. Version 1511 instead produces the <span class="member">
  ContainerId</span> from the <span class="struct">
  <a href="../../ntos/ps/ejob/index.htm">EJOB</a></span>. What Microsoft settled 
  on for Version 1607 is the 32-bit <span class="member">JobId</span>. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 28th
    <a href="../../../../../../../new/16/10.htm">October 2016</a> and was last modified 
    on 20th <a href="../../../../../../../new/22/07.htm">August 2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../../../_include/c1622.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2016-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="4925" -->
  </div>
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>The Format Painter in Expression Web</title>
<link rel="stylesheet" type="text/css" href="../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/notes.css">
<script type="text/javascript" src="../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/notes.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript Header" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="55207" -->
<div class="Main">
  <h1>The Format Painter in Expression Web </h1>
  <p>For the best part of twenty years, Microsoft has offered in various programs 
  a very useful user-interface tool known as the Format Painter. This is a toolbar 
  button whose image is a paintbrush. With some source text selected, you click 
  on the toolbar button and the I-beam cursor for editing text picks up a little 
  paintbrush of its own. You then select some target text, and the formatting of 
  the source gets applied to the target. Once the formatting is copied, the I-beam 
  cursor loses its paintbrush. There are embellishments. For instance, it ordinarily 
  suffices just to place the caret in the intended source rather than going to the 
  slightly extra trouble of selecting the source. If the target is just a word, 
  then you copy the formatting to the whole of that word just by clicking in the 
  word. If you want to copy the formatting to multiple targets, double-click the 
  toolbar button and then no matter how many times you select a target, the paintbrush 
  remains on the I-beam cursor until you next click on the toolbar button. </p>
  <p>In Expression Web, the Format Painter is relegated to the Standard toolbar. 
  I say relegated because this toolbar is not displayed by a newly installed Expression 
  Web. You have to enable it. Aside from that, it seems intended to work as for 
  any word processor, including FrontPage. It’s even documented in the Expression 
  Web Help. However, there are quirks, and they are bad enough to make the Format 
  Painter unusable in practice. </p>
  <p>The essential problem may be that the Expression Web programmers simply never 
  intended the Format Painter as a tool for copying styles. You might think that 
  if the source text is in a <span class="htmlelement">span</span> element with 
  a particular class, then when the Format Painter is used to select some inline 
  text as the target, it would just wrap the target text in
  <span class="htmltag">&lt;span&gt;</span> tags and assign the same class, thus 
  copying the style from source to target. There can be complications, of course, 
  but that would be the basic behaviour to expect. It’s what FrontPage managed more 
  than acceptably, even for source text that has multiple classes. It’s what Word 
  does with its notion of styles. The Format Painter in Expression Web, however, 
  has very different behaviour even in the simplest of cases. </p>
  <h2>Bold and Italic </h2>
  <p>On a blank new page, create a New Style whose only attribute is to make text 
  bold. Type some text and apply the new style to some of it. For instance: </p>
  <img alt="Text Ready For Format Painter" src="_images/formatpainter/bold-before.jpg" width="848" height="88">
  <p>The Class box in the Style toolbar confirms that the word “formatted” in the 
  first sentence has been placed in a <span class="htmlelement">span</span> element 
  assigned to a class that I have named unimaginatively for bold text. In real work, 
  you might have many different sorts of textual object that you presently want 
  to distinguish by nothing more complex than making it bold. You might model this 
  by defining many differently named styles that all happen to have the same attribute. 
  If the word “formatted” in the second sentence has the same sort of meaning as 
  in the first, you will want it to have the same style as in the first sentence, 
  whatever that style may be named and whatever its present attributes. The Format 
  Painter is surely ideal for copying the style. Without knowing what the style 
  is, you just copy it. How easy and natural! </p>
  <p>So, click on the Format Painter button and then click in the word “formatted” 
  in the second sentence: </p>
  <img alt="Text After Painting the Format" src="_images/formatpainter/bold-after.jpg" width="848" height="88">
  <p>Yes, the bold formatting has been copied, but why does the Class box in the 
  Style toolbar not show the expected style for the bold character at the caret? 
  The answer, of course, is that the formatting has not been copied as a style. 
  Expression Web has made the target bold not by copying the
  <span class="htmltag">&lt;span&gt;</span> tag and <span class="htmlattribute">
  class</span> attribute from the source text but by wrapping the target text in
  <span class="htmltag">&lt;strong&gt;</span> tags. </p>
  <p>If you repeat the experiment but with “Use &lt;strong&gt; and &lt;em&gt; when 
  using bold and italic toolbar buttons” disabled at the General tab of the Page 
  Editor Options, then the target text is wrapped in <span class="htmltag">&lt;b&gt;</span> 
  tags instead. Expression Web has the Format Painter treat italic similarly, but 
  with <span class="htmltag">&lt;em&gt;</span> or <span class="htmltag">&lt;i&gt;</span> 
  tags. There seems to be no way to get the Format Painter to copy either bold or 
  italic formatting as a style. </p>
  <h2>Background Colour </h2>
  <p>Still, at least the Format Painter does copy bold and italic, albeit in disregard 
  of styles. Some other formatting is simply ignored. On a blank new page, call 
  up the New Style dialog, choose Background as the Category and pick yellow from 
  the drop-down list for the <span class="cssattribute">background-color</span> 
  attribute. Type some text and apply the new style to some of it, much as above:
  </p>
  <img alt="Before Painting Background Colour" src="_images/formatpainter/background-color-before.jpg" width="848" height="88">
  <p>While the text is selected, click on the Format Painter and then click on text 
  in the second sentence: </p>
  <img alt="After Painting the Background Colour" src="_images/formatpainter/background-color-after.jpg" width="848" height="88">
  <p>See that the background colour does not change. Reference to the HTML code 
  will confirm that the second sentence is unaltered, and indeed that no change 
  at all was made to the page. Yet despite nothing having been done, the Undo list 
  contains an entry for Paste Format. There is just no end to this silliness!
  </p>
  <h2>Automatic Style Application </h2>
  <p>It seems that Expression Web’s Format Painter gathers a list of the CSS attributes 
  that apply to the source text and then applies <span class="emphasis">some</span> 
  of these attributes to the target text as if the user were clicking on the corresponding 
  toolbar buttons or applying the formatting directly through such things as the 
  Font dialog (e.g., from the Format menu). In fairness to the Expression Web programmers, 
  I must point out that this behaviour, albeit with “all” where I have written “some”, 
  is hinted at in the Expression Web Help: </p>
  <blockquote>
    You can copy all attributes of text or an object, such as a layer, and apply 
    that formatting to other text or objects by using the <b>Format Painter</b> 
    button.
  </blockquote>
  <p>To test this, start again from a blank page, call up the New Style dialog and 
  define a style with as many sorts of formatting as you can think of without going 
  completely overboard, e.g., </p>
  <pre class="source">.silly {
  font-family: &quot;Courier New&quot;, Courier, monospace;
  font-size: x-large;
  font-weight: bold;
  font-style: italic;
  font-variant: small-caps;
  color: #FF0000;
  text-decoration: underline overline line-through;
  vertical-align: sub;
  letter-spacing: 1em;
  background-color: #FFFF00;
  border: thin dotted #00FF00;
  padding: 8px;
}</pre>
  <p>Type some text and apply this silly style to some of it: </p>
  <img alt="Before Painting Silly Style" src="_images/formatpainter/silly-before.jpg" width="848" height="88">
  <p>Then, for what is by now the familiar second step, click on the Format Painter 
  and then on some other text: </p>
  <img alt="After Painting Silly Style" src="_images/formatpainter/silly-after.jpg" width="848" height="88">
  <p>Now, I do not consider this to have copied all the attributes from source to 
  target, and I doubt that anyone at Microsoft would either. But neither is it credible 
  that nobody at Microsoft ever did this ridiculously simple test. So, how did this 
  behaviour survive into the released product? </p>
  <p>By the way, what has happened in the HTML code is that the target text is wrapped 
  in <span class="htmltag">&lt;em&gt;</span>, <span class="htmltag">&lt;strong&gt;</span> 
  and <span class="htmltag">&lt;span&gt;</span> tags, and the last of these is assigned 
  to an automatically generated style: </p>
  <pre class="source">.style1 {
  font-family: &quot;Courier New&quot;, Courier, monospace;
  font-size: x-large;
  color: #FF0000;
  font-variant: small-caps;
  text-decoration: underline overline line-through;
}</pre>
  <p>Not only have bold and italic been translated from CSS attributes to HTML tags, 
  and not only has the translation of CSS attributes for the automatically generated 
  style ignored several, but the translation has its own order. This suggests that 
  the Format Painter works its way through a list of attributes to translate.
  </p>
  <h2>Manual Style Application </h2>
  <p>With the Standard toolbar displayed, go to the CSS tab of the Page Editor Options 
  and choose Manual Style Application. The Format Painter on the Standard toolbar 
  turns to grey. It is disabled. Why is this so? </p>
  <p>As noted above, the Format Painter in Expression Web works by copying CSS attributes, 
  which are applied to the target text as if formatted directly. This brings in 
  the automatic generating and reusing of styles. As noted in
  <a href="styles.htm">Problems with Styles in Expression Web</a>, when Manual Style 
  Application is enabled, supposedly to gain extra control over the Automatic Style 
  Application, it seems to be impossible to confine the formatting to inline text. 
  Instead, the formatting always applies to whole paragraphs or other containers.
  </p>
  <p>Could it be that the programmers who developed the Format Painter realised 
  that Manual Style Application is dysfunctional for formatting inline text, with 
  implications that would be so much unwanted for the Format Painter that it was 
  better to disable the Format Painter while Manual Style Application is enabled? 
  Fine, but the flip side is that Microsoft can’t have been ignorant of this defect 
  in Manual Style Application. </p>
  <!--webbot bot="Include" U-Include="_include/v3.htm" TAG="BODY" startspan -->

<h2>Expression Web 3 </h2>
<p>Although this page was written for the original Expression Web, nothing needs 
to be changed for Expression Web 3. The silliness described here persists. It’s 
just no longer excusable as a relic from a long-forgotten first version (even granting 
that Expression Web is entitled to this excuse). That Microsoft’s programmers and 
testers and the many writers who support Expression Web haven’t done such simple 
experiments with this basic functionality is surely not credible. Yet the alternative 
is arguably worse, i.e., that they know of this silliness with the basics but disregard 
it. </p>

<!--webbot bot="Include" endspan i-checksum="63491" -->
  <h2>Expression Web 4 </h2>
  <p>Nothing needs to be changed for Expression Web 4, either. Evidently, despite 
  all the talk of Expression Web as a tool for writing style-based web pages, the 
  Format Painter is not style-based and is meant not to be. If you want to copy 
  a style from one place to another without caring what the style is, let alone 
  what it currently has as its attributes, then Expression Web means to make you 
  care and make you work. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 3rd March 2009 and was last modified 
    on 21st July 2010. </p>
    <!--webbot bot="Include" U-Include="../../_include/c0910.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009-2010. Geoff Chappell. All rights reserved. 
<a href="../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="51781" -->
  </div>
</div>

</body>

</html>

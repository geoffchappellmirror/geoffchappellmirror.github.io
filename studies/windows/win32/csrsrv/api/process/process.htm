<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>CSR_PROCESS</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/win32.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/win32.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="54033" -->
<h1>CSR_PROCESS </h1>
<p>The <span class="struct">CSR_PROCESS</span> structure is what CSRSRV.DLL and 
the various server DLLs in the CSRSS.EXE server process use for representing a client 
process. </p>
<h2>Documentation Status </h2>
<p>The <span class="struct">CSR_PROCESS</span> structure is not documented. Neither 
is Microsoft known to have published a C-language definition in any header from 
any software development kit. </p>
<p>Type information for the <span class="struct">CSR_PROCESS</span> 
is in public symbol files for CSRSS.EXE starting with Windows Vista. Earlier type 
information is known in a statically linked library, named GDISRVL.LIB, which Microsoft 
published with the Device Driver Kit (DDK) for Windows NT 3.51. </p>
<p>Members, but not types, are also listed by the <span class="command">!dso</span> 
command as implemented in the USEREXTS and USERKDX debugger extensions from the 
DDK for Windows 2000. </p>
<h2>Variability </h2>
<p>Considering how little of anything to do with CSRSS is documented, the
<span class="struct">CSR_PROCESS</span> is surprisingly stable. Tidying in the early 
versions and then the gradual withdrawal of functionality from CSRSS has seen the
<span class="struct">CSR_PROCESS</span> shrink but it is very well settled since 
Windows 7. The following changes of size are known: </p>
<table class="Sizes">
  <colgroup>
    <col class="Version"><col class="Size" span="2">
  </colgroup>
  <tr>
    <th>Version </th>
    <th>Size (x86) </th>
    <th>Size (x64) </th>
  </tr>
  <tr>
    <td>3.10 </td>
    <td>0xC8 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>3.51 to 5.1 </td>
    <td>0x70 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>5.2 </td>
    <td>0x6C </td>
    <td>0xB0 </td>
  </tr>
  <tr>
    <td>6.0 </td>
    <td>0x6C </td>
    <td>0xA0 </td>
  </tr>
  <tr>
    <td>6.1 to 10.0 </td>
    <td>0x60 </td>
    <td>0x90 </td>
  </tr>
</table>
<h2>Layout </h2>
<p>These sizes and the names and types in the table that follows are from type information 
in public symbol files (or such as would ordinarily be in public symbol files) for 
version 3.51 as an isolated case and for version 6.0 and higher. What’s known of 
Microsoft’s names and types for other versions is something of a guess, being inferred 
from what use CSRSRV is seen to make of the structure. Where use of a member corresponds 
closely with that of a version for which Microsoft’s symbols are available, it seems 
reasonable to suppose continuity. Some use, however, has no correspondence, the 
code having changed too much. Even where the use hasn’t changed, tracking it down 
exhaustively would be difficult, if not impossible, even with source code. </p>
<table class="Struct">
  <colgroup>
    <col class="Offset" span="2"><col class="Definition">
  </colgroup>
  <tr>
    <th>Offset (x86) </th>
    <th>Offset (x64) </th>
    <th>Definition </th>
    <th>Versions </th>
    <th>Remarks </th>
  </tr>
  <tr>
    <td>0x00 </td>
    <td>0x00 </td>
    <td>
    <pre class="source">CLIENT_ID ClientId;</pre>
    </td>
    <td>3.51 and higher </td>
    <td>previously at 0x2C </td>
  </tr>
  <tr>
    <td>0x00 (3.10) </td>
    <td>&nbsp;</td>
    <td>unaccounted four bytes </td>
    <td>3.10 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x04 (3.10); <br>
    0x08 </td>
    <td>0x10 </td>
    <td>
    <pre class="source">LIST_ENTRY ListLink;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x0C (3.10) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">CSR_PROCESS *Parent;</pre>
    </td>
    <td>3.10 only </td>
    <td>next at 0x18 </td>
  </tr>
  <tr>
    <td>0x10 </td>
    <td>0x20 </td>
    <td>
    <pre class="source">LIST_ENTRY ThreadList;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x18 (3.51 to 5.1) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">CSR_PROCESS *Parent;</pre>
    </td>
    <td>3.51 to 5.1 </td>
    <td>previously at 0x0C </td>
  </tr>
  <tr>
    <td>0x18 (3.10); <br>
    0x1C (3.51 to 5.1); <br>
    0x18 </td>
    <td>0x30 </td>
    <td>
    <pre class="source">CSR_NT_SESSION *NtSession;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x1C (3.10); <br>
    0x20 (3.51 to 5.1); <br>
    0x1C (5.2 to 6.0) </td>
    <td>0x38 (before 6.1) </td>
    <td>
    <pre class="source">ULONG ExpectedVersion;</pre>
    </td>
    <td>3.10 to 6.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x20 (3.10); <br>
    0x24 (3.51 to 5.1); <br>
    0x20 (5.2 to 6.0); <br>
    0x1C </td>
    <td>0x40 (before 6.1); <br>
    0x38 </td>
    <td>
    <pre class="source">HANDLE ClientPort;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x24 (3.10); <br>
    0x28 (3.51 to 5.1); <br>
    0x24 (5.2 to 6.0); <br>
    0x20 </td>
    <td>0x48 (before 6.1); <br>
    0x40 </td>
    <td>
    <pre class="source">CHAR *ClientViewBase;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x28 (3.10); <br>
    0x2C (3.51 to 5.1); <br>
    0x28 (5.2 to 6.0); <br>
    0x24 </td>
    <td>0x50 (before 6.1); <br>
    0x48 </td>
    <td>
    <pre class="source">CHAR *ClientViewBounds;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x2C (3.10) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">CLIENT_ID ClientId;</pre>
    </td>
    <td>3.10 only </td>
    <td>next at 0x00 </td>
  </tr>
  <tr>
    <td>0x34 (3.10); <br>
    0x30 (3.51 to 5.1); <br>
    0x2C (5.2 to 6.0); <br>
    0x28 </td>
    <td>0x58 (before 6.1); <br>
    0x50 </td>
    <td>
    <pre class="source">HANDLE ProcessHandle;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x38 (3.10); <br>
    0x34 (3.51 to 5.1); <br>
    0x30 (5.2 to 6.0); <br>
    0x2C </td>
    <td>0x60 (before 6.1); <br>
    0x58 </td>
    <td>
    <pre class="source">ULONG SequenceNumber;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x3C (3.10); <br>
    0x38 (3.51 to 5.1); <br>
    0x34 (5.2 to 6.0); <br>
    0x30 </td>
    <td>0x64 (before 6.1); <br>
    0x5C </td>
    <td>
    <pre class="source">ULONG Flags;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x40 (3.10); <br>
    0x3C (3.51 to 5.1); <br>
    0x38 (5.2 to 6.0); <br>
    0x34 </td>
    <td>0x68 (before 6.1); <br>
    0x60 </td>
    <td>
    <pre class="source">ULONG DebugFlags;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x44 (3.10); <br>
    0x40 (3.51 to 5.1); <br>
    0x3C (5.2) </td>
    <td>0x70 (late 5.2) </td>
    <td>
    <pre class="source">CLIENT_ID DebugUserInterface;</pre>
    </td>
    <td>3.10 to 5.2 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x4C (3.10); <br>
    0x48 (3.51 to 5.1); <br>
    0x44 (5.2); <br>
    0x3C (6.0); <br>
    0x38 </td>
    <td>0x80 (late 5.2); <br>
    0x6C (6.0); <br>
    0x64 </td>
    <td>
    <pre class="source">ULONG ReferenceCount;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x50 (3.10); <br>
    0x4C (3.51 to 5.1); <br>
    0x48 (5.2); <br>
    0x40 (6.0); <br>
    0x3C </td>
    <td>0x84 (late 5.2); <br>
    0x70 (6.0); <br>
    0x68 </td>
    <td>
    <pre class="source">ULONG ProcessGroupId;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x54 (3.10); <br>
    0x50 (3.51 to 5.1); <br>
    0x4C (5.2); <br>
    0x44 (6.0); <br>
    0x40 </td>
    <td>0x88 (late 5.2); <br>
    0x74 (6.0); <br>
    0x6C </td>
    <td>
    <pre class="source">ULONG ProcessGroupSequence;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x58 (3.10); <br>
    0x54 (3.51 to 5.1); <br>
    0x50 (5.2); <br>
    0x48 (6.0) </td>
    <td>0x8C (late 5.2); <br>
    0x78 (6.0) </td>
    <td>
    <pre class="source">ULONG fVDM;</pre>
    </td>
    <td>3.10 to 6.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x5C (3.10); <br>
    0x58 (3.51 to 5.1); <br>
    0x54 (5.2); <br>
    0x4C (6.0) </td>
    <td>0x90 (late 5.2); <br>
    0x7C (6.0) </td>
    <td>
    <pre class="source">ULONG ThreadCount;</pre>
    </td>
    <td>3.10 to 6.0 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x60 (3.10) </td>
    <td>&nbsp;</td>
    <td>unaccounted 0x54 bytes </td>
    <td>3.10 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="3">0xB4 (3.10); <br>
    0x5C (3.51 to 5.1); <br>
    0x58 (5.2); <br>
    0x50 (6.0); <br>
    0x44 </td>
    <td rowspan="3">0x94 (late 5.2); <br>
    0x80 (6.0); <br>
    0x70 </td>
    <td>unknown dword: foreground priority </td>
    <td>3.10 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">UCHAR PriorityClass;</pre>
    </td>
    <td>3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">ULONG LastMessageSequence;</pre>
    </td>
    <td>6.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x5D (3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">UCHAR Spare0;</pre>
    </td>
    <td>3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x5E (3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">UCHAR Spare1;</pre>
    </td>
    <td>3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x5F (3.51) </td>
    <td>&nbsp;</td>
    <td>
    <pre class="source">UCHAR Spare2;</pre>
    </td>
    <td>3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td rowspan="3">0xB8 (3.10); <br>
    0x60 (3.51 to 5.1); <br>
    0x5C (5.2); <br>
    0x54 (6.0); <br>
    0x48 </td>
    <td rowspan="3">0x98 (late 5.2); <br>
    0x84 (6.0); <br>
    0x74 </td>
    <td>unknown dword: background priority </td>
    <td>3.10 only </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">ULONG Spare3;</pre>
    </td>
    <td>3.51 </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>
    <pre class="source">ULONG NumOutstandingMessages;</pre>
    </td>
    <td>6.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xBC (3.10); <br>
    0x64 (3.51 to 5.1); <br>
    0x60 (5.2); <br>
    0x58 (6.0); <br>
    0x4C </td>
    <td>0x9C (late 5.2); <br>
    0x88 (6.0); <br>
    0x78 </td>
    <td>
    <pre class="source">ULONG ShutdownLevel;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xC0 (3.10); <br>
    0x68 (3.51 to 5.1); <br>
    0x64 (5.2); <br>
    0x5C (6.0); <br>
    0x50 </td>
    <td>0xA0 (late 5.2); <br>
    0x8C (6.0); <br>
    0x7C </td>
    <td>
    <pre class="source">ULONG ShutdownFlags;</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0x60 (6.0); <br>
    0x54 </td>
    <td>0x90 (6.0); <br>
    0x80 </td>
    <td>
    <pre class="source">LUID Luid;</pre>
    </td>
    <td>6.0 and higher </td>
    <td>&nbsp;</td>
  </tr>
  <tr>
    <td>0xC4 (3.10); <br>
    0x6C (3.51 to 5.1); <br>
    0x68 (5.2 to 6.0); <br>
    0x5C </td>
    <td>0xA8 (late 5.2); <br>
    0x98 (6.0); <br>
    0x88 </td>
    <td>
    <pre class="source">PVOID ServerDllPerProcessData [ANYSIZE_ARRAY];</pre>
    </td>
    <td>all </td>
    <td>&nbsp;</td>
  </tr>
</table>
<p>The <span class="struct">CSR_PROCESS</span> is built in a memory block that continues 
with: </p>
<ul>
  <li>as many <span class="member">ServerDllPerProcessData</span> elements as there 
  can be server DLLs; </li>
  <li>as much additional per-process space as the server DLLs have collectively 
  requested. </li>
</ul>
<p>A server DLL requests per-process space for all future processes by setting the 
wanted amount into the <span class="member">PerProcessDataLength</span> member of 
the <span class="struct">CSR_SERVER_DLL</span> during initialisation. Each server 
DLL’s allowance is aligned up to 4 bytes in version 3.10 but 8 bytes in all later 
versions. Each <span class="member">ServerDllPerProcessData</span> element points 
to the allowance for the corresponding server DLL (or is <span class="constant">
NULL</span> if the server DLL has no per-process space). </p>
<div class="Footer">
  <p class="Dates">This page was created on 21st
  <a href="../../../../../../new/19/06.htm">June 2019</a> and was last modified 
  on 26th June 2019. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c19.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2019. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="62933" -->
</div>

</body>

</html>

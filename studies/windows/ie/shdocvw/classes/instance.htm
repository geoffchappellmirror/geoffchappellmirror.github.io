<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Instance Classes</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/ie.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/ie.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="30135" -->
<h1>Instance Classes </h1>
<p>In addition to numerous creatable COM classes that SHDOCVW supports explcitly, 
each with its own CLSID, SHDOCVW also has a general type of class that is here called 
an <span class="definition">instance class</span>. An instance class acts as a sort 
of CLSID shortcut. The instance class is registered under one CLSID, but when a 
client creates an instance, what it actually gets is an instance of some other class, 
here called a <span class="definition">host class</span>. The host class may 
be any class that implements either an <span class="interface">IPropertyBag</span> 
or <span class="interface">IPersistStream</span> interface. The value of instance 
classes as a feature depends largely on the existence of host classes that usefully 
let their instances be configured from data loaded through these interfaces. </p>
<p>The details of the redirection are taken from the instance class’s registry key. 
In addition to the usual registry subkeys and values for a creatable COM class, 
there must be a subkey named <span class="regkey">Instance</span>. This, in turn, 
must have a value named <span class="regvalue">CLSID</span> which points to the 
host class: </p>
<table class="Registry">
  <tr>
    <td>Key: </td>
    <td><span class="regkey">HKEY_CLASSES_ROOT\CLSID\{<span class="placeholder">InstanceClassClsid</span>}\Instance</span>
    </td>
  </tr>
  <tr>
    <td>Value: </td>
    <td><span class="regvalue">CLSID</span> </td>
  </tr>
</table>
<p>The data may be any type but is treated as a string (with an implied expansion 
of <span class="constant">REG_EXPAND_SZ</span> data). Specifically, the data is 
interpreted as the string representation, between curly braces, of the host 
class’s CLSID. When a client creates an instance of the class whose CLSID is
<span class="placeholder">InstanceClassClsid</span>, it gets an instance of the 
host class, and this instance is initialised with data loaded from either of two 
expected subkeys. </p>
<p>If the host class implements an <span class="interface">IPropertyBag</span> 
interface, it gets initialised with properties loaded from the
<span class="regkey">InitPropertyBag</span> subkey: </p>
<table class="Registry">
  <tr>
    <td>Key: </td>
    <td><span class="regkey">HKEY_CLASSES_ROOT\CLSID\{<span class="placeholder">InstanceClassClsid</span>}\Instance\InitPropertyBag</span>
    </td>
  </tr>
  <tr>
    <td>Value: </td>
    <td><span class="regvalue"><span class="placeholder">PropertyName</span></span>
    </td>
  </tr>
  <tr>
    <td>Data: </td>
    <td><span class="placeholder">PropertyValue</span> </td>
  </tr>
</table>
<p>Each value in this subkey names a property. Each value’s data, of whatever type, 
is the property’s value. The meaningfulness of these named properties is entirely 
a matter for the host class. </p>
<p>If properties cannot be loaded via the <span class="interface">IPropertyBag</span> 
interface but the host class has an
<span class="interface">IPersistStream</span> interface, then initialisation is 
instead sought from the default value of the <span class="regkey">InitStream</span> 
subkey: </p>
<table class="Registry">
  <tr>
    <td>Key: </td>
    <td><span class="regkey">HKEY_CLASSES_ROOT\CLSID\{<span class="placeholder">InstanceClassClsid</span>}\Instance\InitStream</span>
    </td>
  </tr>
  <tr>
    <td>Value: </td>
    <td>default </td>
  </tr>
  <tr>
    <td>Data: </td>
    <td><span class="placeholder">InitialisationData</span> </td>
  </tr>
</table>
<p>The default value provides data, presumably meant to be stored as the
<span class="constant">REG_BINARY</span> type, from which to initialise the host class. 
Again, the meaningfulness of this initialisation data is entirely a matter for the 
host class. </p>
<h2>Examples </h2>
<p>Though they may seem obscure, instance classes are used in the vast majority 
of real-world Windows sessions. </p>
<p>If nothing else, almost every user of Windows XP through Windows Vista starts 
their Windows experience with two instance 
classes in plain sight. When the new style of Start Menu is prepared for 
a new user, it ordinarily begins with pinned shortcuts to the default programs for the Internet and for 
E-mail. These shortcuts are hard-coded in SHELL32 as </p>
<ul>
  <li>shell:::{2559a1f4-21d7-11d4-bdaf-00c04f60b9f0} </li>
  <li>shell:::{2559a1f5-21d7-11d4-bdaf-00c04f60b9f0} </li>
</ul>
<p>respectively. The two CLSIDs in these shortcuts are set up in the registry as representing instance 
classes. Both have the same host class, namely <span class="class">
<a href="../../../shell/shell32/classes/clientextracticon.htm">ClientExtractIcon</a></span>, 
which is implemented in SHELL32. But the <span class="regkey">InitPropertyBag</span> 
subkey for each names different properties. These point SHELL32 to the default <span class="regkey">StartMenuInternet</span> and
<span class="regkey">Mail</span> clients, respectively. Note the irony: even to 
have the pinned Start Menu shortcut for the Internet resolve to a browser that is 
not Internet Explorer, you must execute code from the main executable of Internet 
Explorer. </p>
<p>The many new-look folders that Windows Vista introduced to the Control Panel are set up as instance 
classes with <span class="class">LayoutFolder</span> as the host class. It expects 
two properties, which tell it where to find an XML template for the layout. </p>
<p>The Fonts and Administrative Tools folders have long been set up as instance 
classes with <span class="class">FolderShortcut</span> as the host class. (At 
least this class is documented.) In Windows Vista, folders such as Network, Printers 
and Public are instance classes with <span class="class">ShellFSFolder</span> as 
the host class. </p>
<h2>Availability </h2>
<p>Instance classes are supported by SHDOCVW.DLL version 5.0 and higher and IEFRAME.DLL 
version 7.0 and higher. </p>
<p>Although there is no formal documentation from Microsoft, there is a Windows 
User Interface Technical Article called
<a target="_top" href="http://msdn.microsoft.com/library/ms997573.aspx">Creating 
Shell Extensions with Shell Instance Objects</a>. It has perhaps not been updated 
since its creation in 2000. It talks specifically of “two shell objects that support 
being the host object of a shell instance object”, but there are many others, as 
noted above. Any creatable COM class, no matter who implements it, is suitable provided 
that it has either an <span class="interface">IPropertyBag</span> or
<span class="interface">IPersistStream</span> interface. </p>
<div class="Footer">
  <p class="Dates">This page was created on 3rd July 2009 and was last modified 
  on 7th April 2015. </p>
  <!--webbot bot="Include" U-Include="../../_include/c0915.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009-2015. Geoff Chappell. All rights reserved. 
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="5675" --></div>

</body>

</html>

<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>NTDBG.H</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell, Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="54033" -->
<h1>NTDBG.H </h1>
<p>The public symbol file NTKRPAMP.PDB for the original release of Windows 10 tells 
that the kernel is built with the NTDBG.H header at </p>
<blockquote>
  d:\th.public.fre\halkit\inc
</blockquote>
<p>and draws from it the following type definitions: </p>
<table>
  <colgroup>
    <col class="LineNumber">
  </colgroup>
  <tr>
    <th>Line Number </th>
    <th>Type </th>
  </tr>
  <tr>
    <td>119 </td>
    <td>struct <span class="struct">_DBGKM_EXCEPTION32</span> </td>
  </tr>
  <tr>
    <td>124 </td>
    <td>struct <span class="struct">_DBGKM_EXCEPTION64</span> </td>
  </tr>
  <tr>
    <td>3469 </td>
    <td>struct <span class="struct">_X86_DBGKD_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3482 </td>
    <td>struct <span class="struct">_IA64_DBGKD_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3488 </td>
    <td>struct <span class="struct">_AMD64_DBGKD_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3495 </td>
    <td>struct <span class="struct">_ARM_DBGKD_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3501 </td>
    <td>struct <span class="struct">_ARM64_DBGKD_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3508 </td>
    <td>struct <span class="struct">_ARMCE_DBGKD_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3514 </td>
    <td>struct <span class="struct">_PPC_DBGKD_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3521</td>
    <td>struct <span class="struct">_DBGKD_ANY_CONTROL_SET</span> </td>
  </tr>
  <tr>
    <td>3631 </td>
    <td>struct <span class="struct">_X86_KTRAP_FRAME</span> </td>
  </tr>
  <tr>
    <td>3739 </td>
    <td>struct <span class="struct">_X86_KTRAP_FRAME_BLUE</span> </td>
  </tr>
  <tr>
    <td>5237 </td>
    <td>struct <span class="struct">_DBGKD_LOAD_SYMBOLS32</span> </td>
  </tr>
  <tr>
    <td>5246 </td>
    <td>struct <span class="struct">_DBGKD_LOAD_SYMBOLS64</span> </td>
  </tr>
  <tr>
    <td>5455 </td>
    <td>struct <span class="struct">_DBGKD_READ_MEMORY32</span> </td>
  </tr>
  <tr>
    <td>5461 </td>
    <td>struct <span class="struct">_DBGKD_READ_MEMORY64</span> </td>
  </tr>
  <tr>
    <td>5499 </td>
    <td>struct <span class="struct">_DBGKD_WRITE_MEMORY32</span> </td>
  </tr>
  <tr>
    <td>5505 </td>
    <td>struct <span class="struct">_DBGKD_WRITE_MEMORY64</span> </td>
  </tr>
  <tr>
    <td>5543 </td>
    <td>struct <span class="struct">_DBGKD_GET_CONTEXT</span> </td>
  </tr>
  <tr>
    <td>5551 </td>
    <td>struct <span class="struct">_DBGKD_SET_CONTEXT</span> </td>
  </tr>
  <tr>
    <td>5555 </td>
    <td>struct <span class="struct">_DBGKD_CONTEXT_EX</span> </td>
  </tr>
  <tr>
    <td>5563 </td>
    <td>struct <span class="struct">_DBGKD_WRITE_BREAKPOINT32</span> </td>
  </tr>
  <tr>
    <td>5568 </td>
    <td>struct <span class="struct">_DBGKD_WRITE_BREAKPOINT64</span> </td>
  </tr>
  <tr>
    <td>5573 </td>
    <td>struct <span class="struct">_DBGKD_WRITE_CUSTOM_BREAKPOINT</span> </td>
  </tr>
  <tr>
    <td>5607 </td>
    <td>struct <span class="struct">_DBGKD_RESTORE_BREAKPOINT</span> </td>
  </tr>
  <tr>
    <td>5611 </td>
    <td>struct <span class="struct">_DBGKD_BREAKPOINTEX</span> </td>
  </tr>
  <tr>
    <td>5616 </td>
    <td>struct <span class="struct">_DBGKD_CONTINUE</span> </td>
  </tr>
  <tr>
    <td>5625 </td>
    <td>struct <span class="struct">_DBGKD_CONTINUE2</span> </td>
  </tr>
  <tr>
    <td>5638 </td>
    <td>struct <span class="struct">_DBGKD_READ_WRITE_IO32</span> </td>
  </tr>
  <tr>
    <td>5644 </td>
    <td>struct <span class="struct">_DBGKD_READ_WRITE_IO64</span> </td>
  </tr>
  <tr>
    <td>5678 </td>
    <td>struct <span class="struct">_DBGKD_READ_WRITE_IO_EXTENDED32</span> </td>
  </tr>
  <tr>
    <td>5687 </td>
    <td>struct <span class="struct">_DBGKD_READ_WRITE_IO_EXTENDED64</span> </td>
  </tr>
  <tr>
    <td>5730 </td>
    <td>struct <span class="struct">_DBGKD_READ_WRITE_MSR</span> </td>
  </tr>
  <tr>
    <td>5737 </td>
    <td>struct <span class="struct">_DBGKD_QUERY_SPECIAL_CALLS</span> </td>
  </tr>
  <tr>
    <td>5742 </td>
    <td>struct <span class="struct">_DBGKD_SET_SPECIAL_CALL32</span> </td>
  </tr>
  <tr>
    <td>5746 </td>
    <td>struct <span class="struct">_DBGKD_SET_SPECIAL_CALL64</span> </td>
  </tr>
  <tr>
    <td>5766 </td>
    <td>struct <span class="struct">_DBGKD_SET_INTERNAL_BREAKPOINT32</span> </td>
  </tr>
  <tr>
    <td>5781 </td>
    <td>struct <span class="struct">_DBGKD_SET_INTERNAL_BREAKPOINT64</span> </td>
  </tr>
  <tr>
    <td>5791 </td>
    <td>struct <span class="struct">_DBGKD_GET_INTERNAL_BREAKPOINT32</span> </td>
  </tr>
  <tr>
    <td>5801 </td>
    <td>struct <span class="struct">_DBGKD_GET_INTERNAL_BREAKPOINT64</span> </td>
  </tr>
  <tr>
    <td>5868 </td>
    <td>struct <span class="struct">_DBGKD_SEARCH_MEMORY</span> </td>
  </tr>
  <tr>
    <td>5878 </td>
    <td>struct <span class="struct">_DBGKD_GET_SET_BUS_DATA</span> </td>
  </tr>
  <tr>
    <td>5890 </td>
    <td>struct <span class="struct">_DBGKD_FILL_MEMORY</span> </td>
  </tr>
  <tr>
    <td>5912 </td>
    <td>struct <span class="struct">_DBGKD_QUERY_MEMORY</span> </td>
  </tr>
  <tr>
    <td>5923 </td>
    <td>struct <span class="struct">_DBGKD_SWITCH_PARTITION</span> </td>
  </tr>
  <tr>
    <td>5930 </td>
    <td>struct <span class="struct">_DBGKD_MANIPULATE_STATE32</span> </td>
  </tr>
  <tr>
    <td>5935 </td>
    <td>unnamed union <span class="member">u</span> in <span class="struct">_DBGKD_MANIPULATE_STATE32</span>
    </td>
  </tr>
  <tr>
    <td>5964 </td>
    <td>struct <span class="struct">_DBGKD_MANIPULATE_STATE64</span> </td>
  </tr>
  <tr>
    <td>5969 </td>
    <td>unnamed union <span class="member">u</span> in <span class="struct">_DBGKD_MANIPULATE_STATE64</span>
    </td>
  </tr>
</table>
<p>The header NTDBG.H is not known in any Device Driver Kit (DDK) or Windows Driver 
Kit (WDK). That said, many of the structures are well known from a different header, 
named WINDBGKD.H, that Microsoft supplied among the directories of sample code up 
to and including the DDK for Windows NT 4.0 and in the ordinary INC directory in 
the DDK for Windows 2000. Then, it appears to have been withdrawn from publication.
This was concurrent with an extensive reworking of all levels of debugger support 
in Windows XP, notably the unification of debuggers as interface layers above a 
Debugger Engine (DBGENG.DLL) and the explicit provision for kernel-mode debugging 
over transports other than a serial port. All this presumably had as a (welcome) 
consequence that the details of the kernel’s interaction with the debugger no longer 
should be any benefit to third-party programmers who sought to add to the built-in 
debugger support. </p>
<div class="Footer">
  <p class="Dates">This page was created on 23rd July 2020 but was not published 
  until 25th <a href="../../../../../../new/20/10.htm">October 2020</a>. It was 
  last modified on 26th October 2020. </p>
  <!--webbot bot="Include" U-Include="../../../_include/c20.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="61845" -->
</div>

</body>

</html>

<!doctype html>
<html lang="en">

<head>
<title>NTEXAPI_X.H</title>
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../../_styles/km.css">
<script type="text/javascript" src="../../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../../_scripts/km.js" defer></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li> 
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../index.htm">Home</a> </li><!--
     --><li class="LinkListItem"><a target="_self" href="../../../toc.htm">Table of Contents</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../about/index.htm">About This Site</a> </li>
      </ul>
      <ul class="PreferNoWrap">
        <li class="LinkListItem"><a href="../../../../../../new/index.htm">What’s New?</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../feedback/index.htm">Feedback</a> </li><!--
     --><li class="LinkListItem"><a href="../../../../../../consult/index.htm">Consult</a> </li>
      </ul>
      </li>
    </ul>
  </div>
  <div id="Logo">
    <p><span class="PreferNoWrap">Geoff Chappell -</span> <span class="PreferNoWrap">Software Analyst</span> </p>
  </div>
</div>

<!--webbot bot="Include" endspan i-checksum="43332" -->
<div class="Main">
  <h1>NTEXAPI_X.H </h1>
  <p>The public symbol file NTKRPAMP.PDB for the original release of Windows 10 
  tells that the kernel is built with the NTEXAPI_X.H header at </p>
  <blockquote>
    d:\th.public.fre\internal\sdk\inc
  </blockquote>
  <p>and draws from it the type definitions that are tabulated below. The header 
  NTEXAPI_X.H is not known in any Device Driver Kit (DDK) or Windows Driver Kit 
  (WDK). </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Line Number </th>
        <th>Type </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>251 </td>
        <td>enum <span class="enum">_PROCESSOR_CACHE_TYPE</span> </td>
      </tr>
      <tr>
        <td>260 </td>
        <td>struct <span class="struct">_CACHE_DESCRIPTOR</span> </td>
      </tr>
      <tr>
        <td>462 </td>
        <td>enum <span class="enum">_ALTERNATIVE_ARCHITECTURE_TYPE</span> </td>
      </tr>
      <tr>
        <td>567</td>
        <td>struct <span class="struct">_XSTATE_FEATURE</span> </td>
      </tr>
      <tr>
        <td>572</td>
        <td>struct <span class="struct">_XSTATE_CONFIGURATION</span> </td>
      </tr>
      <tr>
        <td>698 </td>
        <td>struct <span class="struct">
        <a href="../../inc/api/ntexapi_x/kuser_shared_data/index.htm">_KUSER_SHARED_DATA</a></span>
        </td>
      </tr>
    </tbody>
  </table>
  <p>Though only six of the types that are defined in NTEXAPI_X.H show in the public 
  symbol files for the kernel, many more show in symbol files for other modules. 
  Some of these others are kernel-mode drivers, especially for processor power management. 
  Some are user-mode DLLs. Among these are some that are very far removed from system 
  programming, e.g., URLMON.DLL from Internet Explorer. Though the symbol files 
  in question are private symbol files, Microsoft has published them freely in downloadable 
  packages of all the public symbol files for all of Windows, starting with Windows 
  8. If inclusion of these unusually detailed symbol files in these packages was 
  at first an oversight, it has been left to stand for nearly a decade, though not 
  for all modules. For instance, it ceased for URLMON.DLL after the 1709 edition 
  of Windows 10. </p>
  <h2>Anti-Trust Settlement Forensics </h2>
  <p>For the record, here are the types that Microsoft’s freely published URLMON.PDB 
  reveals were accessible to the source code for URLMON.DLL from including NTEXAPI_X.H 
  when building for the original release of 32-bit Windows 10: </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name">
    </colgroup>
    <thead>
      <tr>
        <th>Line Number </th>
        <th>Type </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>43 </td>
        <td>struct <span class="struct">_VARIABLE_NAME</span> </td>
      </tr>
      <tr>
        <td>49 </td>
        <td>struct <span class="struct">_VARIABLE_NAME_AND_VALUE</span> </td>
      </tr>
      <tr>
        <td>79 </td>
        <td>enum <span class="enum">_SYSTEM_FIRMWARE_TABLE_ACTION</span> </td>
      </tr>
      <tr>
        <td>84 </td>
        <td>struct <span class="struct">_SYSTEM_FIRMWARE_TABLE_INFORMATION</span>
        </td>
      </tr>
      <tr>
        <td>98 </td>
        <td>struct <span class="struct">_SYSTEM_FIRMWARE_TABLE_HANDLER</span>
        </td>
      </tr>
      <tr>
        <td>174 </td>
        <td>enum <span class="enum">_TIMER_SET_INFORMATION_CLASS</span> </td>
      </tr>
      <tr>
        <td>181 </td>
        <td>struct <span class="struct">_TIMER_SET_COALESCABLE_TIMER_INFO</span>
        </td>
      </tr>
      <tr>
        <td>211 </td>
        <td>struct <span class="struct">_DRIVER_VERIFIER_THUNK_PAIRS</span> </td>
      </tr>
      <tr>
        <td>462 </td>
        <td>enum <span class="enum">_ALTERNATIVE_ARCHITECTURE_TYPE</span> </td>
      </tr>
      <tr>
        <td>567 </td>
        <td>struct <span class="struct">_XSTATE_FEATURE</span> </td>
      </tr>
      <tr>
        <td>572 </td>
        <td>struct <span class="struct">_XSTATE_CONFIGURATION</span> </td>
      </tr>
      <tr>
        <td>698 </td>
        <td>struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
      </tr>
      <tr>
        <td>1276 </td>
        <td>enum <span class="enum">_SYSTEM_NET_RATE_CONTROL_TYPE</span> </td>
      </tr>
      <tr>
        <td>1281 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER</span>
        </td>
      </tr>
      <tr>
        <td>1291 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_SET_CONTEXT</span>
        </td>
      </tr>
      <tr>
        <td>1314 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT</span>
        </td>
      </tr>
      <tr>
        <td>1346 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE</span>
        </td>
      </tr>
    </tbody>
  </table>
  <h2>Reconstruction </h2>
  <p>Most, though certainly not all, of the types that the URLMON symbols attribute 
  to the unpublished NTEXAPI_X.H are defined in other headers that Microsoft does 
  publish: several in the WDK but also WINNT.H in the Software Development Kit (SDK). 
  All are in some sense the standard headers for their level of Windows programming.
  </p>
  <p>It may be that content is extracted from NTEXAPI_X.H to these standard headers. 
  It may be that all are extracted from yet some other input. However it’s done, 
  the effect looks to be that successive lines of NTEXAPI_X.H are appended to zero 
  or more of the published headers, and each of the latter then has one contiguous 
  region of lines that are each in NTEXAPI_X.H. Matching line numbers for type definitions 
  as seen in the standard headers and deduced for NTEXAPI_X.H then supports a reasonable 
  attempt at reconstructing much of what NTEXAPI_X.H must have between its type 
  definitions. The table below is a skeleton for reconstructing the NTEXAPI_X.H 
  from the original Windows 10. </p>
  <p>Types and line numbers in this table are as close to complete as seems possible. 
  They are collected from all known type information not just in symbol files as 
  noted above but also in the statically linked library CLFSMGMT.LIB from the SDK 
  for Windows 10. </p>
  <table class="LineNumbers">
    <colgroup>
      <col class="LineNumber"><col class="Name">
      <col class="LineNumber" span="2">
    </colgroup>
    <thead>
      <tr>
        <th>NTEXAPI_X.H </th>
        <th>Type </th>
        <th>NTDDK.H </th>
        <th>MINIPORT.H </th>
        <th>WDM.H </th>
        <th>WINNT.H </th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>43 </td>
        <td>struct <span class="struct">_VARIABLE_NAME</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>49 </td>
        <td>struct <span class="struct">_VARIABLE_NAME_AND_VALUE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>62 </td>
        <td>enum <span class="enum">_FIRMWARE_TYPE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>11643 </td>
      </tr>
      <tr>
        <td>79 </td>
        <td>enum <span class="enum">_SYSTEM_FIRMWARE_TABLE_ACTION</span> </td>
        <td>6888 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>84 </td>
        <td>struct <span class="struct">_SYSTEM_FIRMWARE_TABLE_INFORMATION</span>
        </td>
        <td>6893 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>98 </td>
        <td>struct <span class="struct">_SYSTEM_FIRMWARE_TABLE_HANDLER</span>
        </td>
        <td>6907 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>174 </td>
        <td>enum <span class="enum">_TIMER_SET_INFORMATION_CLASS</span> </td>
        <td>6932 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>181 </td>
        <td>struct <span class="struct">_TIMER_SET_COALESCABLE_TIMER_INFO</span>
        </td>
        <td>6939 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>211 </td>
        <td>struct <span class="struct">_DRIVER_VERIFIER_THUNK_PAIRS</span> </td>
        <td>6967 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>240 </td>
        <td>enum <span class="enum">_LOGICAL_PROCESSOR_RELATIONSHIP</span> </td>
        <td>&nbsp;</td>
        <td>5637 </td>
        <td>19151 </td>
        <td>11682 </td>
      </tr>
      <tr>
        <td>251 </td>
        <td>enum <span class="enum">_PROCESSOR_CACHE_TYPE</span> </td>
        <td>&nbsp;</td>
        <td>5648 </td>
        <td>19162 </td>
        <td>11693 </td>
      </tr>
      <tr>
        <td>260 </td>
        <td>struct <span class="struct">_CACHE_DESCRIPTOR</span> </td>
        <td>&nbsp;</td>
        <td>5657 </td>
        <td>19171 </td>
        <td>11702 </td>
      </tr>
      <tr>
        <td>268 </td>
        <td>struct <span class="struct">_SYSTEM_LOGICAL_PROCESSOR_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
        <td>5665 </td>
        <td>19179 </td>
        <td>11710 </td>
      </tr>
      <tr>
        <td>271 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_SYSTEM_LOGICAL_PROCESSOR_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
        <td>5668 </td>
        <td>19182 </td>
        <td>11713 </td>
      </tr>
      <tr>
        <td>272 </td>
        <td>unnamed struct <span class="member">ProcessorCore</span> in <br>
        anonymous union in <br>
        struct <span class="struct">_SYSTEM_LOGICAL_PROCESSOR_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
        <td>5669 </td>
        <td>19183 </td>
        <td>11714 </td>
      </tr>
      <tr>
        <td>275 </td>
        <td>unnamed struct <span class="member">NumaNode</span> in <br>
        anonymous union in <br>
        struct <span class="struct">_SYSTEM_LOGICAL_PROCESSOR_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
        <td>5672 </td>
        <td>19186 </td>
        <td>11717 </td>
      </tr>
      <tr>
        <td>283 </td>
        <td>struct <span class="struct">_PROCESSOR_RELATIONSHIP</span> </td>
        <td>&nbsp;</td>
        <td>5680 </td>
        <td>19194 </td>
        <td>11725 </td>
      </tr>
      <tr>
        <td>291 </td>
        <td>struct <span class="struct">_NUMA_NODE_RELATIONSHIP</span> </td>
        <td>&nbsp;</td>
        <td>5688 </td>
        <td>19202 </td>
        <td>11733 </td>
      </tr>
      <tr>
        <td>297 </td>
        <td>struct <span class="struct">_CACHE_RELATIONSHIP</span> </td>
        <td>&nbsp;</td>
        <td>5694 </td>
        <td>19208 </td>
        <td>11739 </td>
      </tr>
      <tr>
        <td>307 </td>
        <td>struct <span class="struct">_PROCESSOR_GROUP_INFO</span> </td>
        <td>&nbsp;</td>
        <td>5704 </td>
        <td>19218 </td>
        <td>11749 </td>
      </tr>
      <tr>
        <td>314 </td>
        <td>struct <span class="struct">_GROUP_RELATIONSHIP</span> </td>
        <td>&nbsp;</td>
        <td>5711 </td>
        <td>19225 </td>
        <td>11756 </td>
      </tr>
      <tr>
        <td>321 </td>
        <td>struct <span class="struct">_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX</span>
        </td>
        <td>&nbsp;</td>
        <td>5718 </td>
        <td>19232 </td>
        <td>11763 </td>
      </tr>
      <tr>
        <td>324 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX</span>
        </td>
        <td>&nbsp;</td>
        <td>5721 </td>
        <td>19235 </td>
        <td>11766 </td>
      </tr>
      <tr>
        <td>334 </td>
        <td>enum <span class="enum">_CPU_SET_INFORMATION_TYPE</span> </td>
        <td>&nbsp;</td>
        <td>5731 </td>
        <td>19245 </td>
        <td>11776 </td>
      </tr>
      <tr>
        <td>338 </td>
        <td>struct <span class="struct">_SYSTEM_CPU_SET_INFORMATION</span> </td>
        <td>&nbsp;</td>
        <td>5735 </td>
        <td>19249 </td>
        <td>11780 </td>
      </tr>
      <tr>
        <td>341 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_SYSTEM_CPU_SET_INFORMATION</span> </td>
        <td>&nbsp;</td>
        <td>5738 </td>
        <td>19252 </td>
        <td>11783 </td>
      </tr>
      <tr>
        <td>342 </td>
        <td>unnamed struct <span class="member">CpuSet</span> in <br>
        anonymous union in <br>
        struct <span class="struct">_SYSTEM_CPU_SET_INFORMATION</span> </td>
        <td>&nbsp;</td>
        <td>5739 </td>
        <td>19253 </td>
        <td>11784 </td>
      </tr>
      <tr>
        <td>350 </td>
        <td>anonymous union in <br>
        unnamed struct <span class="member">CpuSet</span> in <br>
        anonymous union in <br>
        struct <span class="struct">_SYSTEM_CPU_SET_INFORMATION</span> </td>
        <td>&nbsp;</td>
        <td>5747 </td>
        <td>19261 </td>
        <td>11792 </td>
      </tr>
      <tr>
        <td>358 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        unnamed struct <span class="member">CpuSet</span> in <br>
        anonymous union in <br>
        struct <span class="struct">_SYSTEM_CPU_SET_INFORMATION</span> </td>
        <td>&nbsp;</td>
        <td>5755 </td>
        <td>19269 </td>
        <td>11800 </td>
      </tr>
      <tr>
        <td>376 </td>
        <td>struct <span class="struct">_SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>11818 </td>
      </tr>
      <tr>
        <td>462 </td>
        <td>enum <span class="enum">_ALTERNATIVE_ARCHITECTURE_TYPE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>19325 </td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>567 </td>
        <td>struct <span class="struct">_XSTATE_FEATURE</span> </td>
        <td>7057 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>11968 </td>
      </tr>
      <tr>
        <td>572 </td>
        <td>struct <span class="struct">_XSTATE_CONFIGURATION</span> </td>
        <td>7062 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>11973 </td>
      </tr>
      <tr>
        <td>698 </td>
        <td>struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7186 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>872 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7360 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>875 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7363 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>944 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7432 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>946 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7434 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>988 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7476 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>991 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7479 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1125 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7613 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1127 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_KUSER_SHARED_DATA</span> </td>
        <td>7615 </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1276 </td>
        <td>enum <span class="enum">_SYSTEM_NET_RATE_CONTROL_TYPE</span> </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1281 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1291 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_SET_CONTEXT</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1295 </td>
        <td>anonymous union in <br>
        struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_SET_CONTEXT</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1297 </td>
        <td>anonymous struct in <br>
        anonymous union in <br>
        struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_SET_CONTEXT</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1314 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <td>1346 </td>
        <td>struct <span class="struct">_SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE</span>
        </td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </tbody>
  </table>
  <p>To be clear: two small structures at the start of NTEXAPI_X.H and the several 
  types at the end are known only from type information, not from any published 
  C-language definition, let alone from documentation. </p>
  <div class="Footer">
    <p class="Dates">This page was created on 26th
    <a href="../../../../../../new/20/10.htm">October 2020</a> and was last modified 
    on 8th <a href="../../../../../../new/22/12.htm">December 2022</a>. </p>
    <!--webbot bot="Include" U-Include="../../../_include/c2022.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2020-2022. Geoff Chappell. All rights reserved. 
<a href="../../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" endspan i-checksum="54407" -->
  </div>
</div>

</body>

</html>

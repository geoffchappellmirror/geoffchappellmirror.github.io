<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>IQuerySource</title>
<link rel="stylesheet" type="text/css" href="../../../../../_styles/master.css">
<link rel="stylesheet" type="text/css" href="../../../../../_styles/document.css">
<link rel="stylesheet" type="text/css" href="../../_styles/shell.css">
<script type="text/javascript" src="../../../../../_scripts/master.js"></script>
<script type="text/javascript" src="../../../../../_scripts/document.js"></script>
<script type="text/javascript" src="../../_scripts/shell.js"></script>
</head>

<body>

<!--webbot bot="Include" U-Include="../../_include/noscript.htm" TAG="BODY" startspan -->

<div class="NoScript" id="Banner">
  <div id="Links">
    <ul class="LinkList">
      <li class="LinkListItem"><a href="../../../../../index.htm"><span>Home</span></a> </li>
      <li class="LinkListItem"><a target="_self" href="../../toc.htm"><span>Table of Contents</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../about/index.htm"><span>About This Site</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../new/index.htm"><span>What’s New?</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../feedback/index.htm"><span>Feedback</span></a> </li>
      <li class="LinkListItem"><a href="../../../../../consult/index.htm"><span>Consult</span></a> </li>
    </ul>
  </div>
  <div id="Logo">
    <p>Geoff Chappell - Software Analyst </p>
  </div>
</div>

<!--webbot bot="Include" i-checksum="30135" endspan -->
<h1>IQuerySource </h1>
<table>
  <tr>
    <td rowspan="2"><span class="constant">IID_IQuerySource</span> </td>
    <td><span class="iid">{C7478486-7583-49E7-A6C2-FAF8F02BC30E}</span> </td>
    <td>original </td>
  </tr>
  <tr>
    <td><span class="iid">{7BC28AC2-0D9C-4941-BB9A-72BECB184FAC}</span> </td>
    <td>revised </td>
  </tr>
</table>
<p>The original <span class="interface">IQuerySource</span> methods are (as ordered 
in the virtual function table after the <span class="interface">IUnknown</span> 
methods): </p>
<table class="Struct">
  <tr>
    <th>Offset </th>
    <th>Method </th>
  </tr>
  <tr>
    <td>0x0C </td>
    <td><span class="method">EnumValues</span> </td>
  </tr>
  <tr>
    <td>0x10 </td>
    <td><span class="method">EnumSources</span> </td>
  </tr>
  <tr>
    <td>0x14 </td>
    <td><span class="method">QueryValueString</span> </td>
  </tr>
  <tr>
    <td>0x18 </td>
    <td><span class="method">QueryValueDword</span> </td>
  </tr>
  <tr>
    <td>0x1C </td>
    <td><span class="method">QueryValueExists</span> </td>
  </tr>
  <tr>
    <td>0x20 </td>
    <td><span class="method">QueryValueDirect</span> </td>
  </tr>
  <tr>
    <td>0x24 </td>
    <td><span class="method">OpenSource</span> </td>
  </tr>
  <tr>
    <td>0x28 </td>
    <td><span class="method">SetValueDirect</span> </td>
  </tr>
</table>
<p>with prototypes: </p>
<pre class="source">HRESULT EnumValues (IEnumString **);</pre>
<pre class="source">HRESULT EnumSources (IEnumString **);</pre>
<pre class="source">HRESULT QueryValueString (PCWSTR, PCWSTR, PWSTR *);</pre>
<pre class="source">HRESULT QueryValueDword (PCWSTR, PCWSTR, DWORD *);</pre>
<pre class="source">HRESULT QueryValueExists (PCWSTR, PCWSTR);</pre>
<pre class="source">HRESULT QueryValueDirect (PCWSTR, PCWSTR, FLAGGED_BYTE_BLOB **);</pre>
<pre class="source">HRESULT OpenSource (PCWSTR, BOOL, IQuerySource **);</pre>
<pre class="source">HRESULT SetValueDirect (PCWSTR, PCWSTR, DWORD, DWORD, PBYTE);</pre>
<p>The revision deletes one method, inserts another and rearranges the table:
</p>
<table class="Struct">
  <tr>
    <th>Offset </th>
    <th>Method </th>
  </tr>
  <tr>
    <td>0x0C </td>
    <td><span class="method">EnumValues</span> </td>
  </tr>
  <tr>
    <td>0x10 </td>
    <td><span class="method">QueryValueString</span> </td>
  </tr>
  <tr>
    <td>0x14 </td>
    <td><span class="method">QueryValueDword</span> </td>
  </tr>
  <tr>
    <td>0x18 </td>
    <td><span class="method">QueryValueGuid</span> </td>
  </tr>
  <tr>
    <td>0x1C </td>
    <td><span class="method">QueryValueExists</span> </td>
  </tr>
  <tr>
    <td>0x20 </td>
    <td><span class="method">QueryValueDirect</span> </td>
  </tr>
  <tr>
    <td>0x24 </td>
    <td><span class="method">EnumSources</span> </td>
  </tr>
  <tr>
    <td>0x28 </td>
    <td><span class="method">OpenSource</span> </td>
  </tr>
</table>
<p>with new or different prototypes: </p>
<pre class="source">HRESULT QueryValueGuid (PCWSTR, PCWSTR, GUID *);</pre>
<pre class="source">HRESULT OpenSource (PCWSTR, IQuerySource **);</pre>
<p>The methods deal with named values in a hierarchy of named sources. Each value 
has data, which may be a string, a dword, a GUID or a byte stream. A source may 
contain any number of values, and also a default value. A source may also contain 
more sources. The obvious model is the Windows registry, with keys and subkeys as 
sources. </p>
<p>Given an <span class="interface">IQuerySource</span> interface to a source, the
<span class="method">EnumValues</span> and <span class="method">EnumSources</span> 
methods provide respectively for enumerating the source’s values and sub-sources. 
The <span class="method">QueryValueString</span>, <span class="method">QueryValueDword</span>,
<span class="method">QueryValueGuid</span> and <span class="method">QueryValueDirect</span> 
methods get data in the various supported forms from a value in the source or in 
a sub-source. Each of these methods, and also <span class="method">QueryValueExists</span> 
and <span class="method">SetValueDirect</span>, take as their first two arguments
</p>
<ul>
  <li>the name of a sub-source, or NULL to represent the source; </li>
  <li>either the name of a value, or NULL to represent the default value. </li>
</ul>
<p>The <span class="method">OpenSource</span> method obtains an
<span class="interface">IQuerySource</span> interface to a named sub-source. </p>
<h2>Implementations </h2>
<p>The original implementation (in SHLWAPI) provides for query-source objects to 
represent registry keys. Instantiation is arranged by calling the exported function
<span class="function"><a href="../api/regsrc/createfromkey.htm">QuerySourceCreateFromKey</a></span>. 
Having called this function to obtain a query-source object for a particular registry 
key, the <span class="interface">IQuerySource</span> methods then provide for ways 
to: </p>
<ul>
  <li>enumerate, query and (in the original version of the interface) set values 
  in the key; </li>
  <li>enumerate subkeys; </li>
  <li>create a new query-source object for a subkey. </li>
</ul>
<p>In Windows Vista, this SHLWAPI implementation is reproduced in PROPSYS.DLL, though 
without exporting the function. </p>
<p>The revised interface also has a new implementation in SHELL32, to provide a 
hard-coded simulation of a registry tree. </p>
<h2>Availability </h2>
<p>The <span class="interface">IQuerySource</span> interface is implemented in SHLWAPI.DLL 
version 6.00 and higher, and in SHELL32.DLL version 6.00 and higher. The revision 
begins with the builds of version 6.00 from Windows Vista. </p>
<!--webbot bot="Include" U-Include="../../shell32/interfaces/_include/undoc600.htm" TAG="BODY" startspan -->

<p>Though this interface dates from 2001, it was still not documented by 
Microsoft as late as the January 2007 edition of the Windows Vista Software 
Development Kit (SDK). </p>

<!--webbot bot="Include" i-checksum="55133" endspan -->
<div class="Footer">
  <p class="Dates">This page was created on 5th July 2009 and was last modified 
  on 21st July 2009. </p>
  <!--webbot bot="Include" U-Include="../../_include/c09.htm" TAG="BODY" startspan -->

<p class="Copyright">Copyright © 2009. Geoff Chappell. All rights reserved.
<a href="../../../../../about/terms.htm">Conditions apply</a>. </p>

<!--webbot bot="Include" i-checksum="53291" endspan -->
</div>

</body>

</html>
